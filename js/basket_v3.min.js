function _typeof(e) {
    return (_typeof =
        "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
            ? function (e) {
                  return typeof e;
              }
            : function (e) {
                  return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
              })(e);
}
!(function (e, t) {
    "function" == typeof define && define.amd ? define(["jquery"], t) : "object" === ("undefined" == typeof exports ? "undefined" : _typeof(exports)) ? (module.exports = t(require("jquery"))) : t(e.jQuery);
})(this, function (p) {
    p.transit = {
        version: "0.9.12",
        propertyMap: { marginLeft: "margin", marginRight: "margin", marginBottom: "margin", marginTop: "margin", paddingLeft: "padding", paddingRight: "padding", paddingBottom: "padding", paddingTop: "padding" },
        enabled: !0,
        useTransitionEnd: !1,
    };
    var s = document.createElement("div"),
        u = {};
    function e(e) {
        if (e in s.style) return e;
        for (var t = ["Moz", "Webkit", "O", "ms"], i = e.charAt(0).toUpperCase() + e.substr(1), n = 0; n < t.length; ++n) {
            var a = t[n] + i;
            if (a in s.style) return a;
        }
    }
    var n = -1 < navigator.userAgent.toLowerCase().indexOf("chrome");
    (u.transition = e("transition")),
        (u.transitionDelay = e("transitionDelay")),
        (u.transform = e("transform")),
        (u.transformOrigin = e("transformOrigin")),
        (u.filter = e("Filter")),
        (u.transform3d = ((s.style[u.transform] = ""), (s.style[u.transform] = "rotateY(90deg)"), "" !== s.style[u.transform]));
    var m = (u.transitionEnd = { transition: "transitionend", MozTransition: "transitionend", OTransition: "oTransitionEnd", WebkitTransition: "webkitTransitionEnd", msTransition: "MSTransitionEnd" }[u.transition] || null);
    for (var t in u) u.hasOwnProperty(t) && void 0 === p.support[t] && (p.support[t] = u[t]);
    function a(e) {
        return "string" == typeof e && this.parse(e), this;
    }
    function f(e, t, i) {
        !0 === t
            ? e.queue(i)
            : t
            ? e.queue(t, i)
            : e.each(function () {
                  i.call(this);
              });
    }
    function v(e, t, i, n) {
        var a = (function (e) {
            var t = [];
            return (
                p.each(e, function (e) {
                    (e = p.camelCase(e)), (e = o((e = p.transit.propertyMap[e] || p.cssProps[e] || e))), u[e] && (e = o(u[e])), -1 === p.inArray(e, t) && t.push(e);
                }),
                t
            );
        })(e);
        p.cssEase[i] && (i = p.cssEase[i]);
        var s = y(t) + " " + i;
        0 < parseInt(n, 10) && (s += " " + y(n));
        var r = [];
        return (
            p.each(a, function (e, t) {
                r.push(t + " " + s);
            }),
            r.join(", ")
        );
    }
    function i(n, e) {
        e || (p.cssNumber[n] = !0),
            (p.transit.propertyMap[n] = u.transform),
            (p.cssHooks[n] = {
                get: function (e) {
                    return p(e).css("transit:transform").get(n);
                },
                set: function (e, t) {
                    var i = p(e).css("transit:transform");
                    i.setFromString(n, t), p(e).css({ "transit:transform": i });
                },
            });
    }
    function o(e) {
        return e.replace(/([A-Z])/g, function (e) {
            return "-" + e.toLowerCase();
        });
    }
    function r(e, t) {
        return "string" != typeof e || e.match(/^[\-0-9\.]+$/) ? "" + e + t : e;
    }
    function y(e) {
        var t = e;
        return "string" != typeof t || t.match(/^[\-0-9\.]+/) || (t = p.fx.speeds[t] || p.fx.speeds._default), r(t, "ms");
    }
    return (
        (s = null),
        (p.cssEase = {
            _default: "ease",
            in: "ease-in",
            out: "ease-out",
            "in-out": "ease-in-out",
            snap: "cubic-bezier(0,1,.5,1)",
            easeInCubic: "cubic-bezier(.550,.055,.675,.190)",
            easeOutCubic: "cubic-bezier(.215,.61,.355,1)",
            easeInOutCubic: "cubic-bezier(.645,.045,.355,1)",
            easeInCirc: "cubic-bezier(.6,.04,.98,.335)",
            easeOutCirc: "cubic-bezier(.075,.82,.165,1)",
            easeInOutCirc: "cubic-bezier(.785,.135,.15,.86)",
            easeInExpo: "cubic-bezier(.95,.05,.795,.035)",
            easeOutExpo: "cubic-bezier(.19,1,.22,1)",
            easeInOutExpo: "cubic-bezier(1,0,0,1)",
            easeInQuad: "cubic-bezier(.55,.085,.68,.53)",
            easeOutQuad: "cubic-bezier(.25,.46,.45,.94)",
            easeInOutQuad: "cubic-bezier(.455,.03,.515,.955)",
            easeInQuart: "cubic-bezier(.895,.03,.685,.22)",
            easeOutQuart: "cubic-bezier(.165,.84,.44,1)",
            easeInOutQuart: "cubic-bezier(.77,0,.175,1)",
            easeInQuint: "cubic-bezier(.755,.05,.855,.06)",
            easeOutQuint: "cubic-bezier(.23,1,.32,1)",
            easeInOutQuint: "cubic-bezier(.86,0,.07,1)",
            easeInSine: "cubic-bezier(.47,0,.745,.715)",
            easeOutSine: "cubic-bezier(.39,.575,.565,1)",
            easeInOutSine: "cubic-bezier(.445,.05,.55,.95)",
            easeInBack: "cubic-bezier(.6,-.28,.735,.045)",
            easeOutBack: "cubic-bezier(.175, .885,.32,1.275)",
            easeInOutBack: "cubic-bezier(.68,-.55,.265,1.55)",
        }),
        (p.cssHooks["transit:transform"] = {
            get: function (e) {
                return p(e).data("transform") || new a();
            },
            set: function (e, t) {
                var i = t;
                i instanceof a || (i = new a(i)), "WebkitTransform" !== u.transform || n ? (e.style[u.transform] = i.toString()) : (e.style[u.transform] = i.toString(!0)), p(e).data("transform", i);
            },
        }),
        (p.cssHooks.transform = { set: p.cssHooks["transit:transform"].set }),
        (p.cssHooks.filter = {
            get: function (e) {
                return e.style[u.filter];
            },
            set: function (e, t) {
                e.style[u.filter] = t;
            },
        }),
        p.fn.jquery < "1.8" &&
            ((p.cssHooks.transformOrigin = {
                get: function (e) {
                    return e.style[u.transformOrigin];
                },
                set: function (e, t) {
                    e.style[u.transformOrigin] = t;
                },
            }),
            (p.cssHooks.transition = {
                get: function (e) {
                    return e.style[u.transition];
                },
                set: function (e, t) {
                    e.style[u.transition] = t;
                },
            })),
        i("scale"),
        i("scaleX"),
        i("scaleY"),
        i("translate"),
        i("rotate"),
        i("rotateX"),
        i("rotateY"),
        i("rotate3d"),
        i("perspective"),
        i("skewX"),
        i("skewY"),
        i("x", !0),
        i("y", !0),
        (a.prototype = {
            setFromString: function (e, t) {
                var i = "string" == typeof t ? t.split(",") : t.constructor === Array ? t : [t];
                i.unshift(e), a.prototype.set.apply(this, i);
            },
            set: function (e) {
                var t = Array.prototype.slice.apply(arguments, [1]);
                this.setter[e] ? this.setter[e].apply(this, t) : (this[e] = t.join(","));
            },
            get: function (e) {
                return this.getter[e] ? this.getter[e].apply(this) : this[e] || 0;
            },
            setter: {
                rotate: function (e) {
                    this.rotate = r(e, "deg");
                },
                rotateX: function (e) {
                    this.rotateX = r(e, "deg");
                },
                rotateY: function (e) {
                    this.rotateY = r(e, "deg");
                },
                scale: function (e, t) {
                    void 0 === t && (t = e), (this.scale = e + "," + t);
                },
                skewX: function (e) {
                    this.skewX = r(e, "deg");
                },
                skewY: function (e) {
                    this.skewY = r(e, "deg");
                },
                perspective: function (e) {
                    this.perspective = r(e, "px");
                },
                x: function (e) {
                    this.set("translate", e, null);
                },
                y: function (e) {
                    this.set("translate", null, e);
                },
                translate: function (e, t) {
                    void 0 === this._translateX && (this._translateX = 0),
                        void 0 === this._translateY && (this._translateY = 0),
                        null != e && (this._translateX = r(e, "px")),
                        null != t && (this._translateY = r(t, "px")),
                        (this.translate = this._translateX + "," + this._translateY);
                },
            },
            getter: {
                x: function () {
                    return this._translateX || 0;
                },
                y: function () {
                    return this._translateY || 0;
                },
                scale: function () {
                    var e = (this.scale || "1,1").split(",");
                    return e[0] && (e[0] = parseFloat(e[0])), e[1] && (e[1] = parseFloat(e[1])), e[0] === e[1] ? e[0] : e;
                },
                rotate3d: function () {
                    for (var e = (this.rotate3d || "0,0,0,0deg").split(","), t = 0; t <= 3; ++t) e[t] && (e[t] = parseFloat(e[t]));
                    return e[3] && (e[3] = r(e[3], "deg")), e;
                },
            },
            parse: function (e) {
                var n = this;
                e.replace(/([a-zA-Z0-9]+)\((.*?)\)/g, function (e, t, i) {
                    n.setFromString(t, i);
                });
            },
            toString: function (e) {
                var t = [];
                for (var i in this)
                    if (this.hasOwnProperty(i)) {
                        if (!u.transform3d && ("rotateX" === i || "rotateY" === i || "perspective" === i || "transformOrigin" === i)) continue;
                        "_" !== i[0] && (e && "scale" === i ? t.push(i + "3d(" + this[i] + ",1)") : e && "translate" === i ? t.push(i + "3d(" + this[i] + ",0)") : t.push(i + "(" + this[i] + ")"));
                    }
                return t.join(" ");
            },
        }),
        (p.fn.transition = p.fn.transit = function (e, t, i, n) {
            var a = this,
                s = 0,
                r = !0,
                o = p.extend(!0, {}, e);
            "function" == typeof t && ((n = t), (t = void 0)),
                "object" === _typeof(t) && ((i = t.easing), (s = t.delay || 0), (r = void 0 === t.queue || t.queue), (n = t.complete), (t = t.duration)),
                "function" == typeof i && ((n = i), (i = void 0)),
                void 0 !== o.easing && ((i = o.easing), delete o.easing),
                void 0 !== o.duration && ((t = o.duration), delete o.duration),
                void 0 !== o.complete && ((n = o.complete), delete o.complete),
                void 0 !== o.queue && ((r = o.queue), delete o.queue),
                void 0 !== o.delay && ((s = o.delay), delete o.delay),
                void 0 === t && (t = p.fx.speeds._default),
                void 0 === i && (i = p.cssEase._default),
                (t = y(t));
            var l = v(o, t, i, s),
                c = p.transit.enabled && u.transition ? parseInt(t, 10) + parseInt(s, 10) : 0;
            if (0 === c) {
                return (
                    f(a, r, function (e) {
                        a.css(o), n && n.apply(a), e && e();
                    }),
                    a
                );
            }
            var d = {};
            return (
                f(a, r, function (e) {
                    this.offsetWidth,
                        (function (e) {
                            function t() {
                                i && a.unbind(m, t),
                                    0 < c &&
                                        a.each(function () {
                                            this.style[u.transition] = d[this] || null;
                                        }),
                                    "function" == typeof n && n.apply(a),
                                    "function" == typeof e && e();
                            }
                            var i = !1;
                            0 < c && m && p.transit.useTransitionEnd ? ((i = !0), a.bind(m, t)) : window.setTimeout(t, c),
                                a.each(function () {
                                    0 < c && (this.style[u.transition] = l), p(this).css(o);
                                });
                        })(e);
                }),
                this
            );
        }),
        (p.transit.getTransitionValue = v),
        p
    );
}),
    $.extend(
        !0,
        wb.basket,
        (function () {
            "use strict";
            $(".kruchina");
            var o,
                l,
                a,
                s,
                r,
                c = $.debounce(b, 200),
                i = { shippingIntervals: {}, deliveryInOneDay: !0, modify: !1, errorMessage: null, includeModeEnabled: !1, includeInOrderAll: !1, includeInOrder: [], otherRecipient: !1, recipient: {}, confirmCode: null, takeFromBonus: 0 },
                n =
                    ((a = []),
                    (s = $.debounce(function (e) {
                        d(e), (a = a.slice(e.length));
                    }, 3e3)),
                    (r = function (e, t) {
                        switch (t) {
                            case "wlist":
                                var i = {
                                    items: _(e).map(function (e) {
                                        return { chrtId: e.item.characteristicId, cod1S: e.item.cod1S };
                                    }),
                                };
                                return h(o.url.wlistadd, i);
                            case "postpone":
                                i = {
                                    items: _(e).map(function (e) {
                                        return { chrtId: e.item.characteristicId, cod1S: e.item.cod1S, targetUrl: e.item.targetUrl, targetCode: e.item.targetCode };
                                    }),
                                };
                                return h(o.url.postpone, i);
                            default:
                                i = {
                                    chrtIds: _(e).map(function (e) {
                                        return e.item.characteristicId;
                                    }),
                                };
                                return h(o.url.delete, i);
                        }
                    }),
                    {
                        push: function (e, t, i) {
                            var n = a.push({ method: i, $: e, item: t });
                            $.observable(t).setProperty("removed", { _idx: n - 1, method: i }), s(a);
                        },
                        abort: function (e) {
                            delete a[e.removed._idx], $.observable(e).removeProperty("removed"), s(a);
                        },
                        remove: function (e, t, i) {
                            d([{ method: i, $: e, item: t }]);
                        },
                    });
            function d(e) {
                for (
                    var i = $.grep(e, function (e) {
                            return !!e;
                        }),
                        n = [],
                        t = l.basketItemsByDeliveryDate.length - 1;
                    0 <= t;
                    t--
                ) {
                    if (
                        _(l.basketItemsByDeliveryDate[t].items).every(function (e) {
                            return !!e.removed;
                        })
                    ) {
                        var a = o.basketList.find(".j-b-list-title").eq(t);
                        (a._deff = $.Deferred()),
                            (a._i = t),
                            n.push(a._deff),
                            a.transition({
                                x: "-1700px",
                                duration: 700,
                                complete: function () {
                                    $.observable(l.basketItemsByDeliveryDate).remove(this._i),
                                        this._deff.resolve(),
                                        this.css("max-height", 0).css("padding", "0 0").css("margin", "0 0"),
                                        this.is(":first-of-type") && this.next().css("margin-top", 0);
                                },
                            });
                    }
                }
                _(i).each(function (e) {
                    var t = e.$.closest(".j-b-basket-item"),
                        i = $.Deferred();
                    n.push(i),
                        t.transition({
                            x: "-1700px",
                            duration: 700,
                            complete: function () {
                                !(function (e) {
                                    for (var t = [], i = 0; i < l.basketItemsByDeliveryDate.length; i++)
                                        for (var n = 0; n < l.basketItemsByDeliveryDate[i].items.length; n++) l.basketItemsByDeliveryDate[i].items[n].characteristicId == e && t.push({ parentIndex: i, index: n });
                                    t.reverse(),
                                        _.each(t, function (e) {
                                            1 === l.basketItemsByDeliveryDate[e.parentIndex].items.length
                                                ? $.observable(l.basketItemsByDeliveryDate).remove(e.parentIndex)
                                                : $.observable(l.basketItemsByDeliveryDate[e.parentIndex].items).remove(e.index);
                                        });
                                })(e.item.characteristicId),
                                    i.resolve(),
                                    e.$.css("max-height", 0).css("padding", "0 0").css("min-height", "0").css("margin", "0 0");
                            },
                        });
                }),
                    $.when.apply(void 0, n).then(function () {
                        var e = _(i).groupBy("method"),
                            t = _(e).map(r);
                        $.when.apply(void 0, t).then(function () {
                            _(i).each(function (e) {
                                ("postpone" !== e.method && "delete" !== e.method) || m(e.item);
                            });
                        });
                    });
            }
            return {
                init: function (e) {
                    (function (e) {
                        (i.allIncluded = function () {
                            return !!this.includeModeEnabled && this.includeInOrder.length === this.totalAvailableItemsCount && this.areAllIncludedItemsCanBeOrdered;
                        }),
                            (i.allIncluded.set = function (e) {
                                y(e), l.includeInOrder.length ? f() : v();
                            }),
                            (i.allIncluded.depends = ["includeInOrder^length"]),
                            ((l = $.extend(i, e)).prevPaymentId = (l.paymentType || {}).id),
                            $(".j-b-lk-basket").link(!0, l, {});
                        function n(e) {
                            $.observable(l).setProperty("modify", !1), e && clearTimeout(e);
                        }
                        $.observe(l, "contactlessDelivery", function (e, t) {
                            if (!l._hack && l.modify) {
                                var i = setTimeout(n, 5e3);
                                (l._hack = !0),
                                    f({ contactlessDelivery: t.value }).always(function () {
                                        n(i), (l._hack = !1);
                                    });
                            }
                        }),
                            $.observe(l, "wantPaperBill", function (e, t) {
                                if (!l._hack && l.modify) {
                                    var i = setTimeout(n, 5e3);
                                    (l._hack = !0),
                                        f({ contactlessDelivery: "courier" === l.deliveryWay && l.contactlessDelivery }).always(function () {
                                            n(i), (l._hack = !1);
                                        });
                                }
                            }),
                            $.observe(l, "paymentType^id", function (e, t) {
                                if (!l._hack && l.modify && "id" == t.path && t.oldValue != t.value) {
                                    window._debug && console.log("paymentTypeId changed old:" + t.oldValue + " new:" + t.value), (l.prevPaymentId = t.oldValue);
                                    var i = setTimeout(n, 5e3);
                                    (l._hack = !0),
                                        f({ contactlessDelivery: "courier" === l.deliveryWay && l.contactlessDelivery }).always(function () {
                                            n(i), (l._hack = !1);
                                        });
                                }
                            }),
                            $.observe(l, "deliveryWay", function (e, t) {
                                if (l.modify && t.oldValue != t.value) {
                                    window._debug && console.log("deliveryWay changed old:" + t.oldValue + " new:" + t.value), (l.renderDeliveryPoint = !0);
                                    var i = setTimeout(n, 5e3);
                                    f({ contactlessDelivery: "courier" === l.deliveryWay && l.contactlessDelivery }).always(function () {
                                        n(i);
                                    });
                                }
                            }),
                            $.observable(l).observeAll(function (e, t) {
                                if (l.modify && "selectedAddressId" === t.path && t.oldValue != t.value) {
                                    window._debug && console.log("selectedAddressId changed old:" + t.oldValue + " new:" + t.value), (l.renderDeliveryPoint = !0);
                                    var i = setTimeout(n, 5e3);
                                    f({ contactlessDelivery: "courier" === l.deliveryWay && l.contactlessDelivery }).always(function () {
                                        n(i);
                                    });
                                }
                            });
                    })((o = $.extend(o, e)).data),
                        $(".order-details")
                            .on("click", "a.j-anchor", function (e) {
                                var t = $(this).attr("href");
                                if (-1 < t.indexOf("#")) {
                                    e.preventDefault();
                                    var i = t.substr(t.indexOf("#"));
                                    $.scrollTo(i);
                                    var n = $(i).find("input:visible:first");
                                    !n.length || n.prop("disabled") || n.prop("readonly") || n.focus();
                                }
                            })
                            .on("mouseenter", ".j-basket-tooltip", function () {
                                var e = $(this);
                                e.data("plugin_tooltipster") || e.tooltipster().tooltipster("show");
                            }),
                        o.basketList
                            .on("change", ".in_tb", function (e) {
                                e.preventDefault();
                                var t = parseInt(this.value, 10);
                                if (isNaN(t)) this.value = g(this).quantity;
                                else {
                                    t <= 0 ? (t = 1) : 255 < t && (t = 255);
                                    var i = g(this);
                                    I({ id: i.id, showLimit: t > i.maxQuantity, quantity: t < i.minQuantity ? i.minQuantity : t }), t > i.maxQuantity || t < i.minQuantity || b(i.id, i.characteristicId, t);
                                }
                            })
                            .on("click", "a.j-product-popup", function (e) {
                                e.preventDefault(), e.stopImmediatePropagation();
                                var t = g(this);
                                OpenNewPopup(t.cod1S, t.characteristicId, $(this).hasClass("j-product-replace") ? t.id : null);
                            })
                            .on("click", ".action a._clicked, .soldlinks a._clicked, button.plus._clicked, button.minus._clicked", function (e) {
                                e.preventDefault(), e.stopImmediatePropagation();
                            })
                            .on("click", ".action a, .soldlinks a", function (e) {
                                e.preventDefault(), $(this).toggleClass("_clicked");
                            })
                            .on("click", ".j-btn-restore-item", function (e) {
                                e.preventDefault();
                                var t = g(this);
                                n.abort(t);
                            })
                            .on("click", ".j-basket-item-del, .j-basket-item-wlist-add, .j-basket-item-postpone", function (e) {
                                e.preventDefault();
                                var t = g(this),
                                    i = { chrtIds: [t.characteristicId] },
                                    n = $(this),
                                    a = o.url.delete,
                                    s = $.view(this).getIndex(),
                                    r = $.view($(this).closest(".j-b-basket-list-part")).getIndex();
                                1 === l.basketItemsByDeliveryDate[r].items.length ? $.observable(l.basketItemsByDeliveryDate).remove(r) : $.observable(l.basketItemsByDeliveryDate[r].items).remove(s),
                                    n.hasClass("j-basket-item-wlist-add")
                                        ? ((a = o.url.wlistadd), (i = { items: [{ chrtId: t.characteristicId, cod1S: t.cod1S }] }))
                                        : n.hasClass("j-basket-item-postpone") && ((a = o.url.postpone), (i = { items: [{ chrtId: t.characteristicId, cod1S: t.cod1S, targetUrl: t.targetUrl, targetCode: t.targetCode }] })),
                                    h(
                                        a,
                                        i,
                                        function (e) {
                                            $.processResponse(
                                                e,
                                                function () {
                                                    (n.hasClass("j-basket-item-del") || n.hasClass("j-basket-item-postpone")) && m(t);
                                                },
                                                !1
                                            );
                                        },
                                        null
                                    );
                            })
                            .on("click", "button.plus, button.minus", function (e) {
                                e.preventDefault();
                                var t = g(this),
                                    i = parseInt(t.quantity || 0, 10),
                                    n = $(this);
                                if (!n.closest("tr.express-del").length) {
                                    if (n.hasClass("plus")) {
                                        if (255 == i) return;
                                        (i += 1) < 1 && (i = 1);
                                    } else {
                                        if (i <= t.minQuantity) return;
                                        --i > t.maxQuantity && (i = t.maxQuantity);
                                    }
                                    I({ quantity: i > t.maxQuantity ? t.maxQuantity : i, id: t.id, showLimit: i > t.maxQuantity }),
                                        i > t.maxQuantity ||
                                            (i < t.minQuantity ? (i = t.minQuantity) : 255 < i && (i = 255),
                                            i < 6
                                                ? (n.addClass("_clicked"),
                                                  b(t.id, t.characteristicId, i).done(function () {
                                                      n.removeClass("_clicked");
                                                  }))
                                                : c(t.id, t.characteristicId, i));
                                }
                            }),
                        $("body")
                            .on("click", "[data-scroll]", function () {
                                var e = $(this).attr("data-scroll");
                                e && $("body,html").animate({ scrollTop: $(e).offset().top - 30 }, 300);
                            })
                            .on("mouseenter", ".j-need-tooltip", function () {
                                var e = $(this);
                                if (!e.data("plugin_tooltipster")) {
                                    var t = e.attr("data-content") ? e.siblings("." + e.attr("data-content")) : null,
                                        i = (e.attr("data-offset") || "0;0").split(";"),
                                        n = e.attr("data-trigger") || "hover",
                                        a = e.tooltipster({
                                            contentCloning: void 0 !== e.attr("data-content-cloning"),
                                            position: e.attr("data-pos"),
                                            trigger: n,
                                            theme: $.trim("tooltipster-default " + (e.attr("data-theme") || "")),
                                            content: t ? t.children() : null,
                                            functionBefore: function (e, t) {
                                                e.removeAttr("title"), e.hasClass("j-need-tooltip") && t();
                                            },
                                            offsetX: i[0],
                                            offsetY: i[1],
                                        });
                                    "hover" == n && a.tooltipster("show");
                                }
                            })
                            .on("tooltip-content-update", ".j-need-tooltip.tooltipstered", function () {
                                var e = $(this),
                                    t = e.attr("data-content") ? e.siblings("." + e.attr("data-content")) : null;
                                e.tooltipster("content", t ? t.children() : e.attr("title"));
                            }),
                        o.bindEvents && o.bindEvents(o),
                        o.basketForm &&
                            (function () {
                                var n = o.basketForm;
                                n.on("invalid-form", function (e, t) {
                                    if (t.numberOfInvalids()) {
                                        var i = n.find("[name='" + t.errorList[0].element.attributes.name.nodeValue + "']");
                                        i.is(":hidden") && (i = i.closest(":visible")), wb.utils.isElementInViewport(i) || p(i);
                                    }
                                }).on("keypress", function (e) {
                                    13 == e.keyCode && e.preventDefault();
                                });
                            })();
                    var t = o.notification && _(o.notification).findWhere({ messageType: 0 });
                    t && u(t.text.join("<br>"));
                },
                listUpdate: h,
                refresh: f,
                getSettings: function () {
                    return o;
                },
                setShippingInterval_v2: function (t, i) {
                    var e = _.find(l.basketItemsByDeliveryDate, function (e) {
                            return 0 < _.intersection(e._storeIds, t).length;
                        }),
                        n = $.extend(e.shippingInterval, i);
                    $.observable(e).removeProperty("shippingInterval"),
                        $.observable(e).setProperty("shippingInterval", n),
                        $.observable(l).setProperty("deliveryIntervalTxt", n.deliveryDate + ", " + n.fromTime + " - " + n.toTime),
                        $.observable(l.simpleDeliveryDates).refresh([l.deliveryIntervalTxt]),
                        $(".j-b-lk-basket").find(".j-need-tooltip[data-content-cloning]").trigger("tooltip-content-update"),
                        $.each(t, function (e, t) {
                            $.observable(l.shippingIntervals).setProperty(t.toString(), i);
                        });
                },
                resetShippingIntervals_v2: function () {
                    l.shippingIntervals = {};
                },
                _test: function (e, t, i) {
                    $.observable(l.basketItemsByDeliveryDate[e].items[t]).setAllProperty(i);
                },
                _test2: function (e) {
                    $.observable(l).setAllProperty(e);
                },
                _test3: function (e) {
                    $.observable(l.deliveryPoint).setAllProperty(e);
                },
                getBasketItem: function (e, t) {
                    return l.basketItemsByDeliveryDate[e].items[t];
                },
                getBasketModel: function () {
                    return l;
                },
                scrollTo: p,
                removeCoupon: function () {
                    $.observable(l).setProperty("appliedCouponInfo.couponNumber", null),
                        $.observable(l).setProperty("appliedCouponInfo.paymentRestriction", null),
                        $.observable(l).setProperty("appliedCouponInfo.deliveryRestriction", -1),
                        $.observable(l).setProperty("isCouponAppliedForAnyGood", !1),
                        f();
                },
                setProperty: function (e, t) {
                    $.observable(l).setProperty(e, t);
                },
                disableBasket: v,
                toggleItemInOrder: function (e) {
                    var t = l.includeInOrder.indexOf(e);
                    -1 === t ? $.observable(l.includeInOrder).insert(e) : $.observable(l.includeInOrder).remove(t), (l.noneIncludedInOrder = l.includeModeEnabled && 0 == l.includeInOrder.length), l.noneIncludedInOrder && y(!1);
                },
                toggleAllItemsInOrder: y,
                replaceItemsInOrder: function (e) {
                    $.observable(l.includeInOrder).refresh(e);
                },
                recalcManyInBasket: function (t) {
                    var e = {
                        items: _(t).map(function (e) {
                            return { characteristicId: e.characteristicId, quantity: e.quantity };
                        }),
                    };
                    return h(o.url.recalcmany, e, function (e) {
                        $.processResponse(
                            e,
                            function (i) {
                                for (var n = 0; n < i.basket.basketItemsByDeliveryDate.length; n++)
                                    _(t).each(function (e) {
                                        var t = _.findWhere(i.basket.basketItemsByDeliveryDate[n].items, { id: e.id });
                                        l.basketItemsByDeliveryDate[n] && t && D(l.basketItemsByDeliveryDate[n].items, t);
                                    });
                            },
                            !1
                        );
                    });
                },
            };
            function p(e) {
                e && $("body,html").animate({ scrollTop: $(e).offset().top - 30 }, 300);
            }
            function u(e) {
                $(function () {
                    e && e.length && $.renderModalError($.localize("Внимание!") + "<br>" + e, null, null, null, !0);
                });
            }
            function m(e) {
                if (window.APRT_DATA && window.APRT_SEND && window.APRT_DATA.basketProducts) {
                    var t = e.cod1S,
                        i = e.priceWithCouponAndDiscount,
                        n = $.grep(window.APRT_DATA.basketProducts, function (e) {
                            return e.id == t && -1 < e.price.toString().indexOf(i);
                        })[0];
                    n && window.APRT_SEND({ pageType: 9, currentProduct: n });
                }
            }
            function f(e) {
                return l && o.url.refresh ? h(o.url.refresh, e) : $.Deferred().resolve().promise();
            }
            function v() {
                $.observable(l).setProperty("totalQuantity", 0),
                    $.observable(l).setProperty("totalDiscount", 0),
                    $.observable(l).setProperty("totalBonuses", 0),
                    $.observable(l).setProperty("isCouponAppliedForAnyGood", !1),
                    $.observable(l.deliveryPoint).setProperty("deliveryPrice", 0),
                    $.observable(l).setProperty("totalPriceWithCouponAndPersDisc", 0),
                    $.observable(l).setProperty("totalPriceWithCouponPersDiscAndDeliveryPrice", 0),
                    $.observable(l).setProperty("totalPrice", 0),
                    $.observable(l).setProperty("totalPriceToPay", 0),
                    $.observable(l).setProperty("takeFromWallet", 0);
            }
            function y(a) {
                _(l.basketItemsByDeliveryDate).each(function (e, n) {
                    0 !== e.deliveryDate &&
                        _(e.items).each(function (e, t) {
                            var i = l.includeInOrder.indexOf(e.characteristicId);
                            a ? -1 === i && $.observable(l.includeInOrder).insert(e.characteristicId) : $.observable(l.includeInOrder).remove(i), $.observable(l.basketItemsByDeliveryDate[n].items[t]).setProperty("includeInOrder", a);
                        });
                }),
                    $.observable(l).setProperty({ noneIncludedInOrder: l.includeModeEnabled && 0 == l.includeInOrder.length });
            }
            function b(n, e, t) {
                var i = {};
                return (
                    (i.basketItemId = n),
                    (i.quantity = t),
                    (i.chrtId = e),
                    h(o.url.recalc, i, function (e) {
                        $.processResponse(
                            e,
                            function (e) {
                                for (var t = 0; t < e.basket.basketItemsByDeliveryDate.length; t++) {
                                    var i = _.findWhere(e.basket.basketItemsByDeliveryDate[t].items, { id: n });
                                    l.basketItemsByDeliveryDate[t] && D(l.basketItemsByDeliveryDate[t].items, i);
                                }
                            },
                            !1
                        );
                    })
                );
            }
            function h(e, t, i, n) {
                var a = {};
                return (
                    o.onPreparedModel && $.extend(a, o.onPreparedModel()),
                    $.extend(a, t),
                    $.post(
                        e,
                        $.param(a),
                        function (e) {
                            i && i(e),
                                $.processResponse(
                                    e,
                                    function (e) {
                                        e && k(e, n, a);
                                    },
                                    function (e) {
                                        "string" == typeof e ? u(e) : e && k(e, n, a), $("._clicked").removeClass("_clicked");
                                    }
                                );
                        },
                        "json"
                    ).fail(function () {
                        $("._clicked").removeClass("_clicked");
                    })
                );
            }
            function g(e) {
                return $.view(e).data;
            }
            function k(e, t, i) {
                void 0 === e.basket.appliedCouponInfo.couponNumber && (e.basket.appliedCouponInfo.couponNumber = null),
                    o.onBeforeDraw && (e.basket = o.onBeforeDraw(e.basket, i)),
                    (function (e) {
                        var t = performance.now();
                        $.observable(l).setAllProperty(e), l.paymentType && e.paymentType && $.observable(l.paymentType.payments).refresh(e.paymentType.payments);
                        (function (e) {
                            for (var i = 0; i < e.basketItemsByDeliveryDate.length; i++)
                                if (l.basketItemsByDeliveryDate.length !== i) {
                                    $.observable(l.basketItemsByDeliveryDate[i]).setAllProperty(e.basketItemsByDeliveryDate[i]),
                                        $.observable(l.basketItemsByDeliveryDate[i]._storeIds).refresh(e.basketItemsByDeliveryDate[i]._storeIds),
                                        $.observable(l.basketItemsByDeliveryDate[i]).removeProperty("shippingInterval"),
                                        $.observable(l.basketItemsByDeliveryDate[i]).setProperty("shippingInterval", e.basketItemsByDeliveryDate[i].shippingInterval);
                                    var t = new P(l.basketItemsByDeliveryDate[i].items);
                                    if (l.basketItemsByDeliveryDate[i].items.length !== e.basketItemsByDeliveryDate[i].items.length || t.needRefreshBasketItems(e.basketItemsByDeliveryDate[i].items))
                                        $.observable(l.basketItemsByDeliveryDate[i].items).refresh(e.basketItemsByDeliveryDate[i].items);
                                    else {
                                        var n = t.getNotValidIds(e.basketItemsByDeliveryDate[i].items);
                                        n.length &&
                                            $.each(e.basketItemsByDeliveryDate[i].items, function (e, t) {
                                                -1 < n.indexOf(t.id) && D(l.basketItemsByDeliveryDate[i].items, t);
                                            });
                                    }
                                } else $.observable(l.basketItemsByDeliveryDate).insert(e.basketItemsByDeliveryDate[i]);
                            if (l.basketItemsByDeliveryDate.length > e.basketItemsByDeliveryDate.length)
                                for (var a = e.basketItemsByDeliveryDate.length; a < l.basketItemsByDeliveryDate.length; ) $.observable(l.basketItemsByDeliveryDate).remove(a);
                        })(e),
                            (l.renderDeliveryPoint || (!l.deliveryPoint && e.deliveryPoint)) && ($.observable(l).setProperty("deliveryPoint", e.deliveryPoint), (l.renderDeliveryPoint = !1));
                        l.prevPaymentId != (e.paymentType || {}).id && ($.observable(l).setProperty("paymentType", e.paymentType), (l.prevPaymentId = (e.paymentType || {}).id));
                        e.paymentOnlineGroup && (l.paymentOnlineGroup ? $.observable(l.paymentOnlineGroup.payments).refreshArray(e.paymentOnlineGroup.payments) : $.observable(l).setProperty("paymentOnlineGroup", e.paymentOnlineGroup));
                        e.paymentCash && !l.paymentCash && $.observable(l).setProperty("paymentCash", e.paymentCash);
                        $.observable(l.canBeOrderedItems).refresh(e.canBeOrderedItems || []),
                            $.observable(l.simpleDeliveryDates).refresh([]),
                            $.observable(l.simpleDeliveryDates).refresh(e.simpleDeliveryDates || []),
                            l.noneIncludedInOrder && v();
                        var i = performance.now();
                        window._debug && console.log(i - t);
                    })(e.basket),
                    e.basketShortInfo && wb.basket.basketShortUpdate && wb.basket.basketShortUpdate(e.basketShortInfo),
                    t || (e.modelErrors && u(e.modelErrors)),
                    o.onRefresh && o.onRefresh(e, t),
                    $(".j-b-lk-basket").find(".j-need-tooltip[data-content-cloning]").trigger("tooltip-content-update"),
                    $(window).trigger("basket-refresh", e, t);
            }
            function I(e) {
                for (var t = 0; t < l.basketItemsByDeliveryDate.length; t++) D(l.basketItemsByDeliveryDate[t].items, e);
            }
            function D(e, i) {
                if (i) {
                    var t = Number(
                        $.map(e, function (e, t) {
                            if (e.id == i.id) return t;
                        })[0]
                    );
                    isNaN(t) || $.observable(e[t]).setAllProperty(i);
                }
            }
            function P(e) {
                function n(t) {
                    var e = Object.keys(t),
                        i = $.grep(e, function (e) {
                            return "object" !== _typeof(t[e]) && !Array.isArray(t[e]);
                        });
                    return $.map(i, function (e) {
                        return e + t[e];
                    }).join("|");
                }
                (this.basketItems = e),
                    (this.needRefreshBasketItems = function (e) {
                        if (this.basketItems.length !== e.length) return !0;
                        function t(t) {
                            return _.map(i, function (e) {
                                return t[e];
                            }).join("|");
                        }
                        var i = ["id"],
                            n = $.map(this.basketItems, t),
                            a = $.map(e, t);
                        return _.difference(n, a).length;
                    }),
                    (this.getNotValidIds = function (i) {
                        return $.map(this.basketItems, function (e, t) {
                            if (n(e) !== n(i[t])) return e.id;
                        });
                    });
            }
        })()
    ),
    (function (n) {
        (n.fn.bqm = function (t) {
            var i = { cls: "away", closeSelector: ".j-close-popup-bottom" };
            return this.each(function () {
                if (this._bqm) return (s[this._bqm].c = n.extend({}, s[this._bqm].c, t));
                a++, (this._bqm = a), (s[a] = { c: n.extend(i, t), w: n(this).addClass("bqmID" + a), s: a });
                var e = n(this);
                e.on("click", s[this._bqm].c.closeSelector, function () {
                    e.bqmHide();
                });
            });
        }),
            (n.fn.bqmShow = function () {
                return this.each(function () {
                    n(this).removeClass(s[this._bqm].c.cls);
                });
            }),
            (n.fn.bqmHide = function () {
                return this.each(function () {
                    var e = n(this);
                    e.addClass(s[this._bqm].c.cls),
                        setTimeout(function () {
                            e.remove();
                        }, 1e3);
                });
            });
        var a = 0,
            s = {};
    })(jQuery),
    $.extend(wb.basket, {
        registered: function (m) {
            var f = wb.basket,
                v = $("#basketForm"),
                i = $("#basket-list"),
                r = new wb.userAddress.management({ version: 1 }),
                t = $.debounce(f.refresh, 300);
            return (
                $.views.helpers({
                    toggleProp: function (e, t) {
                        var i = wb.basket.getBasketModel();
                        $.observable(i).setProperty(e, !i[e]);
                    },
                    togglePropWithRefresh: function (e, t) {
                        $.views.helpers.toggleProp(e, t), wb.basket.refresh();
                    },
                    toggleProp2: function (e, t, i, n) {
                        var a = n.linkCtx.data;
                        $.observable(a).setProperty(e, void 0 !== t ? t : !a[e]);
                    },
                    toggleIncludeInOrder: function () {
                        var e = wb.basket.getBasketModel();
                        e.hasSomeLargeGoods &&
                            (((e.hasLargeGoodsInOrder && !this.isLargeItem) || (!e.hasLargeGoodsInOrder && this.isLargeItem)) && wb.basket.replaceItemsInOrder([]),
                            "courier" !== e.deliveryWay && this.isLargeItem && $.observable(e).setProperty({ deliveryWay: "courier" })),
                            wb.basket.toggleItemInOrder(this.characteristicId),
                            wb.basket.refresh();
                    },
                    toggleIncludeMode: function () {
                        var e = wb.basket.getBasketModel();
                        $.observable(e).setProperty("includeModeEnabled", !e.includeModeEnabled), wb.basket.toggleAllItemsInOrder(!1), e.includeModeEnabled ? wb.basket.disableBasket() : wb.basket.refresh();
                    },
                    selectGoodsByType: function (i, e) {
                        var t = [],
                            n = wb.basket.getBasketModel();
                        if ("all" !== i) {
                            n = wb.basket.getBasketModel();
                            t = _.chain(n.basketItemsByDeliveryDate)
                                .map(function (e, t) {
                                    return _.chain(e.items)
                                        .where({ isLargeItem: "onlylarge" === i })
                                        .pluck("characteristicId")
                                        .value();
                                })
                                .flatten()
                                .uniq()
                                .value();
                        }
                        "courier" !== n.deliveryWay && "onlylarge" === i && $.observable(n).setProperty({ deliveryWay: "courier" }), wb.basket.replaceItemsInOrder(t), (n.noneIncludedInOrder = null), e && wb.basket.refresh();
                    },
                    toggleElevatorSelection: function (e) {
                        var t = wb.basket.getBasketModel(),
                            i = !t.needFloorLift;
                        $.observable(t).setProperty("needFloorLift", i), $(e.target).parent().next("div").slideToggle(i);
                    },
                    priceDiff: function (e, t) {
                        return e - t;
                    },
                    toggleBasketItems: function (e) {
                        var t = !this._hidden;
                        i.find(".j-b-list-content").eq(e).slideToggle(t), $.observable(this).setProperty("_hidden", t);
                    },
                    findWhereInCollection: function (e, t, i) {
                        var n = {};
                        return (n[t] = i), _.findWhere(e, n);
                    },
                    filterGroupByDeliveryNums: function (i) {
                        return _.filter(wb.basket.getBasketModel().basketItemsByDeliveryDate, function (e, t) {
                            return -1 != i.indexOf(e.deliveryNum);
                        });
                    },
                    findGroupByStoreIds: function (e) {
                        for (var t = wb.basket.getBasketModel().basketItemsByDeliveryDate, i = 0; i < t.length; i++) for (var n = 0; n < t[i]._storeIds.length; n++) if (-1 < e.indexOf(t[i]._storeIds[n])) return t[i];
                    },
                    isWeekend: function (e) {
                        var t = new Date(e).getDay();
                        return 6 === t || 0 === t;
                    },
                    onCalendarSelect: function (e, t) {
                        e.preventDefault();
                        var i = $.view($(e.target).closest(".j-b-calendar")).data,
                            n = new Date(t.view.ctx.date[0].data.key),
                            a = t.view.data.key,
                            s = t.view.data.value,
                            r = i.storeIds,
                            o = s.split(" - "),
                            l = {
                                isTomorrow: 1 === new Date().daysBetween(n),
                                fromTime: o[0],
                                toTime: o[1],
                                intervalId: Number(a),
                                storageDate: null,
                                withinDaysToDelivery: null,
                                deliveryDate: n.format("d MMMM").toLowerCase(),
                                deliveryDateShort: n.format("M/d/yyyy"),
                            };
                        window._debug && console.log("onCalendarSelect", l), f.setShippingInterval_v2(r, l), $.observable(i).setProperty("_selectDateTime", !1);
                    },
                    editAddress: function (e, t) {
                        var i = f.getBasketModel();
                        r.spec[i.deliveryWay].editRecord
                            .call(e.target, e, function () {})
                            .done(function (e) {
                                var t = _.findWhere(i.deliveryWays, { code: i.deliveryWay });
                                t && ($.observable(t).setProperty("deliveryPoints", e), (i.modify = !0), $.observable(t).setProperty("selectedAddressId", 0 < e.length ? e[0].addressId : null));
                            });
                    },
                    showMap: function (e) {
                        e.preventDefault();
                        f.getBasketModel();
                        r.spec.self.showRecord.call(e.target, e, function () {});
                    },
                    setModified: function (e) {
                        $.observable(f.getBasketModel()).setProperty("modify", !0), "address" === e && $('div[class*="bqmID"]:visible').bqmHide();
                    },
                    setPayment: function (e, t, i) {
                        $.views.helpers.setModified();
                        var n = f.getBasketModel();
                        i.linkCtx.elem.checked ? $.observable(n).setProperty("paymentType.id", e) : $.observable(n).removeProperty("paymentType.id");
                    },
                    toggleWantPaperBill: function (e, t) {
                        $.views.helpers.setModified();
                        var i = f.getBasketModel();
                        $.observable(i).setProperty("wantPaperBill", !t.linkCtx.elem.checked);
                    },
                    selectRecipient: function (e, t) {
                        $.observable(f.getBasketModel().recipient).setProperty(this),
                            $.each(v.validate().invalid, function (e, t) {
                                -1 < e.indexOf("Recipient") && v.find("[name='" + e + "']").valid();
                            });
                    },
                    changePhone: function (e, t) {
                        var i = $(t.target)
                            .val()
                            .replace(/[^\d\.]/g, "");
                        i > m.phone.minLength ? $.observable(f.getBasketModel()).setProperty(e, i) : $.observable(f.getBasketModel()).setProperty(e, null),
                            setTimeout(function () {
                                $(t.target).valid();
                            });
                    },
                    selectDayOfWeek: function (e, t) {
                        var n = f.getBasketModel().deliveryPoint.workLoad.levelsOfWeek[e.target.value];
                        $(".j-b-workload-lines .line").each(function (e, t) {
                            var i = $(this);
                            i.css("width", "0%"),
                                setTimeout(function () {
                                    i.removeClass("line_1 line_2 line_3")
                                        .addClass("line_" + n[e])
                                        .css("width", i.attr("data-anim-width") + "%");
                                }, 200);
                        });
                    },
                    filterTimesOfDay: function (e, t, i) {
                        return 0 == (1 & t);
                    },
                    showConscienceTerms: wb.showConscienceTermsPopup,
                    enableDelay: function (e) {
                        var t = wb.basket.getBasketModel();
                        return wb.showEmpDelayTermsPopup($.views.converters.formatMoneyV2(t.empDelayLimit, !1, !0), function () {
                            wb.basket.refresh();
                        });
                    },
                    refreshBasket: function () {
                        var e = wb.basket.getBasketModel();
                        e._refreshBasket ||
                            ($.observable(e).setProperty("_refreshBasket", !0),
                            t(),
                            setTimeout(function () {
                                $.observable(e).setProperty("_refreshBasket", !1);
                            }, 2e3));
                    },
                    floorNumber: function (e) {
                        return Math.floor(e);
                    },
                    delBankCard: function (e, t) {
                        var i = this,
                            n = wb.basket.getBasketModel();
                        $.post("/payments/delcard", { cardId: i.id, paymentCode: n.paymentType.codeLower }).done(function (e) {
                            $.processResponse(
                                e,
                                function () {
                                    i.id == n.paymentType.bankCardId && $.observable(n.paymentType).setProperty("bankCardId", n.paymentType.bankCards[n.paymentType.bankCards.length - 1].id),
                                        $.observable(n.paymentType.bankCards).remove(t.view.getIndex()),
                                        1 === n.paymentType.bankCards.length && $.observable(n.paymentType.bankCards).remove(0);
                                },
                                !0
                            );
                        });
                    },
                }),
                $.views.converters({
                    maxPrice: function (e) {
                        if ("" == e) return (this.linkCtx.elem.value = ""), 0;
                        max = _.property(this.tagCtx.props.max.split("."))(wb.basket.getBasketModel());
                        var t = e.replace(/\s+/g, "").replace(/,+/g, ".").replace(/\.+/g, "."),
                            i = t;
                        return (i = wb.settings.stageOfDenomination ? parseFloat(parseFloat(i).toFixed(2)) || 0 : parseInt(i, 10) || 0) > max
                            ? ((this.linkCtx.elem.value = wb.helpers.string.spaceFormatted(max)), max)
                            : ((this.linkCtx.elem.value = wb.helpers.string.spaceFormatted(i)),
                              wb.settings.stageOfDenomination && t.indexOf(".") === t.length - 1 && (this.linkCtx.elem.value += "."),
                              wb.settings.stageOfDenomination && 2 < t.length && t.indexOf(".0") === t.length - 2 && (this.linkCtx.elem.value += ".0"),
                              i);
                    },
                }),
                $.views.tags({
                    formatMoneyAnim: {
                        _val: null,
                        render: function (e) {
                            var t = this,
                                i = Number(this._val || 0);
                            this._val = e;
                            var n = Number(e || 0).countDecimals();
                            if (0 < i) {
                                var a = i.countDecimals();
                                n < a && (n = a);
                            }
                            var s = Math.pow(10, n);
                            $({ money: i }).animate(
                                { money: e },
                                {
                                    duration: 300,
                                    step: function (e) {
                                        t.linkCtx.elem.innerHTML = t.tagCtx.props.noCurrency ? $.views.converters.spaceFormatted(Math.round(e * s) / s) : $.views.converters.formatMoneyV2(Math.round(e * s) / s, !1, !0);
                                    },
                                }
                            );
                        },
                    },
                    confirmCode: {
                        mainElement: ".j-b-confirm-mobile",
                        onBind: function (a) {
                            var s = a.tag.mainElem.find("input"),
                                t = a.props.button ? $(a.props.button) : a.tag.mainElem.find("button"),
                                r = $(a.props.msgPlacement),
                                i = $(a.props.codeMsgPlacement),
                                n = a.tag.mainElem;
                            i.length || (i = r),
                                s.confirmCodeController({
                                    forAction: s.attr("data-foraction"),
                                    getPhoneMobile:
                                        a.props.phoneMobile &&
                                        function () {
                                            return a.tag.linkCtx.data[a.props.phoneMobile];
                                        },
                                    onSuccess: function () {
                                        var e = t.hide().data("countdown");
                                        e && e.detach(), t.hide(), s.data("valid", !0), n.trigger("code.confirmed");
                                    },
                                    onFail: function (e, t) {
                                        i.html(t);
                                    },
                                }),
                                t.on("click", function (e) {
                                    e.preventDefault();
                                    var t = $(this),
                                        i = t.closest(".j-b-confirm-mobile");
                                    if (!i.hasClass("inactive")) {
                                        i.addClass("inactive"), t.addClass("disabled");
                                        var n = t.attr("data-pause-text");
                                        n && (t.attr("data-pause-text", t.text()), t.text(n)),
                                            $.post(
                                                t.attr("data-href"),
                                                { phoneMobile: a.tag.linkCtx.data[a.props.phoneMobile] },
                                                function (e) {
                                                    $.processResponse(
                                                        e,
                                                        function (e) {
                                                            s.val(null).focus(),
                                                                t.countdownFrom({
                                                                    target: a.props.countTarget,
                                                                    onHide: function () {
                                                                        t.val($.localize("Выслать повторно")), n && (t.text(t.attr("data-pause-text")), t.attr("data-pause-text", n)), i.removeClass("inactive"), t.removeClass("disabled");
                                                                    },
                                                                }),
                                                                r.html(e);
                                                        },
                                                        function (e) {
                                                            r.html(e), i.removeClass("inactive"), t.removeClass("disabled"), n && (t.text(t.attr("data-pause-text")), t.attr("data-pause-text", n));
                                                        }
                                                    );
                                                },
                                                "json"
                                            );
                                    }
                                });
                        },
                    },
                    slider: {
                        setSize: !0,
                        mainElement: ".box",
                        template: '<div class="box"><span class="red" style=""></span><div class="handle"></div></div>',
                        init: function (i) {
                            (this.round = function (e) {
                                var t = i.props.rank;
                                return Math.round(e * t) / t;
                            }),
                                (this.clamp = function (e, t, i) {
                                    return i < t ? (e <= i ? i : t <= e ? t : e) : e <= t ? t : i <= e ? i : e;
                                }),
                                (this.mouseMoveOff = function () {
                                    i.handle.removeClass("active"), i.mainElem.trigger("slider-change"), $(document).off("mousemove touchmove");
                                });
                        },
                        onBind: function (a) {
                            var s = this,
                                r = a.props.min;
                            a.props.step;
                            (a.handle = a.mainElem.find(".handle").first()),
                                (a.select = a.mainElem.find(".red").first()),
                                a.props.max || a.select.add(a.handle).hide(),
                                a.props.max &&
                                    a.mainElem.on("mousedown touchstart", function (t) {
                                        var i;
                                        function n(e) {
                                            i = s.clamp(s.round(r + (e - a.metrics.left) / a.metrics.scale), r, a.props.max);
                                        }
                                        a.handle.addClass("active"),
                                            n(t.clientX),
                                            s.moveTo(i),
                                            $(document).on("mousemove touchmove", function (e) {
                                                n(e.clientX), i !== a.val && ((a.val = i), s.moveTo(i)), t.preventDefault();
                                            }),
                                            t.preventDefault();
                                    }),
                                $(document).on("mouseup touchend", this.mouseMoveOff);
                        },
                        onUnbind: function (e, t, i, n, a) {
                            $(document).off("mouseup touchend", this.mouseMoveOff);
                        },
                        onAfterLink: function (e, t, i, n, a) {
                            a ? "set" === a.change && a.path === e.params.props.max && this.setMetrics(e) : this.setMetrics(e);
                        },
                        onUpdate: !1,
                        setValue: function (e) {
                            var t = this.tagCtx,
                                i = t.props.min,
                                n = t.props.max,
                                a = t.metrics;
                            n && ((e = this.round(e || 0)), (e = this.clamp(e, i, n)), t.handle.offset({ left: (e - i) * a.scale + a.left - a.handleWidth }), t.select.css("width", (e / (n - i)) * 100 + "%"));
                        },
                        moveTo: function (e) {
                            this.setValue(e), this.updateValue(e, !0);
                        },
                        setMetrics: function (e) {
                            var t = e.mainElem;
                            e.metrics = { left: t.offset().left, width: t.width(), scale: t.width() / (e.props.max - e.props.min), handleWidth: e.handle.width() / 2 };
                        },
                    },
                }),
                f.init({
                    basketList: i,
                    basketForm: v,
                    data: m.data,
                    notification: m.notification,
                    user: m.user,
                    url: m.url,
                    errors: m.errors,
                    onRefresh: function (e, t) {
                        for (var i = f.getBasketModel(), n = _.findIndex(i.deliveryWays, { code: e.basket.deliveryWay }), a = e.basket.deliveryWays[n], s = 0; s < e.basket.deliveryWays.length; s++)
                            $.observable(i.deliveryWays[s]).setProperty("impossibleSelectMsg", e.basket.deliveryWays[s].impossibleSelectMsg), $.observable(i.deliveryWays[s]).setProperty("name", e.basket.deliveryWays[s].name);
                        a && a.deliveryPoints && $.observable(i.deliveryWays[n]).setProperty("deliveryPoints", a.deliveryPoints),
                            a && ($.observable(i.deliveryWays[n]).setProperty("calendars", a.calendars), $.observable(i.deliveryWays[n]).setProperty("deliveryNums", a.deliveryNums)),
                            a &&
                                i.deliveryPoint &&
                                i.deliveryPoint.closedMsg &&
                                $.observable(_.findWhere(i.deliveryWays[n].deliveryPoints, { addressId: i.deliveryPoint.addressId })).setProperty({ closedMsg: i.deliveryPoint.closedMsg, closedShortMsg: i.deliveryPoint.closedShortMsg }),
                            "applycoupon" === t && $.observable(i).setProperty("appliedCouponInfo.reason", e.modelErrors ? e.modelErrors : m.messages.couponApplyValid);
                        var r = e.basket.isCouponAppliedForAnyGood ? e.basket.appliedCouponInfo.couponNumber : null;
                        e.basket.appliedCouponInfo.isCorpCoupon &&
                            ((r = null),
                            $.post("/user/me").done(function (e) {
                                $.processResponse(
                                    e,
                                    function (e) {
                                        $(".j-b-personal-discount .j-a-discount-value")
                                            .toggleClass("discount-corp-client", e.isCorpClient)
                                            .removeClass(function (e, t) {
                                                return (t.match(/\bdiscount-\d+/g) || []).join(" ");
                                            })
                                            .addClass("discount-" + e.personalDiscount),
                                            $(".j-s-personal-discount").html(e.personalDiscount),
                                            $.renderModalError($.localize("Внимание!<p>Вам присвоена скидка корпоративного клиента.</p><p>Удачных покупок и хорошего настроения!</p>"), null, null, null, !0);
                                    },
                                    !1
                                );
                            })),
                            f.coupon.light.keepCode(r),
                            e.basket.appliedCouponInfo.isCorpCoupon && f.refresh(),
                            i.renderDeliveryPoint && e.basket.deliveryPoint && "self" == e.basket.deliveryWay && $(".j-r-workload:checked").trigger("change"),
                            $.observable(i).setProperty("housekeepingNeeds", e.basket.housekeepingNeeds),
                            $.observable(i).setProperty("paymentErip", e.basket.paymentErip);
                    },
                    onPreparedModel: function () {
                        var e = f.getBasketModel();
                        e.renderDeliveryPoint && $("[data-anim-width]").css("width", "0%");
                        var t = {
                                couponNumber: e.appliedCouponInfo.couponNumber || f.coupon.light.getCode(),
                                deliveryInOneDay: e.deliveryInOneDay,
                                paymentTypeId: (e.paymentType && e.paymentType.id) || e.selectedPaymentId,
                                prevPaymentTypeId: e.selectedPaymentId,
                                includeInOrder: e.includeInOrder,
                                deliveryWay: e.deliveryWay,
                                orderId: $(".j-h-reorder-order-id").val(),
                                rid: $(".j-h-reorder-rid").val(),
                                wantPaperBill: e.wantPaperBill,
                                noneIncludedInOrder: e.noneIncludedInOrder,
                                bankCardId: e.paymentType && e.paymentType.bankCardId,
                            },
                            i = _.findWhere(e.deliveryWays, { code: e.deliveryWay });
                        return i && i.selectedAddressId && (t.addressId = i.selectedAddressId), i && !i.deliveryPoints && (t.needDeliveryPoints = !0), t;
                    },
                    onBeforeDraw: function (e, t) {
                        var i = f.getBasketModel();
                        if (((e.shippingIntervals = {}), i.deliveryPoint && e.deliveryPoint && i.deliveryPoint.addressId == e.deliveryPoint.addressId && "courier" == e.deliveryWay)) {
                            var a = _.findWhere(e.deliveryWays, { code: e.deliveryWay }).calendars;
                            if (
                                a &&
                                0 < a.length &&
                                (_.each(i.shippingIntervals, function (i, n) {
                                    _.some(a, function (e, t) {
                                        return (
                                            -1 < e.storeIds.indexOf(Number(n)) &&
                                            e.timeDeliveryIntervals[i.deliveryDateShort] &&
                                            _.some(e.timeDeliveryIntervals[i.deliveryDateShort], function (e, t) {
                                                return e.key == i.intervalId;
                                            })
                                        );
                                    }) && (e.shippingIntervals[n] = i);
                                }),
                                $.each(e.shippingIntervals, function (i, n) {
                                    $.each(e.basketItemsByDeliveryDate, function (e, t) {
                                        -1 < t._storeIds.indexOf(Number(i)) && (t.shippingInterval = n);
                                    });
                                }),
                                !$.isEmptyObject(e.shippingIntervals))
                            ) {
                                var n = _(e.shippingIntervals).values()[0];
                                e.simpleDeliveryDates[0] = e.deliveryIntervalTxt = n.deliveryDate + ", " + n.fromTime + " - " + n.toTime;
                            }
                        }
                        if (i.includeModeEnabled && !i.noneIncludedInOrder) {
                            var s = _.chain(e.basketItemsByDeliveryDate)
                                .map(function (e, t) {
                                    return _.chain(e.items).where({ includeInOrder: !0 }).pluck("characteristicId").value();
                                })
                                .flatten()
                                .uniq()
                                .value();
                            s.length !== i.includeInOrder.length && f.replaceItemsInOrder(s);
                        }
                        return (
                            i.renderDeliveryPoint && (f.popup.clearBottomPopups(), f.popup.fasterPoos(e.deliveryPoint, e.fasterInfo, r), f.popup.impossibleDelivery(e.basketItemsByDeliveryDate[0])),
                            e.paymentType && !e.paymentType.dontRemember && (e.selectedPaymentId = e.paymentType.id),
                            v.find(".j-b-basket-payment .tooltipstered").tooltipster("destroy"),
                            e
                        );
                    },
                    bindEvents: function () {
                        var u = f.getBasketModel();
                        u.paymentType && !u.paymentType.dontRemember && (u.selectedPaymentId = u.paymentType.id),
                            $.observe(u, "deliveryInOneDay", function (e, t) {
                                f.resetShippingIntervals_v2(), f.refresh();
                            }),
                            $.observe(u, "otherRecipient", function (e, t) {
                                t.oldValue != t.value &&
                                    t.value &&
                                    !u.otherRecipients &&
                                    $.post("/otherrecipients/getall").done(function (e) {
                                        $.processResponse(
                                            e,
                                            function (e) {
                                                $.observable(u).setProperty("otherRecipients", e);
                                            },
                                            !1
                                        );
                                    });
                            });
                        var e = u.sberPostamatImpossibleDelivery,
                            t = u.halvaPostamatImpossibleDelivery;
                        $.observable(u).removeProperty("sberPostamatImpossibleDelivery"), $.observable(u).removeProperty("halvaPostamatImpossibleDelivery");
                        function i(i, e) {
                            var t = _.findIndex(u.deliveryWays, { code: u.deliveryWay }),
                                n = {};
                            (n[e] = !0),
                                _.each(_.filter(u.deliveryWays[t].deliveryPoints, n), function (e, t) {
                                    i.value ? $.observable(e).setProperty({ closedMsg: i.value, closedShortMsg: "Невозможно доставить" }) : $.observable(e).setProperty({ closedMsg: null, closedShortMsg: null });
                                });
                        }
                        $.observe(u, "sberPostamatImpossibleDelivery", function (e, t) {
                            i(t, "sberPostamat");
                        }),
                            $.observe(u, "halvaPostamatImpossibleDelivery", function (e, t) {
                                i(t, "halvaPostamat");
                            }),
                            $.observable(u).setProperty("sberPostamatImpossibleDelivery", e),
                            $.observable(u).setProperty("halvaPostamatImpossibleDelivery", t),
                            f.coupon.light.init({
                                cookieName: m.name.couponCookie,
                                couponApplyAction: function (e) {
                                    f.listUpdate(m.url.couponApply, { couponNumber: e }, null, "applycoupon");
                                },
                                removeCouponAction: f.removeCoupon,
                                btnClearPromo: ".j-btn-coupon-clear",
                            }),
                            f.popup.fasterPoos(u.deliveryPoint, u.fasterInfo, r),
                            f.popup.impossibleDelivery(u.basketItemsByDeliveryDate[0]),
                            m.misc.showOnlineOnlyBillPopup && f.popup.onlineOnlyBill(u),
                            u.hasSomeLargeGoods && ($.observable(u).setProperty("includeModeEnabled", !0), $.views.helpers.selectGoodsByType("onlyregular", !1)),
                            $.each(v.find("[data-input-mask]"), function () {
                                var t = $(this);
                                t.mask(t.attr("data-input-mask"), {
                                    autoclear: !0,
                                    completed: function () {
                                        t.trigger("blur");
                                    },
                                }).on("change", function (e) {
                                    t.siblings("input:hidden").valid();
                                });
                            }),
                            u.deliveryPoint && "self" == u.deliveryWay && $(".j-r-workload:checked").trigger("change"),
                            wb.charts.initWorkloadCharts({
                                theme: {
                                    cls: "i-workload-chart-v1",
                                    title: "<h2>" + $.localize("Загруженность пункта выдачи по дням") + "</h2><div class='text'>" + $.localize("На основе статистики посещаемости за последний месяц") + "</div>",
                                    footerMsg: "<div class='text'>" + $.localize("Нажмите на день для просмотра его загруженности по часам") + "</div>",
                                    html: '<span class="close closed"></span><div class="content j-b-workload-chart"><div class="j-chart-week"></div><div class="j-chart-day chart-day"></div></div>',
                                },
                            }),
                            $(window).on("cookiePolicy.changesAccept", function (e, t) {
                                t && (t.po && $.observable(u).setProperty("mustAcceptPublicOffer", !1), t.pp && $.observable(u).setProperty("mustAcceptPrivacyPolicy", !1));
                            }),
                            $("body")
                                .off("click.calendar")
                                .on("click.calendar", function (e) {
                                    var t = _.findWhere(u.deliveryWays, { code: u.deliveryWay }),
                                        i = _.where(t.calendars || [], { _selectDateTime: !0 }),
                                        n = $(e.target).closest(".j-b-calendar"),
                                        a = n.length ? $.view(n) : null;
                                    $.each(i, function (e, t) {
                                        (a && !_.difference(a.data.storeIds, t.storeIds).length) || $.observable(t).setProperty("_selectDateTime", !1);
                                    });
                                })
                                .on("click.confirm-order", ".j-btn-confirm-order", function (e) {
                                    var t = $(this);
                                    if (t.hasClass("disabled")) e.preventDefault();
                                    else if ((e.preventDefault(), (!u.mustAcceptPublicOffer && !u.mustAcceptPrivacyPolicy) || u.changesAccept))
                                        if (u.canBeOrderedItems.length)
                                            if (!u.includeModeEnabled || u.includeInOrder.length)
                                                if (null != u.deliveryPoint)
                                                    if (null != u.paymentType) {
                                                        var i = !0,
                                                            n = $(".j-b-confirm-mobile:visible", v);
                                                        if (
                                                            ($.each(n, function () {
                                                                var e = $(this).find("input.numeric");
                                                                if (!1 === e.prop("disabled") && !0 !== e.data("valid"))
                                                                    return (
                                                                        (i = !1),
                                                                        wb.utils.isElementInViewport(e) || wb.basket.scrollTo(e),
                                                                        e.trigger("input"),
                                                                        void $(this).find(".j-b-confirm-mobile-err").html($.localize("Необходимо смс подтверждение"))
                                                                    );
                                                            }),
                                                            i)
                                                        ) {
                                                            if (u.otherRecipient) {
                                                                var a = {};
                                                                v.find(".j-tb-charity-recipient").each(function (e, t) {
                                                                    "radio" !== t.type ? (a[t.name] = t.value) : t.checked && (a[t.name] = t.value);
                                                                }),
                                                                    $.isEmptyObject(a) || $.observable(u.recipient).setProperty("recipientCharityInfo", JSON.stringify(a));
                                                            }
                                                            if (v.valid()) {
                                                                function s() {
                                                                    $("body").off("click.confirm-order"), t.click(), t.addClass("disabled"), t.loading(!0);
                                                                }
                                                                var r = m.user.id;
                                                                if (!u.hasEnoughGoodsQuantity)
                                                                    return void f.popup.minQuantityPopup(u, function () {
                                                                        t.click();
                                                                    });
                                                                if (0 < u.empDelayLimit && !u.empDelayEnable && !u.empDelayActivation && u.paymentType && u.paymentType.isOnlineGroup && 0 < u.totalPriceToPay) {
                                                                    var o = (window.supportLocalStorage && localStorage.getObject("emp-delay-limit-spam")) || {};
                                                                    if (!o[r])
                                                                        return (
                                                                            (o[r.toString()] = !0),
                                                                            window.supportLocalStorage && localStorage.putObject("emp-delay-limit-spam", o),
                                                                            void $.views.helpers
                                                                                .enableDelay()
                                                                                .done(function () {
                                                                                    wb.basket.scrollTo(".j-b-basket-payment");
                                                                                })
                                                                                .fail(function () {
                                                                                    t.click();
                                                                                })
                                                                        );
                                                                }
                                                                if (u.needWalletUseSmsConfirmation) {
                                                                    var l = v.find(".j-b-confirm-code-popup").jqm({ toTop: !1, escClose: !1, modal: !0 }).jqmShow(),
                                                                        c = l.find("button").click();
                                                                    l.find(".j-b-confirm-mobile")
                                                                        .off("code.confirmed")
                                                                        .on("code.confirmed", function () {
                                                                            c.addClass("progress").show(), s();
                                                                        });
                                                                } else {
                                                                    var d = (window.supportLocalStorage && localStorage.getObject("order-confirm-dialog")) || {};
                                                                    if (d[r]) s();
                                                                    else
                                                                        var p = $.createJqm({
                                                                            cls: "i-confirm-order-alert",
                                                                            jqm: {
                                                                                closeSelector: ".alert-popup-close",
                                                                                onHide: function () {
                                                                                    t.loading(!1);
                                                                                },
                                                                            },
                                                                        })
                                                                            .find(".j-b-content")
                                                                            .html($.templates.confirmOrderTmpl.render(f.getBasketModel()))
                                                                            .find("button")
                                                                            .on("click", function () {
                                                                                p.find(".j-cb-popup-off").prop("checked") && ((d[r.toString()] = !0), window.supportLocalStorage && localStorage.putObject("order-confirm-dialog", d)), s();
                                                                            })
                                                                            .end()
                                                                            .end()
                                                                            .jqmShow();
                                                                }
                                                            }
                                                        }
                                                    } else wb.basket.scrollTo(".j-b-basket-payment");
                                                else wb.basket.scrollTo(".j-b-basket-delivery");
                                            else $.renderModalError($.localize("Для оформления заказа выберите товар"));
                                        else $.renderModalError($.localize("Товар недоступен для оформления"));
                                    else $.observable(u).setProperty("needAccept", !0);
                                });
                    },
                }),
                {}
            );
        },
    }),
    $.templates({
        impossibleDeliveryPopupTmpl:
            '<div class="i-delivery-not-possible j-popup-bottom away"><div class="bcg"><div class="j-close-popup-bottom close"><span class="elem"></span></div><div class="title">{{localize:"Доставка некоторых товаров из вашего заказа по выбранному адресу невозможна"}}</div><div class="list">{{for items start=0 end=5}}<div class="item"><div class="img"><img src="{{:~ImageUrl(cod1S, "small")}}" alt="{{attr:goodsName}}"></div><div class="good"><div class="name"><span>{{:goodsName}}, </span><span>{{:brandName}}</span></div></div></div>{{/for}}</div></div></div>',
        fasterPoosPopupTmpl:
            '<div class="i-better-shipment j-popup-bottom away"><div class="bcg"><div class="j-close-popup-bottom close"><span class="elem"></span></div><div class="title">{{:title}}</div><div class="text">{{:text}}</div><div class="list">{{for items start=0 end=5}}<label class="item c-radio-invisible-withText j-btn-select-address" data-id="{{:id}}"><input type="radio" class="item-radio" name="faster-poo"><div class="item-radio-text"><div class="info"><div class="data address">{{:address}}</div><div class="delivery"><span class="any-info">{{:redMsg}}</span></div></div><div class="choose">{{localize:"Заберу отсюда"}}</div></div></label>{{/for}}</div><div class="btn-block"><button class="c-btn-base j-show-better-map">{{localize:"Открыть на карте"}}</button></div></div></div>',
        confirmOrderTmpl:
            "<h1>{{localize:'Подтвердить оформление заказа'}}</h1><p class='basket-popup-dMethod'><span class='label'>{{localize:'Доставка'}}: </span>{{:deliveryPoint.deliveryName}}</p><p class='basket-popup-address'><span class='label'>{{localize:'Адрес'}}: </span>{{:deliveryPoint.address}}</p><p>{{for simpleDeliveryDates}}<span class='label'>{{if ~root.simpleDeliveryDates.length > 1}}{{toOrdinalDigitByFemaleGender:#getIndex()}} доставка{{else}}Доставка{{/if}}: </span>{{:#data}}<br>{{/for}}</p></p><p class='basket-popup-pMethod'><span class='label'>{{localize:'Оплата'}}: </span>{{:paymentType.groupName}}</p><button class='alert-popup-close basket-popup-close'>{{localize:'Подтвердить'}}</button><div class='not-show-again'><label class='checkbox-withText'><input type='checkbox' class='j-cb-popup-off item-checkbox'><span class='item-checkbox-decor'></span><span class=item-checkbox-text>{{localize:'Больше не показывать'}}</span></label></div>",
    }),
    $.extend(wb.basket, {
        popup: {
            deferred: {
                fasterPoos: function (e, t) {
                    var i = $.Deferred(),
                        n = wb.basket;
                    return (
                        e &&
                            !e.isPostalDelivery &&
                            ("courier" === e.deliveryType || "self" === e.deliveryType) &&
                            t &&
                            t.deliveryDate &&
                            t.storeId &&
                            !n.getBasketModel().hasLargeGoodsInOrder &&
                            $.get("/poo/findfaster", {
                                iconType: e.iconType,
                                latitude: e.lat,
                                longitude: e.lon,
                                fastestDate: t.deliveryDate,
                                fastestStoreId: t.storeId,
                                deliveryWay: e.deliveryType,
                                withoutSale: n.getBasketModel().calcWithoutDiscount,
                                deliveryPrice: e.deliveryPrice || 0,
                                sale: e.sale || 0,
                                bonus: e.bonus || 0,
                                excludePostamats: !0,
                                deliveryIsUnavailable: e.deliveryIsUnavailable,
                                allGoodsIsCharity: n.getBasketModel().allGoodsIsCharity,
                                prePayOnly: e.prePayOnly,
                            })
                                .done(function (e) {
                                    e ? i.resolve(e) : i.reject();
                                })
                                .fail(function () {
                                    i.reject();
                                }),
                        i.promise()
                    );
                },
            },
            clearBottomPopups: function () {
                $(".j-popup-bottom").bqmHide();
            },
            impossibleDelivery: function (e) {
                var t = _.filter(e.items, function (e) {
                    return !!e.impossibleDeliveryMsg;
                });
                if (0 < t.length) {
                    var i = $($.templates.impossibleDeliveryPopupTmpl.render({ items: t }));
                    i.appendTo("body"),
                        setTimeout(function () {
                            i.bqm().bqmShow();
                        });
                }
            },
            onlineOnlyBill: function (e) {
                $.confirmCool($.localize("Ваши чеки будут отображаться в разделе Электронные&nbsp;чеки в Личном кабинете"), {
                    needCloseBtn: !1,
                    confirmClass: "i-alert-receipts",
                    title: $.localize("Подтвердите свое согласие на получение электронных чеков"),
                    btns: { yes: $.localize("Подтверждаю"), no: $.localize("Нет") },
                })
                    .done(function () {
                        $.views.helpers.setModified(), $.observable(e).setProperty("wantPaperBill", !1);
                    })
                    .fail(function () {
                        $.views.helpers.setModified(), $.observable(e).setProperty("wantPaperBill", !0);
                    });
            },
            minQuantityPopup: function (e, t) {
                var i = [];
                e.basketItemsByDeliveryDate.forEach(function (e) {
                    _(e.items)
                        .where({ includeInOrder: !0 })
                        .forEach(function (e) {
                            e.quantity < e.minQuantity && i.push(e);
                        });
                }),
                    $.confirmCool($.templates.minQuantityPopup.render({ items: i }), {
                        needCloseBtn: !1,
                        confirmClass: "i-alert-quantity",
                        title: $.localize("Недостаточное количество товара"),
                        btns: { yes: $.localize("Увеличить количество и заказать"), no: $.localize("Отменить") },
                    }).done(function () {
                        var e = _(i).map(function (e) {
                            return { characteristicId: e.characteristicId, quantity: e.minQuantity };
                        });
                        wb.basket.recalcManyInBasket(e).done(t);
                    });
            },
            fasterPoos: function (e, r, o) {
                var l = wb.basket;
                l.popup.deferred.fasterPoos(e, r).done(function (e) {
                    function i(e, t, i) {
                        var n = l.getBasketModel(),
                            a = _.findWhere(n.deliveryWays, { code: e });
                        a
                            ? ($.observable(n).setProperty({ deliveryWay: e }), $.observable(a).setProperty({ selectedAddressId: "change", deliveryPoints: i }), (n.modify = !0), $.observable(a).setProperty({ selectedAddressId: t }))
                            : console.log("fasterPoos error, not found curDeliveryWay " + e);
                    }
                    var t = $(e),
                        n = t.closest(".found-better-poo-popup"),
                        a = r.storeId,
                        s = $(
                            $.templates.fasterPoosPopupTmpl.render(
                                {
                                    title: n.find(".j-s-title").html(),
                                    text: n.find(".date-delivery").html() + " " + n.find(".get-order").html(),
                                    items: $.each(JSON.parse(t.filter("#pooListJson").text()).slice(0, 5), function (e, t) {
                                        return (t.redMsg = o.getIconContentMarkup(t.bonus, t.deliveryPrice, t.iconType, t.sale, t.dontPrePay)), t;
                                    }),
                                },
                                {
                                    getFasterDateFormatted: function (e, t) {
                                        return wb.helpers.date.parseFromDotNet(e[a]).format(t || "dd.MM.yyyy");
                                    },
                                }
                            )
                        );
                    s
                        .appendTo("body")
                        .bqm()
                        .on("click", ".j-show-better-map", function () {
                            s.bqmHide(), o.showSelectFasterPoosPopup(e, $.localize("Выберите пункт выдачи")).done(i);
                        })
                        .one("click", ".j-btn-select-address", function (e) {
                            var t = $(this).attr("data-id");
                            o.spec.self.addPoo(t).done(function (e) {
                                i("self", t, e), s.bqmHide();
                            });
                        }),
                        setTimeout(function () {
                            s.bqmShow();
                        });
                });
            },
        },
    }),
    wb.namespace("gmaps", {
        geocode: function () {
            return "undefined" != typeof dataLayer && dataLayer.push({ event: "google_map_see" }), new google.maps.Geocoder().geocode.apply(null, arguments);
        },
    }),
    wb.namespace("ymaps", {
        geocode: function () {
            var e = window.ymaps.geocode.apply(null, arguments);
            return "undefined" != typeof dataLayer && dataLayer.push({ event: "yandex_map_see" }), e;
        },
        pooBalloonTmpl:
            "<div class='form-baloon'>{{if showFasterDate}}<p class='map-sect'>{{localize:'Дата поступления'}}: <span{{:(~pooHasFasterDate(fastestDatesByStore) ? ' class=\"red\"' : '')}}>{{:~getFasterDateFormatted(fastestDatesByStore)}}</span></p>{{/if}}{{if showDeliveryPrice}}<p class='map-sect'>{{localize:'Стоимость доставки'}}: <span{{:(~pooHasBetterDeliveryPrice(deliveryPrice) ? ' class=\"red\"' : '')}}>{{:(deliveryPrice > 0 ? deliveryPrice + ' ' + ~wbSettings.currencyShortName : 'Бесплатно')}}</span></p>{{/if}}<p class='map-sect'>{{localize:'Адрес'}}: <span>{{:address}}</span>{{if smId == 15}}<span class=''> (Партнерский постамат)</span>{{/if}}</p>{{if phones}}<p class='map-sect'>{{localize:'Телефон'}}: <span>{{:phones}}{{if extPhones}} {{localize:'доб.'}} {{:extPhones}}{{/if}}</span></p>{{/if}}<p class='map-sect'>{{localize:'Режим работы'}}: <span>{{:workTime}}</span></p>{{if showSelectBtn}}<div class='button-panel'><button type='submit' class='j-btn-select-poo added_point-pickup'>{{localize:addBtnLbl || 'Выбрать'}}</button><input type='hidden' value={{:id}} name='Item.AddressId'/></div>{{/if}}{{if wayInfo}}<p class='map-sect'>{{localize:'Проезд'}}: <span>{{:wayInfo}}</span></p>{{/if}}{{if wayInfoImagesCount > 0}}<div class='j-b-imgview'>{{range start=0 end=wayInfoImagesCount-0.9}}<img data-imgview-path='{{:~wbSettings.imagesSiteUrl}}/PickupOffice/{{:~root.imageLocationPath}}_Photo{{:#data}}.jpg' src='{{:~wbSettings.imagesSiteUrl}}/PickupOffice/{{:~root.imageLocationPath}}_previewPhoto{{:#data}}.jpg'/>{{/range}}</div>{{/if}}</div><input type='hidden' value='{{:deliveryType}}' name='deliveryType'/>",
        postamatBalloonTmpl:
            "<div class=\"form-baloon\"><h1>{{:name}}</h1>{{if showFasterDate}}<p class='map-sect'>{{localize:'Дата поступления'}}: <span class='red'>{{:~getFasterDateFormatted(fastestDatesByStore)}}</span></p>{{/if}}" +
            '{{if metro}}<p class="map-sect">{{localize:"Ближайшее метро"}}: <span>{{:metro}}</span></p>{{/if}}<p class="map-sect">{{localize:"Время работы"}}: <span>{{:workTimeName}}</span></p><p class="map-sect">{{localize:"Адрес"}}: <span>{{:address}}</span></p><p class="map-sect">{{localize:"Способы оплаты"}}: <span>{{if cash}}{{localize:"наличные"}}, {{/if}}{{if card}}{{localize:"карта"}}{{/if}}</span></p>{{if ~showSelectBtn}}<button type="submit" class="j-btn-pickpoint-submit added_point-pickup btn_choose-postamat">{{localize:"Добавить"}}</button>{{/if}}{{if outDescription }} <p class="map-sect">{{localize:"Как добраться"}}: <span>{{:outDescription}}</span></p>{{/if}}{{if inDescription}}<p class="map-sect">{{localize:"Расположение"}}: <span>{{:inDescription}}</span></p>{{/if}}{{if wayInfoImagesCount > 0}}<div class=\'j-b-imgview\'>{{range start=0 end=wayInfoImagesCount-0.9}}<img data-imgview-path=\'{{:~wbSettings.imagesSiteUrl}}/PickupOffice/{{:~root.imageLocationPath}}_Photo{{:#data}}.jpg\' src=\'{{:~wbSettings.imagesSiteUrl}}/PickupOffice/{{:~root.imageLocationPath}}_previewPhoto{{:#data}}.jpg\'/>{{else}}  {{/range}}</div>{{/if}}</div><input type=\'hidden\' value=\'{{:postamatType}}\' name=\'deliveryType\'/><input type=\'hidden\' value={{:addressId}} name=\'Item.AddressId\'/>',
        pooBalloonTmplV1:
            "<div class='balloon-content'><h3 class='balloon-content-title'>{{if isExternalPostamat}}{{localize:'Партнерский постамат'}}{{else}}{{localize:'Пункт самовывоза Wildberries'}}{{/if}}</h3>{{if wayInfoImagesCount > 0}}<div class='i-slider-balloon-image j-b-imgview j-slider-balloon-image'><div class='slider-list cS-hidden'>{{range start=0 end=wayInfoImagesCount-0.9}}<div class='slider-list-item'><img data-imgview-path='{{:~wbSettings.imagesSiteUrl}}/PickupOffice/{{:~root.imageLocationPath}}_Photo{{:#data}}.jpg' src='{{:~wbSettings.imagesSiteUrl}}/PickupOffice/{{:~root.imageLocationPath}}_previewPhoto{{:#data}}.jpg'/></div>{{/range}}</div></div>{{/if}}<div class='balloon-content-info'>{{localize:'Адрес'}}: <span>{{:address}}</span></div>{{if phones}}<div class='balloon-content-info'>{{localize:'Телефон'}}: <span>{{:phones}}{{if extPhones}} {{localize:'доб.'}} {{:extPhones}}{{/if}}</span></div>{{/if}}<div class='balloon-content-info'>{{localize:'Режим работы'}}: <span>{{:workTime}}</span></div>{{if dateTime}}<div class='balloon-content-info'>{{localize:'Ближайшая доставка'}}: <span class='wb'>{{formatDate:dateTime 'dd MMMM'}}</span></div>{{/if}}{{if showDeliveryPrice}}<div class='balloon-content-info'>{{localize:'Доставка'}}: <span class='wb'>{{:(deliveryPrice > 0 ? deliveryPrice + ' ' + ~wbSettings.currencyShortName : 'Бесплатно')}}</span></div>{{/if}}{{if wayInfo}}<div class='balloon-content-info'>{{localize:'Как добраться'}}: <span>{{:wayInfo}}</span></div>{{/if}}</div>",
        iconPooLayout: function () {
            return ymaps.templateLayoutFactory.createClass(
                "<div class='circle-marker'><img alt='' style='width:{{properties.wbIconSize[0]}}px;height:{{properties.wbIconSize[1]}}px;' class='icon-img' src='{{properties.wbIconHref}}' />{% if properties.iconContent %}<div class='mark-text'>{{properties.iconContent|raw}}</div>{% endif %}</div>",
                {
                    build: function () {
                        this.constructor.superclass.build.call(this), (this._$element = $(".circle-marker", this.getParentElement())), (this._$text = this._$element.find(".mark-text")), (this._$img = this._$element.find(".icon-img"));
                        var e = { left: -this._$img[0].offsetWidth / 2, top: -this._$img[0].offsetHeight / 2 },
                            t = this._$text.length ? (this._$element[0].offsetHeight - this._$text[0].offsetHeight) / 2 + e.top : NaN,
                            i = this._$text.length ? t + this._$text[0].offsetHeight : NaN;
                        (this._dimensions = {
                            img: [this._$img[0].offsetWidth + e.left, this._$img[0].offsetHeight + e.top],
                            text: { top: t, bottom: i },
                            margin: e,
                            element: [this._$element[0].offsetWidth + e.left, this._$element[0].offsetHeight + e.top],
                        }),
                            this._$element.css(e);
                    },
                    getShape: function () {
                        var e = this._dimensions;
                        return this._$text.length
                            ? new ymaps.shape.Polygon(
                                  new ymaps.geometry.pixel.Polygon([
                                      [[e.margin.left, e.margin.top], [e.margin.left, e.img[1]], e.img, [e.img[0], e.text.bottom], [e.element[0], e.text.bottom], [e.element[0], e.text.top], [e.img[0], e.text.top], [e.img[0], e.margin.top]],
                                  ])
                              )
                            : new ymaps.shape.Rectangle(new ymaps.geometry.pixel.Rectangle([[e.margin.left, e.margin.top], e.img]));
                    },
                }
            );
        },
    }),
    wb.namespace("coords.helper", {
        getBoundsByCoords: function (e) {
            var t = _.map(e, function (e) {
                    return Number(e[0]);
                }),
                i = _.map(e, function (e) {
                    return Number(e[1]);
                });
            return [
                [_.min(t), _.min(i)],
                [_.max(t), _.max(i)],
            ];
        },
    });
