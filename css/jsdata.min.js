function _typeof(e) {
    return (_typeof =
        "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
            ? function (e) {
                  return typeof e;
              }
            : function (e) {
                  return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
              })(e);
}
function NormolizeText(e, t) {
    if (null == t) return e;
    for (var n = 0; n < t.length; n++) e = e.replace(t[n].regex, t[n].replace);
    return e;
}
function CalculationLimitText(e, t, n, o, i, r) {
    if (0 !== e.length) {
        var a = NormolizeText($(e).val(), i).length;
        if (n < a) {
            var s = NormolizeText($(e).val(), i).substring(0, n);
            $(e).val(NormolizeText($.trim(s), r));
        }
        (a = NormolizeText($(e).val(), i).length),
            (o = (o = (o = o.replace(new RegExp("_MINLENGTH", "g"), t)).replace(new RegExp("_MAXLENGTH", "g"), n)).replace(new RegExp("_CURRENTLENGTH", "g"), a)),
            $("[limitMessageFor=" + $(e).attr("id") + "]")
                .html(o)
                .removeClass("error"),
            $(e).data("valid", t <= a && a <= n);
    }
}
function paramsToString(e) {
    var n = [];
    return (
        $.each(e, function (e, t) {
            n.push(e + "=" + t);
        }),
        n.join("&")
    );
}
function getUrlForProductCardPopup(e, t, n, o) {
    var i = "/productpopup/" + e;
    return n && 0 < n && (i += "/" + n), (i += "?v=" + Math.random()), t && 0 < t && (i += "&size=" + t), o && (i += "&targetUrl=" + o), i;
}
function OpenNewPopup(e, t, n, o, i, r) {
    var a = getUrlForProductCardPopup(e, t, n, r),
        s = document.write;
    $("#popup")
        .jqm({
            ajax: a,
            target: "#cardContent",
            focusOn: "#AzoomPopup",
            closeSelector: "#CloseCart, .close:first, .j-close",
            onLoad: function () {
                i && i();
            },
            onHide: function (e) {
                wb.product.popupOnHide(), e.w.find("#cardContent").empty(), e.w.data("cod", null), (document.write = s);
            },
        })
        .jqmShow();
}
function OpenVideo(e) {
    window.open($(e).attr("href"), "sizewindow", "resizable=0,scrollbars=0,width=660, height=415");
}
function navigateWithReferrer(e) {
    if ("undefined" != e) {
        var t = document.createElement("a");
        void 0 === t.click ? (window.location.href = e) : ((t.href = e), document.body.appendChild(t), t.click());
    }
}
function searchPreInit() {
    var o,
        n,
        i = $("#tbSrch"),
        e = $("#btnSrch"),
        t = $("#btnSrchClear"),
        r = $(".srchex"),
        a = $(".wildSrch"),
        s = "/catalog/0/search.aspx?search=",
        c = !1,
        l = wb.settings.searchPlaceHolder + "...";
    function u() {
        return "" !== $.trim(i.val()) && i.val() !== l;
    }
    function d(e, t, n) {
        null != e && (((0 === e.value.length && t) || n) && ((e.value = l), r.removeClass("typing")), t || (r.addClass("typing"), (0 !== e.value.length && e.value !== l) || (e.value = "")));
    }
    function p() {
        var e = $.trim(
                (function (e) {
                    return e.replace(/<\/?[^>]+>/gi, "");
                })(i.val())
            ),
            t = encodeURIComponent(e);
        return s + t;
    }
    function f(e, t) {
        var n = (t && t.url) || p(),
            o = t && t.url && !t.url.startsWith(s) ? "" : "&fromSearchInput=true";
        window.location.href = wb.settings.fullDomainName + n + o;
    }
    function h() {
        0 === i.val().length || i.val() == l ? (e.removeClass("active"), t.removeClass("active")) : (e.addClass("active"), t.addClass("active"));
    }
    i.val().length || i.val(l),
        i.keypress(function (e) {
            if (-1 < $.inArray(e.which, [34, 42])) return !1;
            13 === e.which && (u() && f(), e.preventDefault()), 0 < $(window).scrollTop() && $(window).scrollTo("0");
        }),
        i.on("keyup", function (e) {
            -1 < $.inArray(e.which, [8, 46]) && h(), (c = !0);
        }),
        i.on("input", function () {
            h();
        });
    var m = i.autocomplete({
        serviceUrl: "/searchcompletionlist",
        minChars: 0,
        maxHeight: 650,
        zIndex: 9999,
        width: "auto",
        deferRequestBy: 100,
        noCache: !1,
        autoSelectFirst: !1,
        onSelect: f,
        fnFormatResult: function (e, t, n) {
            var o,
                i,
                r,
                a = "(" + n.replace(reEscape, "\\$1") + ")",
                s = "",
                c = "";
            if (t.image)
                s =
                    '<div class="autocomplete-inner-img ' +
                    ((r = !!(t.products && 0 < t.products.length) && ((i = t.products[0]), $.views.helpers.blurAdult(i.adult))) ? "for-adults" : "") +
                    '"><img src="' +
                    wb.helpers.url.imageUrl(t.image, "mini") +
                    '"></div>';
            else if (g() && t.products && 0 < t.products.length) {
                c = '<div class="autocomplete-list-inner"><ul class="autocomplete-list">';
                for (var l = 0; l < t.products.length; l++)
                    (i = t.products[l]),
                        (r = $.views.helpers.blurAdult(i.adult)),
                        (c +=
                            '<li><a href="' +
                            $.views.converters.urlForGood(i.cod, !0, "SS") +
                            '"><div class="autocomplete-inner-img ' +
                            (r ? "for-adults" : "") +
                            '"><img src="' +
                            wb.helpers.url.imageUrl(i.cod, "mini") +
                            '"></div><div class="autocomplete-inner-name"><strong class="autocomplete-name">' +
                            i.brand +
                            '</strong><span class="autocomplete-goods-name"> / ' +
                            i.name +
                            "</span></div></a></li>");
                c += "</ul></div>";
            }
            return (
                (o =
                    '<div class="autocomplete-res">' +
                    s +
                    '<span class="autocomplete-res-text">' +
                    e.replace(new RegExp(a, "gi"), "<strong>$1</strong>") +
                    (t.category ? '<span class="suggest-category"> в ' + t.category + "</span>" : "") +
                    "</span>" +
                    c +
                    "</div>"),
                t.title && (o = '<div class="autocomplete-category">' + t.title + "</div>" + o),
                o
            );
        },
        selectMouseHover: !1,
        getCacheKey: function (e) {
            return -1 == window.location.href.indexOf(s) || c ? e : ((n = !0), e + "-tags");
        },
        beforeSuggestsShow: function (e) {
            !(function (e) {
                var t = "suggest-top-goods";
                if (g()) {
                    m.addClass(t);
                    var n = "suggest-img";
                    e.every(function (e) {
                        return e.image;
                    })
                        ? m.addClass(n)
                        : m.removeClass(n);
                } else m.removeClass(t);
            })(e),
                a.addClass("search-active"),
                (function (e) {
                    if (!g()) return;
                    for (var t = 0, n = 0; n < e.length; n++) e[n].products && (t = Math.max(t, e[n].products.length));
                    o = t;
                })(e),
                n || (c = !0),
                (n = void 0),
                g() && m.css("min-height", 80 * o + 20 + "px");
        },
        getServiceParams: function () {
            var e = i.data("catalog-ufu-url"),
                t = i.data("nm-id") || null;
            return { tags: n, catalogUfu: e, nmId: t };
        },
        cycleMoving: !0,
        appendTo: a,
        fixedPosition: !0,
    }).container;
    function g() {
        return wb.settings.searchSuggestTopGoods && !n;
    }
    m.on("hide", function () {
        a.removeClass("search-active");
    }),
        i.focus(function () {
            d(this, !1);
        }),
        i.blur(function () {
            d(this, !0);
        }),
        e.click(function (e) {
            u() && f(), e.preventDefault();
        }),
        t.click(function (e) {
            d(i.get(0), !1, !0), h(), i.focus(), e.preventDefault();
        }),
        h();
    var v, b, w, y, k;
    function S() {
        v.removeClass("active"), w.tooltipster("enable");
    }
    (v = $(".j-search-img-container")),
        (b = v.find(".j-search-img-upload-form")),
        (w = v.find(".j-search-img-btn")),
        (y = b.find("#fileUploader")),
        (k = b.find(".j-message")),
        w.on("click", function () {
            v.hasClass("active")
                ? S()
                : (w.tooltipster("disable"),
                  v.addClass("active"),
                  $(document).on("click.searchImg", function (e) {
                      v.is(e.target) || 0 != v.has(e.target).length || (S(), $(document).off("click.searchImg"));
                  }),
                  $(window).on("scroll.searchImg", function (e) {
                      wb.utils.isElementInViewport(w, !0) || (S(), $(window).off("scroll.searchImg"));
                  }));
        }),
        y.on("change", function (e) {
            b.addClass("loading"), k.html('<span class="load-message">' + $.localize("Загрузка файла") + "</span>"), b.submit(), b.find(".j-fileUploader-btn").addClass("progress");
        }),
        $(".j-loading-img")
            .find(".j-close")
            .one("click", function () {
                $(".j-search-input").attr("readonly", !1), a.removeClass("search-by-photo-active");
            });
}
(wb = {
    namespace: function (e, t) {
        for (var n = e.split("."), o = this, i = n.length, r = 0; r < i; r++) void 0 === o[n[r]] && (o[n[r]] = t && r === i - 1 ? t : {}), (o = o[n[r]]);
        return o;
    },
    getURLparam: function (e) {
        return (RegExp("[\\?&]" + e + "=([^&#]*)", "i").exec(location.href) || [, null])[1];
    },
}),
    (wb.helpers = {
        getNextTabField: function (e) {
            var t = parseInt(e.attr("tabIndex"), 10) + 1;
            return $("[tabIndex=" + t + "]").eq(0);
        },
        getCurrentLang: function () {
            return wb.settings.locales[wb.settings.currentLocale] || wb.settings.locales.ru;
        },
        guid: function () {
            function e() {
                return Math.floor(65536 * (1 + Math.random()))
                    .toString(16)
                    .substring(1);
            }
            return e() + e() + "-" + e() + "-" + e() + "-" + e() + "-" + e() + e() + e();
        },
        renderPricesByNmIds: function (e) {
            if (e && e.tmplSl && e.$container && e.productSl && e.priceBlockSl && e.nmIdData) {
                var n = $.extend({}, e),
                    t = n.$container.find(n.productSl),
                    o = [];
                0 != t.length &&
                    ($.templates("externalGoodsPriceTmpl", n.tmplSl),
                    $.each(t, function () {
                        var e = $(this).data(n.nmIdData);
                        o.push({ cod1S: e });
                    }),
                    wb.xnm.fillPrice(o, function () {
                        $.each(t, function () {
                            var t = $(this),
                                e = $.grep(o, function (e) {
                                    return t.data(n.nmIdData) == e.cod1S;
                                });
                            e && 0 < e.length && t.find(n.priceBlockSl).html($.render.externalGoodsPriceTmpl(e[0]));
                        });
                    }));
            }
        },
        object: {
            create: function (e) {
                function t() {}
                return (t.prototype = e), new t();
            },
            toArray: function (e) {
                return $.map(e, function (e) {
                    return [e];
                });
            },
            clone: function (e) {
                var t;
                if (null == e || "object" != _typeof(e)) return e;
                if (e instanceof Date) return (t = new Date()).setTime(e.getTime()), t;
                if (e instanceof Array) {
                    t = [];
                    for (var n = 0, o = e.length; n < o; n++) t[n] = wb.helpers.object.clone(e[n]);
                    return t;
                }
                if (e instanceof Object) {
                    for (var i in ((t = {}), e)) e.hasOwnProperty(i) && (t[i] = wb.helpers.object.clone(e[i]));
                    return t;
                }
                throw new Error("Unable to copy obj! Its type isn't supported.");
            },
        },
        int: {
            divide: function (e, t) {
                return e.toString().replace(/\B(?=(\d{3})+(?!\d))/g, t || "&nbsp;");
            },
            toHex: function (e) {
                var t = e.toString(16);
                return (t = "000000".substr(0, 6 - t.length) + t).toUpperCase();
            },
            toDecimalFormat: function (e, t) {
                return e.toFixed(t).toString().replace(",", ".");
            },
        },
        date: {
            compare: {
                date: function (e, t) {
                    if (!e || !t) return -1;
                    var n = wb.helpers.object.clone(e),
                        o = wb.helpers.object.clone(t);
                    return n && o ? (n.setHours(0, 0, 0, 0), o.setHours(0, 0, 0, 0), n.getTime() === o.getTime() ? 0 : n.getTime() > o.getTime() ? 1 : n.getTime() < o.getTime() ? 2 : void 0) : -1;
                },
            },
            parseFromDotNet: function (e) {
                return new Date(parseInt(e.replace("/Date(", "").replace(")\\/", ""), 10));
            },
            leftBefore: function (e) {
                var t = wb.helpers.date.serverDate ? new Date(wb.helpers.date.serverDate) : new Date(),
                    n = e.getTime() - t.getTime(),
                    o = Math.floor((n / 1e3) % 60),
                    i = Math.floor((n / 6e4) % 60),
                    r = Math.floor(n / 36e5);
                return String.format("{0}:{1}:{2}", $.views.converters.leadZero(r, 2), $.views.converters.leadZero(i, 2), $.views.converters.leadZero(o, 2));
            },
        },
        productCard: {
            url: function (e, t, n) {
                var o = [];
                t && o.push("size=" + t), n && o.push("targetUrl=" + n);
                var i = wb.settings.fullDomainName + "/catalog/" + e + "/detail.aspx";
                return i + (0 < o.length ? "?" + o.join("&") : "");
            },
            videoUrl: function (e) {
                var t = 1e4 * Math.floor(e / 1e4);
                return String.format("{0}new/{1}/{2}", wb.settings.videoPath, t, e);
            },
        },
        parseDateFromJson: function (e) {
            var t = parseInt(e.substr(6, 13));
            return new Date(t);
        },
        getTimezoneDate: function (e, t) {
            var n = 60 * (t || 180 + e.getTimezoneOffset()) * 1e3;
            return new Date(e.getTime() + n);
        },
        string: {
            isNullOrWhiteSpace: function (e) {
                return !e || 0 === e.length || /^\s*$/.test(e);
            },
            spaceFormatted: function (e) {
                return String(e).replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1 ");
            },
        },
        array: {
            sortArrayByKeyAsc: function (e, i) {
                return e.sort(function (e, t) {
                    var n = e[i],
                        o = t[i];
                    return n < o ? -1 : o < n ? 1 : 0;
                });
            },
            lookup: function (e, t, n) {
                for (var o = 0, i = e.length; o < i; o++) if (e[o] && e[o][t] === n) return e[o];
            },
        },
        estimatedDeliveryDateText: function (e) {
            var t = new Date(),
                n = new Date(t.getFullYear(), t.getMonth(), t.getDate() + e);
            return e < 0 ? $.localize("задерживается") : $.localize("ориентировочно ") + (e < 1 ? $.localize("cегодня") : n.format("d MMMM").toLowerCase());
        },
        declension: function (e, t, n, o, i) {
            var r,
                a = e % 10,
                s = e % 100;
            return (r = 1 == a && 11 != s ? t : (2 == a && 12 != s) || (3 == a && 13 != s) || (4 == a && 14 != s) ? n : o || n), void 0 === i ? r : String.format(i, e, String.format(r, e));
        },
        getParamsFromUrlQuery: function (e) {
            if (!e) return {};
            0 === e.indexOf("?") && (e = e.substring(1));
            for (var t = e.split("&"), n = {}, o = 0, i = t.length; o < i; o++) {
                var r = t[o].split("=");
                n[r[0]] = r[1];
            }
            return n;
        },
        url: {
            imageUrl: function (e, t, n) {
                var o,
                    i,
                    r,
                    a = parseInt(e, 10);
                return (o = void 0 !== n ? "-" + n : ""), (i = 1e4 * parseInt(parseInt(a) / 1e4)), (r = a % 2 == 1 ? 1 : 2), String.format(wb.settings.goodsImageServerTemplate, r) + t + "/new/" + i + "/" + a + o + ".jpg";
            },
            urlFor3D: function (e) {
                var t = e % 2 == 1 ? 1 : 2;
                return String.format(wb.settings.goodsImageServerTemplate, t) + "3d/" + e;
            },
        },
    }),
    (String.prototype.capitalizeIf = function (e) {
        return e ? this.charAt(0).toUpperCase() + this.slice(1) : this;
    }),
    (String.prototype.trimRight = function () {
        return this.replace(/\s+$/g, "");
    }),
    (String.prototype.trimLeft = function () {
        return this.replace(/^\s+/g, "");
    }),
    (String.prototype.trim = function () {
        return this.trimRight().trimLeft();
    }),
    (String.prototype.trimMiddle = function () {
        return this.trim().replace(/\s\s+/g, " ");
    }),
    (String.prototype.cleanTrashBetweenTd = function () {
        return this.replace(new RegExp(">[ \t\r\n\v\f]*<", "g"), "><");
    }),
    (String.format = function () {
        for (var e = arguments[0], t = 0; t < arguments.length - 1; t++) {
            var n = new RegExp("\\{" + t + "\\}", "gm");
            e = e.replace(n, arguments[t + 1]);
        }
        return e;
    }),
    (String.prototype.capitalize = function () {
        return this.charAt(0).toUpperCase() + this.slice(1);
    }),
    (Number.prototype.formatMoney = function (e, t, n) {
        var o = this,
            i = ((e = isNaN((e = Math.abs(e))) ? 2 : e), (t = null == t ? "." : t), (n = null == n ? "," : n), o < 0 ? "-" : ""),
            r = parseInt((o = Math.abs(+o || 0).toFixed(e))) + "",
            a = 3 < (a = r.length) ? a % 3 : 0;
        return (
            i +
            (a ? r.substr(0, a) + n : "") +
            r.substr(a).replace(/(\d{3})(?=\d)/g, "$1" + n) +
            (e
                ? t +
                  Math.abs(o - r)
                      .toFixed(e)
                      .slice(2)
                : "")
        );
    }),
    (Number.prototype.countDecimals = function () {
        return Math.floor(this.valueOf()) === this.valueOf() ? 0 : this.toString().split(".")[1].length || 0;
    }),
    (Date.prototype.format = function (e, t) {
        var m,
            g,
            v,
            b =
                ((m = /d{1,4}|M{1,4}|yy(?:yy)?|([HhmsTt])\1?|[LloSZ]|"[^"]*"|'[^']*'/g),
                (g = /\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\d{4})?)\b/g),
                (v = /[^-+\dA-Z]/g),
                function (e, t, n) {
                    var o = b;
                    if ((1 != arguments.length || "[object String]" != Object.prototype.toString.call(e) || /\d/.test(e) || ((t = e), (e = void 0)), (e = e ? new Date(e) : new Date()), isNaN(e))) throw SyntaxError("invalid date");
                    "UTC:" == (t = String(o.masks[t] || t || o.masks.default)).slice(0, 4) && ((t = t.slice(4)), (n = !0));
                    var i = n ? "getUTC" : "get",
                        r = e[i + "Date"](),
                        a = e[i + "Day"](),
                        s = e[i + "Month"](),
                        c = e[i + "FullYear"](),
                        l = e[i + "Hours"](),
                        u = e[i + "Minutes"](),
                        d = e[i + "Seconds"](),
                        p = e[i + "Milliseconds"](),
                        f = n ? 0 : e.getTimezoneOffset(),
                        h = {
                            d: r,
                            dd: w(r),
                            ddd: o.i18n.dayNames[a],
                            dddd: o.i18n.dayNames[a + 7],
                            M: s + 1,
                            MM: w(s + 1),
                            MMM: o.i18n.monthNames[s],
                            MMMM: o.i18n.monthNames[s + 12],
                            yy: String(c).slice(2),
                            yyyy: c,
                            h: l % 12 || 12,
                            hh: w(l % 12 || 12),
                            H: l,
                            HH: w(l),
                            m: u,
                            mm: w(u),
                            s: d,
                            ss: w(d),
                            l: w(p, 3),
                            L: w(99 < p ? Math.round(p / 10) : p),
                            t: l < 12 ? "a" : "p",
                            tt: l < 12 ? "am" : "pm",
                            T: l < 12 ? "A" : "P",
                            TT: l < 12 ? "AM" : "PM",
                            Z: n ? "UTC" : (String(e).match(g) || [""]).pop().replace(v, ""),
                            o: (0 < f ? "-" : "+") + w(100 * Math.floor(Math.abs(f) / 60) + (Math.abs(f) % 60), 4),
                            S: ["th", "st", "nd", "rd"][3 < r % 10 ? 0 : (((r % 100) - (r % 10) != 10) * r) % 10],
                        };
                    return t.replace(m, function (e) {
                        return e in h ? h[e] : e.slice(1, e.length - 1);
                    });
                });
        function w(e, t) {
            for (e = String(e), t = t || 2; e.length < t; ) e = "0" + e;
            return e;
        }
        return (
            (b.masks = {
                default: "ddd mmm dd yyyy HH:MM:ss",
                shortDate: "m/d/yy",
                mediumDate: "mmm d, yyyy",
                longDate: "mmmm d, yyyy",
                fullDate: "dddd, mmmm d, yyyy",
                shortTime: "h:MM TT",
                mediumTime: "h:MM:ss TT",
                longTime: "h:MM:ss TT Z",
                isoDate: "yyyy-mm-dd",
                isoTime: "HH:MM:ss",
                isoDateTime: "yyyy-mm-dd'T'HH:MM:ss",
                isoUtcDateTime: "UTC:yyyy-mm-dd'T'HH:MM:ss'Z'",
            }),
            (b.i18n = {
                dayNames: ["Вс", "Пн", "Вт", "Ср", "Чт", "Пт", "Сб", "Воскресенье", "Понедельник", "Вторник", "Среда", "Четверг", "Пятница", "Суббота"],
                monthNames: ["Янв", "Фев", "Мар", "Апр", "Май", "Июн", "Июл", "Авг", "Сен", "Окт", "Ноя", "Дек", "Января", "Февраля", "Марта", "Апреля", "Мая", "Июня", "Июля", "Августа", "Сентября", "Октября", "Ноября", "Декабря"],
            }),
            $.localize.dfr && ((b.i18n.dayNames = $.localize.dfr.abbreviatedDayNames.concat($.localize.dfr.dayNames)), (b.i18n.monthNames = $.localize.dfr.abbreviatedMonthNames.concat($.localize.dfr.monthGenitiveNames))),
            b(this, e, t)
        );
    }),
    (Date.prototype.daysBetween = function (e) {
        var t = new Date(this.getFullYear(), this.getMonth(), this.getDate()),
            n = (new Date(e.getFullYear(), e.getMonth(), e.getDate()).getTime() - t.getTime()) / 864e5;
        return Math.floor(n);
    }),
    wb.namespace(
        "adult",
        (function () {
            var t = {
                eventNamespace: ".adult",
                cookieName: "__ac",
                setCookieUrl: "product/confirmadult",
                classes: { popup: ".j-popup-confirm-age", closePopup: ".j-confirm-age-close", confirm: ".j-confirm", openFull: ".j-open-full-product-card.is-adult", onlyForAdults: "for-adults" },
            };
            return {
                init: function (e) {
                    (this.settings = $.extend({}, t, e)),
                        (this.storage = {}),
                        i(
                            this,
                            (function (e) {
                                return "true" === $.cookie(e.settings.cookieName);
                            })(this)
                        ),
                        (function (t) {
                            (t.confirmAdultPopup = $(t.settings.classes.popup)),
                                t.confirmAdultPopup.jqm({ closeSelector: t.settings.classes.closePopup }),
                                $(t.confirmAdultPopup).on("click", t.settings.classes.confirm, function (e) {
                                    e.preventDefault(),
                                        (function (t) {
                                            $.ajax({
                                                type: "POST",
                                                dataType: "json",
                                                cache: !0,
                                                url: t.settings.setCookieUrl,
                                                error: function (e) {},
                                                success: function (e) {
                                                    $.processResponse(
                                                        e,
                                                        function (e) {
                                                            $("." + t.settings.classes.onlyForAdults).removeClass(t.settings.classes.onlyForAdults),
                                                                (function (e) {
                                                                    $("body").off(e.settings.eventNamespace);
                                                                })(t),
                                                                wb.product.enableZoom(),
                                                                i(t, !0),
                                                                t.confirmAdultPopup.jqmHide();
                                                        },
                                                        function () {}
                                                    );
                                                },
                                            });
                                        })(t);
                                });
                        })(this),
                        (function (t) {
                            var e = "click" + t.settings.eventNamespace;
                            $("body").on(e, t.settings.classes.openFull, function (e) {
                                e.preventDefault(), n(t);
                            });
                        })(this);
                },
                confirmedAdult: function () {
                    return n(this);
                },
                isConfirmed: function () {
                    return o(this);
                },
            };
            function n(e) {
                return !!o(e) || (e.confirmAdultPopup.jqmShow(), !1);
            }
            function o(e) {
                return e.storage.adultConfirmed;
            }
            function i(e, t) {
                e.storage.adultConfirmed = t;
            }
        })()
    ),
    $.views.helpers({
        ImageUrl: wb.helpers.url.imageUrl,
        productCardUrl: function (e, t, n) {
            return wb.helpers.productCard.url(e, t, n);
        },
        userLookUrl: function (e) {
            return wb.settings.fullDomainName + "/looksgallery/look/" + e;
        },
        userLookImage: function (e, t, n, o) {
            var i = o ? "_" + o : "";
            return wb.settings.photosDomainUrl + "/img/userlooks/" + e + "/" + t + "_" + n + i + ".jpg";
        },
        userReviewUrl: function (e) {
            return wb.settings.fullDomainName + "/reviews/" + e;
        },
        userReviewImg: function (e, t, n) {
            var o = n ? "fs_" : "ms_";
            return wb.settings.photosDomainUrl + "/img/userreviews/" + t + "/" + o + e + "_1_1.jpg";
        },
        isEmptyObject: function (e) {
            return $.isEmptyObject(e);
        },
        PersonalPhoto: function (e, t, n) {
            return void 0 === n && (n = "small"), (t ? wb.settings.photosDomainUrl : wb.settings.imagesSiteUrl) + "/img/" + (t ? e : 0) + "/" + n + "/PersonalPhoto." + (t ? "jpg" : "png") + (t ? "" : "?2");
        },
        Declension: wb.helpers.declension,
        pluralize: function (e) {
            return $.pluralize(e, Array.prototype.slice.call(arguments, 1));
        },
        debug: function (e) {
            console.log(e);
        },
        toDateFormat: function (e, t) {
            return new Date(parseInt(e.replace("/Date(", "").replace(")\\/", ""), 10)).format(t);
        },
        formatDate: function (e, t) {
            return new Date(e).format(t);
        },
        toJson: function (e) {
            return JSON.stringify(e);
        },
        fromJson: function (e) {
            return JSON.parse(e);
        },
        encode: function () {
            for (var e = "", t = 0; t < arguments.length; t++) e = e.concat(arguments[t]);
            return encodeURIComponent(e);
        },
        isLazyImgInCarousel: function (e, t, n, o, i) {
            return !0 === e && (!0 === n ? 2 * o <= t && t < i - o : 2 * o <= t);
        },
        timeLeft: function (e) {
            var t = wb.helpers.date.parseFromDotNet(e);
            return wb.helpers.date.leftBefore(t);
        },
        isPriceEqual: function (e, t) {
            return "by" === wb.settings.currentLocale ? Math.floor(e / 100) === Math.floor(t / 100) : e === t;
        },
        isNullOrWhiteSpace: function (e) {
            return wb.helpers.string.isNullOrWhiteSpace(e);
        },
        HasFlag: function (e, t) {
            return (e & t) == t;
        },
        blurAdult: function (e) {
            return e && !wb.adult.isConfirmed();
        },
    }),
    $.views.converters({
        not: function (e) {
            return !e;
        },
        toOrdinalDigitByFemaleGender: function (e) {
            return ["Первая", "Вторая", "Третья", "Четвертая", "Пятая", "Шестая", "Седьмая", "Восьмая", "Девятая", "Десятая"][e];
        },
        spaceFormatted: wb.helpers.string.spaceFormatted,
        toInt: function (e) {
            return parseInt(e, 10);
        },
        toFixed: function (e, t) {
            var n = parseFloat(e);
            return isNaN(n) ? "" : n.toFixed(t);
        },
        leadZero: function (e, t) {
            if (isNaN(e) || null == e) return null;
            for (var n = Math.floor(e); n.toString().length < t; ) n = "0" + n;
            return n;
        },
        formatMoney: function (e, t, n, o, i) {
            if (wb.settings.stageOfDenomination) {
                var r = Number(t);
                if (0 !== r) {
                    var a = i ? String.format(i, "&nbsp;р.&nbsp;") : "&nbsp;р.&nbsp;",
                        s = i ? String.format(i, "&nbsp;к.") : "&nbsp;к.";
                    return r.formatMoney(2, a, "&nbsp;") + s;
                }
            }
            var c = n ? wb.settings.currencyShortName : "";
            return i && (c = String.format(i, c)), wb.helpers.string.spaceFormatted(e) + c + (o ? "&nbsp;" + wb.settings.currencyShortNameSymbol : "");
        },
        formatMoneyTmpl: function (e, t, n, o, i) {
            if (wb.settings.stageOfDenomination) {
                var r = Number(t);
                if (0 !== r) {
                    var a = i ? String.format(i, "&nbsp;р.&nbsp;") : "&nbsp;р.&nbsp;",
                        s = i ? String.format(i, "&nbsp;к.") : "&nbsp;к.";
                    return String.format("<span>{0}</span>", r.formatMoney(2, a, "&nbsp;") + s);
                }
            }
            var c = n ? "&nbsp;" + wb.settings.currencyShortName : "";
            return i && (c = String.format(i, c)), wb.helpers.string.spaceFormatted(e) + c + (o ? "&nbsp;" + wb.settings.currencyShortNameSymbol : "");
        },
        formatMoneyV2: function (e, t, n, o) {
            if (wb.settings.stageOfDenomination) {
                var i = Number(e);
                if (0 !== i) {
                    var r = o ? String.format(o, "&nbsp;р.&nbsp;") : "&nbsp;р.&nbsp;",
                        a = o ? String.format(o, "&nbsp;к.") : "&nbsp;к.";
                    return i.formatMoney(2, r, "&nbsp;") + a;
                }
            }
            var s = t ? wb.settings.currencyShortName : "";
            return o && (s = String.format(o, s)), wb.helpers.string.spaceFormatted(e) + s + (n ? "&nbsp;" + wb.settings.currencyShortNameSymbol : "");
        },
        priceWithCurrency: function (e, t, n) {
            return t || (!isNaN(e) && e)
                ? ("by" === wb.settings.currentLocale && ((e = n ? ((o = Math.round(100 * (e % 1).toFixed(2))), Math.floor(e)) : ((o = Math.floor((e % 1e4) / 100)), Math.floor(e / 1e4))), o < 10 && (o = "0" + o)),
                  e.toString().replace(/\B(?=(\d{3})+(?!\d))/g, "&nbsp;") + "&nbsp;" + wb.settings.currencyShortName + (o ? "&nbsp;" + o + "&nbsp;к." : ""))
                : "";
            var o;
        },
        currencyWithString: function (e, t) {
            if (!t && (isNaN(e) || !e)) return "";
            var n = wb.helpers.declension(e, wb.settings.currencyNominative, wb.settings.currencyGenitiveSingular, wb.settings.currencyGenitivePlural);
            return "{0}" + e.toString().replace(/\B(?=(\d{3})+(?!\d))/g, "&nbsp;") + "{1}" + n + "{2}";
        },
        urlForGood: function (e, t, n) {
            return (t ? wb.settings.fullDomainName : "") + "/catalog/" + e + "/detail.aspx" + (n ? "?targetUrl=" + n : "");
        },
        urlForStatic: function (e, t) {
            return wb.settings.staticSiteUrl + e;
        },
        urlForPaymentIcon: function (e) {
            return wb.settings.imagesSiteUrl + "/basket/" + (e || "").toLowerCase() + ".png";
        },
        toLower: function (e) {
            return e.toLowerCase();
        },
        dateFromTimestamp: function (e, t) {
            return new Date(e).format(t || "dd.MM.yyyy HH:mm");
        },
        formatDate: function (e, t) {
            return e ? ("string" == typeof e ? new Date(e).format(t) : e.format(t)) : "";
        },
        localize: function (e) {
            return $.localize(e);
        },
        pluralize: function (e) {
            return $.pluralize(e, Array.prototype.slice.call(arguments, 1));
        },
        customDateTimeFormat: function (e, t, n, o) {
            var i = new Date(e),
                r = new Date();
            if (i.toDateString() === r.toDateString()) return n + ", " + i.format("HH:mm");
            var a = function () {
                return this.setDate(this.getDate() - 1), this;
            }.call(r);
            if (i.toDateString() === a.toDateString()) return o + ", " + i.format("HH:mm");
            var s = i.format(t);
            return i.getFullYear() < r.getFullYear() ? s + " " + i.getFullYear() + ", " + i.format("HH:mm") : s + ", " + i.format("HH:mm");
        },
    }),
    $.views.tags({
        range: {
            boundProps: ["start", "end"],
            baseTag: "for",
            render: function (e) {
                var t = e,
                    n = this.tagCtx,
                    o = n.props.start || 0,
                    i = n.props.end,
                    r = n.params.props;
                if (o || i)
                    if (n.args.length) $.isArray(t) && (t = t.slice(o, i));
                    else {
                        (t = []), (i = i || 0);
                        for (var a = o; a <= i; a++) t.push(a);
                    }
                return arguments.length || (r && (r.start || r.end)) ? this.base(t) : this.base();
            },
            onArrayChange: function (e, t) {
                this.refresh();
            },
        },
        filter_sort: {
            baseTag: "for",
            render: function (e) {
                if (!e) return "";
                var t,
                    n,
                    o,
                    i,
                    r = e,
                    a = this.tagCtx.props.filterby,
                    s = this.tagCtx.props.sortby,
                    c = this.tagCtx.props.reverse;
                return (
                    s &&
                        (r = r.slice(0).sort(
                            ((t = s),
                            (i = o
                                ? function (e) {
                                      return o(e[t]);
                                  }
                                : function (e) {
                                      return e[t];
                                  }),
                            (n = (n = c) ? -1 : 1),
                            function (e, t) {
                                return (e = i(e)), (t = i(t)), n * ((t < e) - (e < t));
                            })
                        )),
                    a &&
                        (r = r.slice(0).filter(function (e) {
                            return (function (e) {
                                if (!e)
                                    return function () {
                                        return !0;
                                    };
                                var i = e.match(/(\w+)\s*?([\=\>\<][\=]|[\>\<]{1})\s*(\w+)/);
                                return i
                                    ? function (e) {
                                          var t = i[1],
                                              n = i[2],
                                              o = i[3];
                                          return "==" == n ? e[t] == o : ">" == n ? e[t] == o : ">=" == n ? e[t] >= o : "<=" == n ? e[t] <= o : "<" == n && e[t] < o;
                                      }
                                    : function () {
                                          return !0;
                                      };
                            })(a)(e);
                        })),
                    $.views.tags.for.render.apply(this, [r])
                );
            },
            onArrayChange: function (e, t) {
                this.refresh();
            },
        },
    }),
    $.views.tags({
        fileUploader: {
            template: '<input id="file-input" class="{{:~tagCtx.props.class}}" type="file" name="file" accept="{{:~tagCtx.props.accept}}">',
            onBind: function (e) {
                var n = this;
                this.fileUploader = e.mainElem
                    .fileuploader({
                        dropTarget: e.props.dropTarget,
                        dropCss: e.props.dropCss,
                        paramName: e.props.param || "file",
                        uploadUrl: e.ctx.fileUploaderUrl,
                        width: 0,
                        heigth: 0,
                        caseInsensitiveExt: !0,
                        fileAllowedExt: ["JPG", "JPEG", "PDF"],
                        fileSizeLimit: 1e7,
                        dnd: e.props.dnd,
                    })
                    .on("onBeforeUpload", function (e, t) {
                        n.ctxPrm("uploadedFile", $.extend({ uploading: !0 }, t.file));
                    })
                    .on("onUploadSuccess", function (e, t) {
                        $.processResponse(
                            t,
                            function () {
                                n.ctxPrm("uploadedFile", $.extend({ uploaded: !0 }, t.file));
                            },
                            function (e) {
                                n.ctxPrm("uploadedFile", $.extend({ error: e }, t.file));
                            }
                        );
                    })
                    .on("onUploadError", function (e, t) {
                        n.ctxPrm("uploadedFile", $.extend({ error: t.msg }, t.file));
                    });
            },
            onUnbind: function () {
                this.fileUploader && this.fileUploader.destroy();
            },
            onUpdate: !1,
            mainElement: "input",
            bindTo: ["uploadedFile"],
            linkedCtxParam: ["uploadedFile"],
        },
        calendar: {
            template: { markup: "#calendarTmpl", converters: {} },
            mainElement: ".date-wrap-label",
            dataBoundOnly: !0,
            onUpdate: !1,
            bindTo: ["selected", "limitTo", "limitFrom"],
            linkedCtxParam: ["selected", "limitTo", "limitFrom"],
            format: "dd.MM.yyyy",
            init: function (e) {
                e.props.format && (this.format = e.props.format);
            },
            onBind: function (i) {
                this.datePicker = i.mainElem
                    .find("input")
                    .glDatePicker({
                        selectedDate: this.ctxPrm("selected"),
                        customWidth: i.props.width,
                        zIndex: i.props.zIndex,
                        onClick: $.proxy(function (e, t, n, o) {
                            this.ctxPrm("selected", n), $.isFunction(i.props.onSelect) && i.props.onSelect(n);
                        }, this),
                    })
                    .glDatePicker(!0);
            },
            onAfterLink: function (e, t, n, o, i) {
                var r = { from: e.props.defaultFrom ? e.props.defaultFrom : new Date(2001, 1, 1), to: new Date() };
                e.props.limitFrom && (r.from = e.props.limitFrom), e.props.limitTo && (r.to = e.props.limitTo), (this.datePicker.options.selectableDateRange = [r]);
                for (var a = [], s = r.from.getFullYear(); s <= r.to.getFullYear(); s++) a.push(s);
                (this.datePicker.options.selectableYears = a), this.datePicker.render();
            },
        },
        multiDropDown: {
            template: {
                markup: "#multiDropdownTmpl",
                converters: {
                    fromId: function (e) {
                        var t = this.tagCtx.view.parent.data;
                        return [
                            e.map(function (n) {
                                var o;
                                return (
                                    t.forEach(function (e, t) {
                                        n !== e.value.toString() || (o = t);
                                    }),
                                    o
                                );
                            }),
                        ];
                    },
                    toId: function (e) {
                        var t = this.tagCtx.view.parent.data;
                        return [
                            e.map(function (e) {
                                return t[e].value.toString();
                            }),
                        ];
                    },
                },
            },
            bindTo: ["selected"],
            mainElement: ".i-drop-checkbox-base",
            init: function (i) {
                $.observe(this, "selected", function (e, t) {
                    var n = i.args[0],
                        o = this.selected.map(function (e) {
                            return n[e].value;
                        });
                    i.props.onChange && i.props.onChange.call(this, o, i), this.updateValue(o);
                });
            },
            onBind: function (e) {
                var t = e.props.selected || 0 === e.props.selected ? e.props.selected : -1;
                !this.inited && -1 < t && ((this.inited = !0), $.observable(this).setProperty("selected", [t]));
            },
            onUnbind: function (e) {
                this.selected = [];
            },
            selected: [],
            remove: function (e, t) {
                e.stopPropagation(), $.observable(this.selected).remove(t.view.index);
            },
            toggle: function (e, t) {
                var n = this.mainElem;
                $.observable(this).setProperty("open", !this.open),
                    n.find(".drop-list").wbToggle({
                        onOverHide: $.proxy(function () {
                            $.observable(this).setProperty("open", !1);
                        }, this),
                        targetElem: n,
                    });
            },
        },
        dropDown: {
            template: {
                markup: "#dropdownTmpl",
                converters: {
                    fromId: function (n) {
                        var o = -1;
                        return (
                            this.tagCtx.view.parent.data.forEach(function (e, t) {
                                n === e.value.toString() && (o = t);
                            }),
                            o
                        );
                    },
                    toId: function (e) {
                        return -1 === e || void 0 === e ? "" : this.tagCtx.view.parent.data[e].value.toString();
                    },
                    fromObj: function (e) {
                        return e ? e.value : "";
                    },
                    toObj: function (n) {
                        var o = {};
                        return (
                            this.tagCtx.view.parent.data.forEach(function (e, t) {
                                n === e.value.toString() && (o = e);
                            }),
                            o
                        );
                    },
                },
            },
            bindTo: ["selected"],
            mainElement: ".i-drop-radio-base",
            dataBoundOnly: !0,
            selected: -1,
            previousSelected: -1,
            init: function (e, t, n) {
                $.observe(this, "selected", function (e, t) {
                    (this.previousSelected = t.oldValue), this.updateValues(this.selected);
                });
            },
            onBind: function (e) {
                var t = e.props.selected;
                if (e.args[0] && t) {
                    var n = _.findWhere(e.args[0], { value: t.value });
                    $.observable(this).setProperty("selected", n);
                }
            },
            onUpdate: !1,
            onAfterLink: function (e, t, n, o, i) {},
            toggle: function (e, t) {
                var n = this.mainElem;
                if (this.mainElem.hasClass("disabled")) return !1;
                $.observable(this).setProperty("open", !this.open),
                    n.find(".drop-list").wbToggle({
                        alwaysHide: !0,
                        onOverHide: $.proxy(function () {
                            $.observable(this).setProperty("open", !1);
                        }, this),
                        targetElem: $(t.linkCtx.elem),
                    });
            },
        },
    }),
    (wb.HtmlElement = function (i) {
        ((i = i || {}).this = this),
            (i.this.id = i.this.id || wb.helpers.guid()),
            (i.deferred = { init: $.Deferred(), initAll: $.Deferred() }),
            (this.initPromise = i.deferred.init.promise()),
            (this.initAllPromise = i.deferred.initAll.promise()),
            i.tmpl && $.templates(i.this.id, i.tmpl);
        var t = {
            init: function (e) {
                if (!i.sl && !e) throw "Element havn't .sl";
                (e = e || i.sl), (i.this.$ = (i.this.wrapper && i.this.wrapper.$ && i.this.wrapper.$.find(e)) || $(e)), i.deferred.init.resolve();
            },
            initAll: function () {
                for (var e in i.this)
                    i.this.hasOwnProperty(e) && i.this[e] && i.this[e].init && !i.this[e].inited && ((i.this[e].wrapper = void 0 === i.this[e].wrapper ? i.this : i.this[e].wrapper), i.this[e].init(), (i.this[e].inited = !0));
                i.deferred.initAll.resolve();
            },
            bind: function (e) {
                if (!i.sl) throw "Element havn't .sl";
                if (!i.this.wrapper && !i.this.$) throw "Element havn't .wrapper and .$";
                (i.this.wrapper && i.hnd && i.this.wrapper.$.on(e, i.sl, i.hnd[e])) || (i.this.$ instanceof jQuery && i.this.$.on(e, i.hnd[e]));
            },
            unbind: function (e) {
                if (!i.sl) throw "Element havn't .sl";
                if (!i.this.wrapper && !i.this.$) throw "Element havn't .wrapper and .$";
                (i.this.wrapper && i.hnd && i.this.wrapper.$.off(e)) || (i.this.$ instanceof jQuery && i.this.$.off(e));
            },
            bindEvents: function () {
                if (!i.eventsBinded) {
                    for (var e in i.hnd) i.hnd.hasOwnProperty(e) && t.bind.call(i.this, e);
                    i.eventsBinded = !0;
                }
            },
            unbindEvents: function () {
                if (i.eventsBinded) {
                    for (var e in i.hnd) i.hnd.hasOwnProperty(e) && t.unbind.call(i.this, e);
                    i.eventsBinded = !1;
                }
            },
            bindClick: function () {
                t.bind.call(i.this, "click");
            },
            bindHover: function () {
                t.bind.call(i.this, "hover");
            },
            show: function () {
                i.this.$.show();
            },
            hide: function () {
                i.this.$.hide();
            },
            insert: function (e) {
                i.this.$.html(e);
            },
            remove: function () {
                i.this.$.remove();
            },
            empty: function () {
                i.this.$.empty();
            },
            getFullSl: function () {
                return i.this.wrapper ? String.format("{0} {1}", i.this.wrapper.sl, i.sl) : i.sl;
            },
            val: function (e) {
                return arguments.length ? i.this.$.val(e).val() : i.this.$.val();
            },
            floatVal: function (e) {
                "string" == typeof e && (e = e.replace(",", "."));
                var t,
                    n = parseFloat(e);
                return (t = isNaN(n) ? i.this.$.val() : i.this.$.val(n).val()), parseFloat(t.replace(",", "."));
            },
            render: function (e, t) {
                if (!i.tmpl) return null;
                var n = "",
                    o = i.this.$;
                if ((e && (n = $.render[i.this.id](e)), "boolean" == typeof t && t && i.this.wrapper && 0 < i.this.wrapper.$.length && (o = i.this.wrapper.$), "boolean" == typeof t && !t)) return n;
                "object" === _typeof(t) && (o = t), o.html(n);
            },
        };
        (i.this.parent = {}),
            (i.this.sl = i.sl),
            i.this.getFullSl ? (i.this.parent.getFullSl = t.getFullSl) : (i.this.getFullSl = t.getFullSl),
            i.this.init ? (i.this.parent.init = t.init) : (i.this.init = t.init),
            i.this.initAll ? (i.this.parent.initAll = t.initAll) : (i.this.initAll = t.initAll),
            i.this.bindEvents ? (i.this.parent.bindEvents = t.bindEvents) : (i.this.bindEvents = t.bindEvents),
            i.this.unbindEvents ? (i.this.parent.unbindEvents = t.unbindEvents) : (i.this.unbindEvents = t.unbindEvents),
            i.this.bindClick ? (i.this.parent.bindClick = t.bindClick) : (i.this.bindClick = t.bindClick),
            i.this.bindHover ? (i.this.parent.bindHover = t.bindHover) : (i.this.bindHover = t.bindHover),
            i.this.show ? (i.this.parent.show = t.show) : (i.this.show = t.show),
            i.this.hide ? (i.this.parent.hide = t.hide) : (i.this.hide = t.hide),
            i.this.insert ? (i.this.parent.insert = t.insert) : (i.this.insert = t.insert),
            i.this.remove ? (i.this.parent.remove = t.remove) : (i.this.remove = t.remove),
            i.this.empty ? (i.this.parent.empty = t.empty) : (i.this.empty = t.empty),
            i.this.render ? (i.this.parent.render = t.render) : (i.this.render = t.render),
            i.this.val ? (i.this.parent.val = t.val) : (i.this.val = t.val),
            i.this.floatVal ? (i.this.parent.floatVal = t.floatVal) : (i.this.floatVal = t.floatVal);
    }),
    Storage &&
        (Storage.prototype.trySetItem = function (e, t) {
            try {
                this.setItem(e, t);
            } catch (e) {}
        }),
    (window.supportLocalStorage = (function () {
        try {
            return "localStorage" in window && null !== window.localStorage;
        } catch (e) {
            return !1;
        }
    })()),
    window.supportLocalStorage &&
        (Storage.prototype.putObject = function (e, t) {
            this.setItem(e, JSON.stringify(t));
        }),
    window.supportLocalStorage &&
        (Storage.prototype.getObject = function (t) {
            var e = this.getItem(t);
            try {
                return e && JSON.parse(e);
            } catch (e) {
                this.removeItem(t);
            }
            return null;
        }),
    (wb.user = new (function () {
        var t, n;
        return {
            getId: function () {
                var e = $.cookie("um");
                if (!e) return "";
                var t = e.split(":")[0].split("=")[1];
                return t ? decodeURIComponent(t) : "";
            },
            getxinfo: function () {
                if (n) return n;
                if (((n = $.Deferred()), t)) n.resolve(t);
                else {
                    var e = localStorage.getObject("xinfo");
                    e && Date.now() - e.time < 6e4 && ((t = e.data), n.resolve(t)),
                        $.post("/user/get-xinfo")
                            .done(function (e) {
                                (t = e), localStorage.putObject("xinfo", { time: Date.now(), data: t }), n.resolve(t);
                            })
                            .fail(function () {
                                n.reject();
                            });
                }
                return n.promise();
            },
            clearxinfo: function () {
                (t = void 0), localStorage.removeItem("xinfo");
            },
        };
    })()),
    (wb.xnm = (function () {
        var a = "https://nm-2-card.wildberries.ru/enrichment/v1/api";
        function r(e, t) {
            var n = (t && t.extended) || (!t && e.extended);
            return {
                NmId: e.id,
                Price: e.price,
                Sale: (n && n.promoSale) || 0,
                PriceWithCoupon: (n && n.promoPrice) || (n && n.basicPrice) || (e.diffPrice && t ? t.salePrice : e.salePrice),
                PriceWithCouponAndDiscount: (n && n.clientPrice) || (n && n.promoPrice) || (n && n.basicPrice) || (e.diffPrice && t ? t.salePrice : e.salePrice),
                IsCouponed: !(!n || !n.promoSale),
                EndDate: "",
                CouponNumber: "",
                Bonus: e.bonus || 0,
                PostpaidBonus: (e.diffPrice && t ? t.postpaidBonus : e.postpaidBonus) || 0,
                OnlineBonus: (e.diffPrice && t ? t.onlineBonus : e.onlineBonus) || 0,
                DenomBonus: 0,
                FinalPersonalDiscount: (n && n.clientSale) || 0,
                FinalSale: e.sale,
                CouponDescFull: "Промокод",
                CouponDescShort: "Промокод",
                CouponSourceMap: 0,
                Badge: "",
            };
        }
        return {
            fillPrice: function (n, o) {
                function i(e, t) {
                    var o = {};
                    $.each(t, function (e, t) {
                        var n = t.id ? t.id : t.nmId;
                        o[n] = { price: t.price, priceWithCouponAndDiscount: t.salePrice ? t.salePrice : t.finalPrice };
                    }),
                        $.each(e, function (e, t) {
                            var n = o[t.cod1S];
                            n && ((t.price = n.price), (t.priceWithCouponAndDiscount = n.priceWithCouponAndDiscount));
                        });
                }
                if (wb.settings.enableRecommendedXnm)
                    $.when(wb.user.getxinfo()).done(function (e) {
                        var t =
                            e +
                            "&nm=" +
                            $.map(n, function (e) {
                                return e.cod1S;
                            }).join(";");
                        $.ajax({
                            type: "GET",
                            xhrFields: { withCredentials: !1 },
                            url: a,
                            data: t,
                            processData: !1,
                            success: function (e) {
                                0 === e.state && e.data.products && i(n, e.data.products);
                            },
                            complete: o,
                        });
                    });
                else {
                    if (!wb.settings.enableRecommendedPromotizer || !wb.settings.enableCatalogPromotizer) return void o();
                    var r = [];
                    $.each(n, function (e, t) {
                        r.push(t.cod1S);
                    }),
                        $.ajax({
                            type: "POST",
                            url: "/content/cardspromo",
                            data: { nmList: r },
                            success: function (e) {
                                e && i(n, e);
                            },
                            complete: o,
                        });
                }
            },
            fillPriceCatalog: function (o, n) {
                wb.settings.enableCatalogXnm
                    ? $.when(wb.user.getxinfo()).done(function (e) {
                          var t =
                              e +
                              "&nm=" +
                              $.map(o, function (e, t) {
                                  return t;
                              }).join(";");
                          $.ajax({
                              type: "GET",
                              xhrFields: { withCredentials: !1 },
                              url: a,
                              data: t,
                              processData: !1,
                              success: function (e) {
                                  0 === e.state &&
                                      e.data.products &&
                                      $.each(e.data.products, function (e, t) {
                                          var n = o[t.id];
                                          n &&
                                              ((n.priceWithCouponAndDiscount = t.salePrice),
                                              (n.finalSale = t.sale),
                                              (n.minPrice = t.salePrice),
                                              (n.maxPrice = t.diffPrice ? t.salePrice + 1 : t.salePrice),
                                              (n.bonus = t.bonus || 0),
                                              (n.postpaidBonus = t.postpaidBonus || 0),
                                              (n.onlineBonus = t.onlineBonus || 0));
                                      });
                              },
                              complete: n,
                          });
                      })
                    : n();
            },
            fillPriceProductCard: function (n, o) {
                wb.settings.enableProductXnm
                    ? $.when(wb.user.getxinfo()).done(function (e) {
                          var t =
                              e +
                              "&nm=" +
                              $.map(n, function (e, t) {
                                  return t;
                              }).join(";");
                          $.ajax({
                              type: "GET",
                              xhrFields: { withCredentials: !1 },
                              url: a,
                              data: t,
                              processData: !1,
                              success: function (e) {
                                  0 === e.state &&
                                      e.data.products &&
                                      $.each(e.data.products, function (e, o) {
                                          var i = n[o.id];
                                          i &&
                                              (i.minPriceForDcn &&
                                                  ((i.minPriceForDcn.item1 = (o.extended && o.extended.basicPrice) || o.salePrice),
                                                  (i.minPriceForDcn.item2 = o.price),
                                                  (i.minPriceForDcn.item3 = (o.extended && o.extended.basicSale) || 0),
                                                  (i.minPriceForDcn.item4 = o.diffPrice)),
                                              (i.promoInfo = r(o))),
                                              $.each(o.sizes, function (e, t) {
                                                  var n = i.sizes[t.optionId];
                                                  n &&
                                                      0 < n.price &&
                                                      ((n.priceWithSale = o.diffPrice ? (t.extended && t.extended.basicPrice) || t.salePrice : (o.extended && o.extended.basicPrice) || o.salePrice),
                                                      (n.price = o.diffPrice ? t.price : o.price),
                                                      (n.sale = (o.extended && o.extended.basicSale) || 0),
                                                      (n.promoInfo = o.diffPrice ? r(o, t) : i.promoInfo));
                                              });
                                      });
                              },
                              complete: o,
                          });
                      })
                    : o();
            },
        };
    })()),
    wb.namespace("utils", {
        preventDoubleClick: function (e) {
            var t = $(this),
                n = { timeout: t.data("prevent-double-click-timeout") || 5e3 };
            ("FORM" == this.tagName && t.data("validator") && !t.data("validator").valid()) ||
                (t.data("clicked")
                    ? (e.preventDefault(), e.stopPropagation())
                    : (t.data("clicked", !0),
                      setTimeout(function () {
                          t.data("clicked", !1);
                      }, n.timeout)));
        },
        checkUserBrowser: function () {
            $.when(wb.basket.sessionStarted).then(function () {
                $.when(wb.utils.script.require(wb.settings.scripts.browser)).then(function () {
                    "undefined" == wb.browser ||
                        wb.browser.isBot() ||
                        $.get("utils/checkoldbrowser", wb.browser.getBrowser()).done(function (t) {
                            $.isEmptyObject(t) &&
                                $(".update-browser-popup")
                                    .jqm({
                                        focusOn: !1,
                                        trigger: !1,
                                        onShow: function (e) {
                                            e.w.html(t);
                                        },
                                    })
                                    .jqmShow();
                        });
                });
            });
        },
        isElementInViewport: function (e, t) {
            "function" == typeof jQuery && e instanceof jQuery && (e = e[0]);
            var n = e.getBoundingClientRect();
            return 0 <= n.top && (t || 0 <= n.left) && n.bottom <= (window.innerHeight || document.documentElement.clientHeight) && (t || n.right <= (window.innerWidth || document.documentElement.clientWidth));
        },
    }),
    jQuery.each(["put", "delete"], function (e, i) {
        jQuery[i] = function (e, t, n, o) {
            return jQuery.isFunction(t) && ((o = o || n), (n = t), (t = void 0)), jQuery.ajax({ url: e, type: i, dataType: o, data: t, success: n });
        };
    }),
    (function ($) {
        (jQuery.IsNullOrEmpty = function (e) {
            return null == e || "" == e;
        }),
            (jQuery.shuffle = function (e) {
                for (var t, n = [], o = e.length; o; ) (t = Math.floor(Math.random() * e.length)) in e && (n.push(e[t]), delete e[t], o--);
                return n;
            }),
            ($.fn.clearInput = function () {
                return this.wrap("<form>").closest("form").get(0).reset(), this.unwrap(), this;
            }),
            ($.fn.loadNextLazyImgs = function (e, t) {
                return (
                    (!0 !== e
                        ? this.find(".j-good-item.jc-active").prevAll(":not(.jc-clone)").slice(0, t).find("img").filter("[data-original]")
                        : this.find(".j-good-item.jc-active")
                              .nextAll(":not(.jc-clone)")
                              .slice(0, 2 * t - 1)
                              .find("img")
                              .filter("[data-original]")
                    ).each(function (e, t) {
                        var n = $(t);
                        n.attr("src", n.data("original")).removeAttr("data-original");
                    }),
                    this
                );
            }),
            (jQuery.fn.putCursorAtEnd = function () {
                return this.each(function () {
                    if ($(this).is("[contenteditable]"))
                        !(function (e) {
                            var t, n;
                            document.createRange
                                ? ((t = document.createRange()).selectNodeContents(e), t.collapse(!1), (n = window.getSelection()).removeAllRanges(), n.addRange(t))
                                : document.selection && ((t = document.body.createTextRange()).moveToElementText(e), t.collapse(!1), t.select());
                        })(this);
                    else {
                        if (($(this).focus(), this.setSelectionRange)) {
                            var e = 2 * $(this).val().length;
                            this.setSelectionRange(e, e);
                        } else $(this).val($(this).val());
                        this.scrollTop = 999999;
                    }
                });
            }),
            $.fn.extend({
                limit: function limit(_limit, element) {
                    var interval,
                        substringFunction,
                        self = $(this);
                    self.focus(function () {
                        interval = window.setInterval(substring, 100);
                    }),
                        self.blur(function () {
                            clearInterval(interval), substring();
                        }),
                        (substringFunction = "function substring(){ var val = $(self).val();var length = val.length;"),
                        void 0 !== element &&
                            (substringFunction += "if($(element).html() != limit-length){$(element).html(limit-length == 0 ? '0' : limit-length); if(limit-length<0){$(element).css('color','red');}else{$(element).css('color','black');}}"),
                        (substringFunction += "}"),
                        eval(substringFunction),
                        substring();
                },
                getSelectedText: function () {
                    var e = this[0],
                        t = e.selectedIndex;
                    return 0 <= t ? e.options[t].text : void 0;
                },
            }),
            ($.fn.limitText = function (e, t, n, o, i) {
                0 != $(this).length &&
                    (CalculationLimitText(this, e, t, n, o, i),
                    $(this).keyup(function () {
                        CalculationLimitText(this, e, t, n, o, i);
                    }),
                    $(this).keydown(function () {
                        CalculationLimitText(this, e, t, n, o, i);
                    }),
                    $(this).focusout(function () {
                        $(this).val($.trim($(this).val())), CalculationLimitText(this, e, t, n, o, i);
                    }));
            }),
            ($.fn.charsCounter = function (e) {
                var i = $.extend({ text: $.localize("Введено символов") + ": " }, e);
                return (
                    this.each(function () {
                        var e = $(this),
                            t = parseInt(e.attr("maxlength") || e.attr("data-val-length-max")),
                            n = e.parent().find(".j-count-placeholder");
                        function o() {
                            n.text(i.text + e.val().length + " " + $.localize("из") + " " + t);
                        }
                        i.show && o(),
                            e.on("keyup input", function () {
                                o();
                            });
                    }),
                    this
                );
            }),
            ($.fn.stepByStep = function (o) {
                function i(n) {
                    $.each(a, function (e, t) {
                        n < e && !t.val().length && a[e - 1] && !a[e - 1].val().length && t.prop("readonly", !0).addClass(s.disableClass);
                    });
                }
                var n,
                    r,
                    e,
                    a = {},
                    s = $.extend(
                        {
                            disableClass: "step-disabled",
                            validate: function () {
                                return !0;
                            },
                        },
                        o
                    );
                this.each(function () {
                    var e = $(this);
                    a[parseInt(e.attr("tabindex"))] = e;
                }),
                    (n = a),
                    (r = {}),
                    (e = $.map(n, function (e, t) {
                        return t;
                    }).sort()),
                    $.each(e, function (e, t) {
                        r[t] = n[t];
                    }),
                    (a = r),
                    i(
                        $.map(a, function (e, t) {
                            return t;
                        })[0]
                    ),
                    this.on("keyup change input focusout", function (e) {
                        var t = $(this),
                            n = parseInt(t.attr("tabindex"));
                        t.val().length && o.validate(t) ? a[n + 1] && a[n + 1].prop("readonly", !1).removeClass(s.disableClass) : ((n = a[n - 1] && !a[n - 1].val().length ? n - 1 : n), i(n));
                    });
            }),
            ($.observable.Object.prototype._getByPath = function (e) {
                if (e)
                    var t = e.split("."),
                        n = this._data;
                for (var o = 0; o < t.length; o++) n = n[t[o]];
                return n;
            }),
            ($.observable.Object.prototype.merge = function (e, a) {
                var s = this;
                $.each(e, function (e, t) {
                    var n = e;
                    a && (n = a + "." + n);
                    var o = s._getByPath(n);
                    if (null == o || null == o) s.setProperty(n, t);
                    else if ($.isPlainObject(t)) s.merge(t, n);
                    else if ($.isArray(t)) {
                        for (var i = 0; i < t.length; i++)
                            if (o.length === i) $.observable(o).insert(t[i]);
                            else {
                                var r = $.isPlainObject(o[i]) ? "merge" : "setProperty";
                                $.observable(o[i])[r](t[i]);
                            }
                        for (; t.length < o.length; ) $.observable(o).remove(o.length - 1);
                    } else s.setProperty(n, t);
                });
            }),
            ($.observable.Object.prototype.setAllProperty = function (e, o) {
                var i = this;
                $.each(e, function (e, t) {
                    var n = e;
                    o && (n = o + "." + n), $.isPlainObject(t) ? i.setAllProperty(t, n) : $.isArray(t) || i.setProperty(n, t);
                });
            }),
            ($.observable.Array.prototype.refreshArray = function (e) {
                for (var t = this, n = 0; n < e.length; n++) t._data.length === n ? t.insert(e[n]) : $.observable(t._data[n]).setProperty(e[n]);
                for (; e.length < t._data.length; ) t.remove(t._data.length - 1);
            }),
            ($.views.loadTemplate = function (t, e) {
                var n = $.Deferred();
                if ($.templates[t]) n.resolve($.templates[t]);
                else {
                    var o = e || $.views.converters.urlForJsTmpl(t);
                    $.get(o, { client: $.cookie(wb.settings.cookie.mobileClient), culture: $.currentCulture })
                        .done(function (e) {
                            $.templates(t, e), $.templates[t] ? n.resolve($.templates[t]) : n.reject("tmpl not found");
                        })
                        .fail(function () {
                            n.reject("get error");
                        });
                }
                return n.promise();
            }),
            ($.distinct = function (e) {
                var n = [];
                return (
                    $.each(e, function (e, t) {
                        -1 == $.inArray(t, n) && n.push(t);
                    }),
                    n
                );
            }),
            ($.paramsToJson = function (e) {
                var n, t;
                return (
                    (t = e.replace(/\?/, "").split("&")),
                    (n = {}),
                    $.each(t, function (e, t) {
                        return (t = t.split("=")), (n[t[0]] = t[1]);
                    }),
                    n
                );
            }),
            ($.aggregate = function (e, t, n) {
                var o = null == t ? "" : t;
                return (
                    $(e).each(function (e, t) {
                        o = n(o, t);
                    }),
                    o
                );
            }),
            ($.fn.tabs = function (e, t) {
                function n(e) {
                    var t = r.filter(e),
                        n = t.attr("data-ajax-content");
                    n && !t.data("ajax-content-loaded") && c(n, t), r.removeClass("active").filter(e).addClass("active"), s();
                }
                var o,
                    i = this.data("tabs"),
                    r = $(this).find("li"),
                    a = this,
                    s = function () {
                        o.hide();
                        var e = o.filter('[data-tab="' + r.filter(".active").first().attr("id") + '"]').show();
                        a.trigger("change-tab.tabs", e);
                    },
                    c = function (e, t) {
                        o.filter('[data-tab="' + t.attr("id") + '"]').load(e + "?_=" + $.now(), function () {
                            t.data("ajax-content-loaded", !0);
                        });
                    },
                    l = {
                        reset: function () {
                            i.$li.removeClass("active"), i.$content.hide();
                        },
                        select: function () {
                            n(t);
                        },
                    };
                return "string" == $.type(e) && i
                    ? ((o = i.$content), l[e] && l[e](), this)
                    : i
                    ? this
                    : ((o = e),
                      r.on("click", function (e) {
                          e.preventDefault(), n(this);
                      }),
                      s(),
                      this.data("tabs", { $li: r, $content: o }));
            }),
            ($.fn.serializeObject = function () {
                for (var e = this.serializeArray(), t = {}, n = 0; n < e.length; n++) t[e[n].name] = e[n].value;
                return t;
            }),
            ($.repeat = function (e, t, n, o) {
                var i = 0,
                    r = setInterval(function () {
                        if (t < i) return clearInterval(r), void (o && o());
                        e(r) && clearInterval(r), i++;
                    }, n);
            }),
            ($.repeat_v2 = function (e, t, n, o) {
                var i = 0,
                    r = setInterval(function () {
                        if (t < i) return clearInterval(r), void (o && o());
                        e(r) && clearInterval(r), i++;
                    }, n);
                e(r);
            }),
            ($.toMvcList = function (n, e) {
                var i = [];
                return (
                    $.each(e, function (e, t) {
                        var o = n + "[" + e + "]";
                        $.each(t, function (e, t) {
                            var n = o + "." + e;
                            $.isPlainObject(t)
                                ? $.each(t, function (e, t) {
                                      i.push({ name: n + "." + e, value: t });
                                  })
                                : i.push({ name: n, value: t });
                        });
                    }),
                    i
                );
            }),
            ($.parseUrl = function (e) {
                var t = document.createElement("a");
                return (t.href = e), "/" !== t.pathname.charAt(0) && (t.pathname = "/" + t.pathname), t;
            });
    })(jQuery),
    (_replaceEmojiArr = [
        { regex: /^\[d\]\[b\]\[\/d\]/g, replace: "" },
        { regex: /\[\/d\]\[d\]/g, replace: "\n" },
        { regex: /\[d\]/g, replace: "\n" },
        { regex: /\[\/d\]/g, replace: "" },
        { regex: /\[b\]/g, replace: "" },
        { regex: /&nbsp;/g, replace: " " },
    ]),
    (_replaceEmojiBackArr = [
        { regex: "\n\n", replace: "[d][b][/d][d]" },
        { regex: /\n/g, replace: "[b][/d][d]" },
        { regex: / /g, replace: "&nbsp;" },
        { regex: /$/g, replace: "[/d]" },
    ]),
    $.ajaxSetup({
        cache: !0,
        statusCode: {
            401: function () {
                !wb.settings.isMobileDevice && wb.settings.enablePopupLogin ? wb.auth.signIn.show() : (window.location.href = $.views.helpers.urlSignIn());
            },
        },
        beforeSend: function (e, t) {
            var n = $("input[name=__RequestVerificationToken]").val(),
                o = n && encodeURIComponent(n);
            if ((this.crossDomain || (o && e.setRequestHeader("X-RequestVerificationToken", o)), wb.settings._corsDomain && 0 !== this.url.indexOf("http") && !this.url.match("^/ext/.*"))) {
                if (
                    (e.setRequestHeader("X-Requested-With", "XMLHttpRequest"),
                    o && e.setRequestHeader("X-RequestVerificationToken", o),
                    (this.url = wb.settings._corsDomain + ("/" === this.url[0] ? "" : "/") + this.url),
                    "GET" === this.type)
                )
                    1 < this.url.split("?").length ? (this.url += "&cd=true") : (this.url += "?cd=true");
                (this.crossDomain = !0), (this.xhrFields = { withCredentials: !0 });
            }
        },
        xhrFields: { withCredentials: !0 },
    }),
    $(function () {
        wb.menu.top && wb.menu.top.init(),
            wb.settings.enableToggleTopMenu || wb.header.parallax.init(),
            searchPreInit(),
            wb.adult.init(),
            wb.geo.initUserFormMarketing(),
            wb.stat.sendPageView(),
            wb.basket.basketShortInit(),
            wb.header.topControls.hoverInit(),
            wb.subscribes.bindClick(),
            wb.geo.initPreferdLocation(),
            wb.geo.initPhones(),
            wb.utils.checkUserBrowser(),
            (window.commManager = new wb.communications()),
            "True" == wb.settings.newsEnabled &&
                $.post(
                    "/news/info",
                    function (e) {
                        e && $(".header").after(e);
                    },
                    "html"
                ),
            referrerEvent(),
            beeViewEvent(),
            wb.cookie.initPolicy(),
            wb.webPushCheck.init(),
            wb.vipStatusCheck.init();
        var e = $(".j-li-go-to-mobile-site");
        e.length &&
            e
                .show()
                .one("click", function (e) {
                    e.preventDefault(),
                        $.cookie(wb.settings.cookie.mobileClient, "1", { expires: 28, domain: "." + wb.settings.domainName, path: "/" }),
                        $.cookie("ncache", "", { expires: -2, domain: "." + wb.settings.domainName, path: "/" }),
                        $.post("/log/activity/switchtomobsite"),
                        location.reload();
                })
                .prev("li")
                .find("a")
                .addClass("for-mobile");
    }),
    (wb.popup = {
        productCard: function (e) {
            OpenNewPopup(e.cod1S, e.chrtId, e.basketId, null, e.onLoad, e.targetUrl);
        },
    });
var reEscape = new RegExp("(\\" + ["/", ".", "*", "+", "?", "|", "(", ")", "[", "]", "{", "}", "\\"].join("|\\") + ")", "g");
function validateEmail(e) {
    return !!/^\w+([\.-]?\w+)*@(((([a-z0-9]{2,})|([a-z0-9][-][a-z0-9]+))[\.][a-z0-9])|([a-z0-9]+[-]?))+[a-z0-9]+\.([a-z]{2}|(com|net|org|edu|int|mil|gov|arpa|biz|aero|name|coop|info|pro|museum))$/i.test(e);
}
function nonBreakingSpaceFormatted(e) {
    return String(e).replace(/\B(?=(\d{3})+(?!\d))/g, "&nbsp;");
}
function openNewWindow(e) {
    var t = parseInt((window.screenY || window.screenTop || 0) + ((window.outerHeight || $(window).height()) - 500) / 2),
        n = parseInt((window.screenX || window.screenLeft || 0) + ((window.outerWidth || $(window).width()) - 600) / 2),
        o = ["top=" + (0 < t ? t : 0), "left=" + (0 < n ? n : 0), "width=600", "height=500", "status=0", "toolbar=0"];
    return null != window.open(e, "", o.join(","));
}
function pasteHtmlAtCaret(e) {
    var t, n;
    if (window.getSelection) {
        if ((t = window.getSelection()).getRangeAt && t.rangeCount) {
            (n = t.getRangeAt(0)).deleteContents();
            var o = document.createElement("div");
            o.innerHTML = e;
            for (var i, r, a = document.createDocumentFragment(); (i = o.firstChild); ) r = a.appendChild(i);
            n.insertNode(a), r && ((n = n.cloneRange()).setStartAfter(r), n.collapse(!0), t.removeAllRanges(), t.addRange(n));
        }
    } else document.selection && "Control" != document.selection.type && document.selection.createRange().pasteHTML(e);
}
function quickNav(e) {
    var n = e || {},
        o = $(".j-quicknav");
    o.click(function () {
        return $("body,html").animate({ scrollTop: 0 }, 200), !1;
    });
    var i = $("div.footer"),
        r = $(window);
    r.scroll(function () {
        if (o.length) {
            var e = n.bottomPx || ((t = o.prevAll().not(":empty").filter(":visible").first()).length ? t.offset().top + t.height() : 0);
            if (r.scrollTop() > e)
                o.is(":hidden") && o.show(),
                    r.scrollTop() + r.innerHeight() > i.offset().top
                        ? (o.css("position", "absolute"), o.css("bottom", "-27px"))
                        : (o.css("position", "fixed"), o.css("bottom", "55px"), o.css("left", 0 != r.scrollLeft() ? "-" + r.scrollLeft() + "px" : ""));
            else o.is(":visible") && o.hide();
        }
        var t;
    });
}
function referrerEvent() {
    var e = document.createElement("a");
    if (((e.href = document.referrer), isReferrerEvent(e.hostname))) {
        var t = wb.helpers.getParamsFromUrlQuery(location.search),
            n = wb.stat,
            o = [];
        e.hostname || t.utm_medium || t.utm_campaign || t.utm_source
            ? (o.push(n.wrapParam("UTMM", t.utm_medium ? t.utm_medium : "not_set")),
              o.push(n.wrapParam("UTMC", t.utm_campaign ? t.utm_campaign : "not_set")),
              o.push(n.wrapParam("UTMS", t.utm_source ? t.utm_source : e.hostname ? e.hostname : "not_set")),
              t.gclid && o.push(n.wrapParam("GCID", "adwords")),
              e.hostname && o.push(n.wrapParam("Rfr", e.hostname)))
            : o.push(n.wrapParam("Rfr", "direct")),
            wb.stat.sendEvent("RFR", o);
    }
}
function beeViewEvent() {
    if (wb.stat) {
        var e = wb.getURLparam("wb_tp"),
            t = wb.getURLparam("wb_bnd"),
            n = wb.stat,
            o = [];
        e && t && (o.push(n.wrapParam("Btp", e)), o.push(n.wrapParam("Bbnd", t)), n.sendEvent("BV", o));
    }
}
function isReferrerEvent(e) {
    var t = !0;
    return (
        $.each(["wb.", "wildberries."], function () {
            0 <= e.indexOf(this) && -1 === $.inArray(e.split(".")[0], ["style", "blog", "lookshop"]) && (t = !1);
        }),
        t
    );
}
wb.namespace("menu.left", {
    specbrand: {
        init: function () {
            var e = window.location.origin + window.location.pathname;
            $.each($("#menu-bottom a"), function () {
                "" != this.href &&
                    e == this.href &&
                    ($(this).parents().andSelf().is($("#menu-top li.level1.active")) || ($("#menu-top li.level1.active").removeClass("active"), $("#menu-top li.level1.active2").removeClass("active2")),
                    $(this).parent().addClass("selected"));
            });
        },
    },
}),
    wb.namespace(
        "header.parallax",
        (function () {
            var i,
                r = $(".j-parallax-back-layer"),
                a = $(".j-parallax-back-layer-item"),
                s = $(".j-parallax-main-layer"),
                c = 1.6,
                l = 50;
            function e(e) {
                var t = $(document).scrollTop(),
                    n = s[0].getBoundingClientRect().top,
                    o = 0;
                (c = i ? (180 < e ? 2.1 : 3) : 280 < e ? 2.1 : 1.6),
                    t < e &&
                        ((o = t / c),
                        r.css("top", o),
                        a.each(function () {
                            var e = this.getBoundingClientRect().top,
                                t = $(this);
                            n <= e + l ? t.addClass("parallax-invisible") : t.removeClass("parallax-invisible");
                        }));
            }
            return {
                init: function () {
                    (i = wb.menu.top.useBurgerDesign),
                        $(window).scroll(function () {
                            e($(".j-parallax-back-layer").height());
                        }),
                        $(window).resize(function () {
                            e($(".j-parallax-back-layer").height());
                        });
                },
            };
        })()
    ),
    wb.namespace(
        "menu.top",
        (function () {
            var n, r, a, s;
            function o() {
                var e,
                    t = $(this),
                    n = t.data("menuId"),
                    o = r.filter("[data-menu-id='" + n + "']");
                if (s) 0 === o.length || t.hasClass("submenuless") ? y.hide() : y.show(), l();
                else {
                    if (0 === o.length) return;
                    if ((l(), t.hasClass("submenuless"))) return;
                }
                t.addClass("hover"), o.addClass("active"), (e = o.find(".j-banner"));
                var i = c(e);
                $.when.apply($, i).done(function () {
                    !(function (e) {
                        e.each(function (e, t) {
                            var n = $(t);
                            wb.scrollListener.checkRatio(n, 0.6) && wb.stat.banners.sendShownStatistic(n);
                        });
                    })(e),
                        (function (e, t, n) {
                            if (!e.data("shown-stat-sent")) {
                                e.data("shown-stat-sent", !0);
                                var o = [];
                                o.push(wb.stat.wrapParam("MId", t)), o.push(wb.stat.wrapParam("MT", n)), wb.stat.sendEvent("MO", o, !0);
                            }
                        })(t, n, "top-menu"),
                        y.update();
                });
            }
            var c = function (e) {
                var r = [];
                return (
                    e.find("img").each(function (e, t) {
                        var n = $.Deferred(),
                            o = $(t),
                            i = o.data("original");
                        i !== o.attr("src")
                            ? o
                                  .load(function () {
                                      n.resolve();
                                  })
                                  .error(function () {
                                      n.resolve();
                                  })
                                  .attr("src", i)
                            : n.resolve(),
                            r.push(n.promise());
                    }),
                    r
                );
            };
            function l() {
                n.removeClass("hover"), r.removeClass("active");
            }
            function i() {
                var e = [{ name: "airPassage", menuId: 61037, includeCities: wb.settings.globalVariables.wbTravelLocationIds.split(",") }],
                    t = $.cookie(wb.settings.geo.cookie),
                    n = t && wb.helpers.getParamsFromUrlQuery(t).cityId;
                $.each(e, function (e, t) {
                    ("" === t.includeCities[0] || -1 < t.includeCities.indexOf(n)) &&
                        a
                            .find("li")
                            .filter("[data-menu-id='" + t.menuId + "']")
                            .show();
                });
            }
            function u(e) {
                var n = a.width(),
                    o = 0,
                    i = !1;
                a.children().each(function (e, t) {
                    if (((t = $(t)).is(":visible") && !t.hasClass("topmenus-btn") && (o += t.innerWidth()), n < o)) return !(i = !0);
                }),
                    i ? e.css("display", "inline-block") : e.hide();
            }
            var e,
                t,
                d,
                p,
                f,
                h,
                m,
                g,
                v = {
                    wrapContent: function (e, t) {
                        var n = $("<div>", { class: "scrollbar", append: $("<div>", { class: "track", append: $("<div>", { class: "thumb", append: $("<div>", { class: "end" }) }) }) }),
                            o = $("<div>", { class: "viewport", append: $("<div>", { class: "overview", append: t }) });
                        return $("<div>", { class: "i-tinyscrollbar-topmenus " + e, append: n.add(o) });
                    },
                    init: function (e) {
                        e.tinyscrollbar({ sizethumb: 120, lockscroll: !1 });
                    },
                    update: function (e) {
                        e.tinyscrollbar_update();
                    },
                },
                b = {
                    init: function () {
                        e.on("click", function () {
                            e.toggleClass("active"), e.hasClass("active") ? S.show() : S.hide();
                        });
                    },
                    isExist: function () {
                        return e && 0 < e.length;
                    },
                    self: (e = $(".j-menu-burger")),
                },
                w = {
                    init: function (e) {
                        (t = e), v.init(t);
                    },
                    self: t,
                    update: function () {
                        t && 0 < t.length && v.update(t);
                    },
                },
                y = {
                    init: function (e) {
                        (d = e), v.init(d);
                    },
                    self: d,
                    update: function () {
                        d && 0 < d.length && v.update(d);
                    },
                    show: function () {
                        d && 0 < d.length && d.fadeIn();
                    },
                    hide: function () {
                        d && 0 < d.length && d.fadeOut();
                    },
                },
                k =
                    ((h = function () {
                        if (p) {
                            var e = $("#footer").outerHeight(!0);
                            p.css("bottom", -e);
                        }
                    }),
                    {
                        show: function () {
                            wb.settings.enableParallaxHeader ||
                                p ||
                                ((p = $("<div class='i-overlay'></div>")).prependTo("#body-layout").on("touchstart", function () {
                                    f();
                                }),
                                h(),
                                $(window).on("resize.topMenuOverlay", function () {
                                    var e;
                                    clearTimeout(e),
                                        (e = setTimeout(function () {
                                            h();
                                        }, 200));
                                }));
                        },
                        hide: (f = function () {
                            p && p.remove(), (p = null), $(window).off("resize.topMenuOverlay");
                        }),
                    }),
                S =
                    ((m = $("#top-menu-inner")),
                    (g = m.find(".dropdown-container")),
                    {
                        show: function () {
                            k.show(),
                                m.fadeIn(),
                                w.update(),
                                $(window).on("resize.topMenu", function () {
                                    var e;
                                    clearTimeout(e),
                                        (e = setTimeout(function () {
                                            w.update(), y.update();
                                        }, 300));
                                }),
                                $(window).on("click.topMenu", function (e) {
                                    b.self.is(e.target) || 0 != b.self.has(e.target).length || 0 != g.has(e.target).length || b.self.trigger("click");
                                });
                        },
                        hide: function () {
                            m.fadeOut(), k.hide(), y.hide(), l(), $(window).off("resize.topMenu"), $(window).off("click.topMenu");
                        },
                        init: function () {
                            var e = { lang: $("html").attr("lang"), burger: !0 };
                            $.get("/menu/getrendered", e, function (e) {
                                !(function (e) {
                                    var t = $.parseHTML(e),
                                        n = $(t.splice(0, 1));
                                    "top-menu" == n.attr("id") && (n = n.find(".topmenus"));
                                    var o = v.wrapContent("j-menu-left menu-left", n),
                                        i = v.wrapContent("j-menu-right menu-right hide", t);
                                    g.append(o), g.append(i);
                                })(e),
                                    (a = $(".topmenus")),
                                    (n = a.children()),
                                    (r = $(".j-dropdown-item")),
                                    i(),
                                    w.init($(".j-menu-left")),
                                    y.init($(".j-menu-right")),
                                    b.init(),
                                    wb.settings.isTouch
                                        ? n.on("touchstart", function (e) {
                                              return !!$(this).hasClass("hover") || (l(), o.call(this), e.preventDefault(), !1);
                                          })
                                        : n.hoverIntent({ over: o, out: function () {}, interval: 10, timeout: 30, sensitivity: 4 }),
                                    wb.stat.banners.initClickEvent();
                            });
                        },
                        canUseBurgerMenu: function () {
                            return b.isExist() && g && 0 < g.length;
                        },
                    });
            return {
                init: function () {
                    if ((s = S.canUseBurgerMenu())) S.init();
                    else {
                        var e = $("#top-menu");
                        (a = e.children()),
                            i(),
                            wb.settings.enableToggleTopMenu &&
                                (function () {
                                    var e,
                                        t,
                                        n = $(".j-header"),
                                        o = $.localize("Еще") + "...",
                                        i = $.localize("Свернуть") + "...";
                                    (e = null != sessionStorage.getItem("topMenuStatus") && "closed" != sessionStorage.getItem("topMenuStatus")) ? ((t = i), n.removeClass("closed")) : (t = o);
                                    var r = $('<li class="topmenus-btn"><button type="button">' + t + "</button></li>").addClass(["topmenus-item"].join(" "));
                                    a.append(r),
                                        u(r),
                                        r.click(function () {
                                            e = e
                                                ? (r.find("button").text(o), n.addClass("closed"), sessionStorage.setItem("topMenuStatus", "closed"), !1)
                                                : (r.find("button").text(i), n.removeClass("closed"), sessionStorage.setItem("topMenuStatus", "opened"), !0);
                                        }),
                                        $(window).resize(function () {
                                            u(r);
                                        });
                                })();
                        var t = { lang: $("html").attr("lang"), v1: !0 };
                        $.get("/menu/getrendered", t, function (e) {
                            $("#top-menu-inner").append(e);
                            var t = $("#top-menu-inner");
                            (n = a.children()),
                                (r = t.children()),
                                wb.settings.isTouch
                                    ? n.on("touchstart", function (e) {
                                          return !!$(this).hasClass("hover") || ($(this).hasClass("submenuless") ? (l(), !0) : (l(), o.call(this), e.preventDefault(), !1));
                                      })
                                    : (n.hoverIntent({ over: o, out: function () {}, interval: 30, timeout: 30, sensitivity: 4 }),
                                      a.on("mouseleave.menu", function (e) {
                                          $(e.relatedTarget).parents().is("#top-menu-inner") || l();
                                      }),
                                      t.on("mouseleave.menu", function (e) {
                                          $(e.relatedTarget).parents().hasClass("topmenus") || l();
                                      })),
                                wb.stat.banners.initClickEvent();
                        });
                    }
                },
                useBurgerDesign: S.canUseBurgerMenu(),
            };
        })()
    ),
    wb.namespace(
        "header.topControls",
        (function () {
            var e = $(".j-header-tooltip-control"),
                t = ".j-header-tooltip-content";
            return {
                hoverInit: function () {
                    e.hover(
                        function () {
                            $(this).find(t).show();
                        },
                        function () {
                            $(this).find(t).hide();
                        }
                    );
                },
            };
        })()
    ),
    wb.namespace(
        "basket",
        (function () {
            var i,
                r = 0,
                a = $.Deferred(),
                s = $.Deferred(),
                c = $.Deferred();
            return {
                basketShortInfo: {},
                basketShortInit: function () {
                    i = $("#basketContent");
                    var n = $.post(wb.settings.basketInfoUrl).done(function (o) {
                        if (
                            ((wb.basket.basketShortInfo = o),
                            (r = 0 < o.BasketQuantity ? 1 : 0),
                            $.templates("#shortBasketInfoTmpl").link(i, wb.basket.basketShortInfo),
                            (function () {
                                var n = i.find(".cart-content-wrapper");
                                i.find(".cart-informer").hoverIntent({
                                    over: function () {
                                        switch (r) {
                                            case 0:
                                                break;
                                            case 2:
                                                n.show();
                                                break;
                                            case 1:
                                                $.when($.views.loadTemplate("shortBasketTmpl", $.views.converters.urlForJsTmpl("basketshortlebedevtemplate")), $.post("/basket/getshortbasket")).then(function (t, e) {
                                                    $.processResponse(
                                                        e[0],
                                                        function (e) {
                                                            n.html(t.render(e));
                                                            n.show(), 3 < e.basketItems.length && n.find(".cart-content").tinyscrollbar({ sizethumb: 80 });
                                                            r = 2;
                                                        },
                                                        function () {
                                                            r = 0;
                                                        }
                                                    );
                                                });
                                        }
                                    },
                                    out: function () {
                                        n.hide();
                                    },
                                    timeout: 300,
                                    sensitivity: 4,
                                });
                            })(),
                            o.IsAuthenticated)
                        ) {
                            var e = "/personalcabinetmenupreview",
                                t = i.find(".lk-menu-wrapper");
                            i.find(".dropdown").hoverIntent({
                                over: function () {
                                    $.post(e).done(function (e) {
                                        t.html(e),
                                            i.find(".j-show-more").on("click", function () {
                                                var e = $(this).parent();
                                                e.add(e.prev(".j-sign-out")).hide(), i.find(".separate-menu").fadeIn(), $(this).closest("li").siblings().length || $(this).closest(".lk-menuleft-title").remove();
                                            });
                                    });
                                },
                                out: function () {
                                    t.empty();
                                },
                            }),
                                $(".logo .j-com-create-wrapper").append($('<a class="j-create-com">').text("Задать вопрос")),
                                $(".j-b-header-menu").addClass("is-authenticated"),
                                n.getResponseHeader("Enable-Group-Shippings") ? wb.header.newshippings.init(n) : wb.header.shippings.init(n);
                        }
                        !(function (e) {
                            var t,
                                o = { uid: 0, basketUid: void 0, isAuth: !1 };
                            e
                                ? (t = $.cookie("um")) &&
                                  ($.map(t.split(":"), function (e, t) {
                                      var n = e.split("=");
                                      o[n[0]] = decodeURIComponent(n[1]);
                                  }),
                                  (o.isAuth = !0),
                                  (o.hasEmail = o.ehash && "" !== o.ehash && "d41d8cd98f00b204e9800998ecf8427e" !== o.ehash))
                                : ((t = $.cookie("BasketUID")), (o.basketUid = t));
                            a.resolve(o);
                        })(o.IsAuthenticated),
                            c.resolve(n.getResponseHeader("Date")),
                            (wb.helpers.date.serverDate = new Date(n.getResponseHeader("Date"))),
                            (function (e) {
                                null != e && 0 <= e.indexOf("ASP.NET_SessionId") ? s.resolve() : s.reject();
                            })(n.getResponseHeader("Set-Cookie")),
                            o.MessengersParam &&
                                wb.settings.messengersSuffix &&
                                $.each(wb.settings.messengersSuffix, function (e, n) {
                                    $(e).attr("href", function (e, t) {
                                        return t + n + o.MessengersParam;
                                    });
                                }),
                            $(".j-b-header-menu-item").show(),
                            wb.header.addresses.init();
                    });
                },
                basketShortUpdate: function (e) {
                    e &&
                        ((r = 0 < e.basketQuantity ? 1 : 0),
                        $.observable(wb.basket.basketShortInfo).setProperty({
                            BasketQuantity: e.basketQuantity || e.BasketQuantity,
                            PonedGoodsQuantity: $.isNumeric(e.ponedGoodsQuantity) ? e.ponedGoodsQuantity : e.PonedGoodsQuantity,
                            TotalGoodsPrice: $.isNumeric(e.totalGoodsPrice) ? e.totalGoodsPrice : e.TotalGoodsPrice,
                        }));
                },
                eventsCountUpdate: function (e) {
                    $.observable(wb.basket.basketShortInfo).setProperty("EventsCount", $.isNumeric(e.eventsCount) ? e.eventsCount : e.EventsCount);
                },
                getUser: a.promise(),
                sessionStarted: s.promise(),
                serverDateCame: c.promise(),
            };
        })()
    ),
    wb.namespace(
        "geo",
        (function () {
            var t,
                r,
                o = $.Deferred(),
                i = $.Deferred(),
                a = [];
            function e() {
                var e;
                try {
                    var t = $.cookie(wb.settings.geo.cookie);
                    if (null != t) {
                        var n = wb.helpers.getParamsFromUrlQuery(t);
                        n.city &&
                            ((e = n).storeIds = (function () {
                                var e = $.cookie("__store");
                                if (e) {
                                    var t = jQuery.map(e.split("_"), function (e) {
                                        return parseInt(e);
                                    });
                                    return 0 < t[0] ? t : [];
                                }
                                return [];
                            })());
                    }
                } catch (e) {}
                void 0 !== e && 0 < e.storeIds.length
                    ? (o.resolve(e), i.reject())
                    : "pending" === o.state() &&
                      (i.resolve(),
                      $.post("/geo/getuserlocationinfo").done(function (e) {
                          $.processResponse(e, function (e) {
                              (e.showAction = !0), e.locationPrecision < 100 && (e.needConfirm = !0), o.resolve(e);
                          });
                      }));
            }
            function n() {
                return {
                    getCountPromise: function (n) {
                        var o = $.Deferred();
                        return n
                            ? ($.post("/getpocount")
                                  .done(function (e) {
                                      var t = e.Value && e.Value.Count ? e.Value : null;
                                      t && (n.pooCount = t), o.resolve(n);
                                  })
                                  .fail(function () {
                                      o.reject();
                                  }),
                              o.promise())
                            : o.reject().promise();
                    },
                };
            }
            function s(e) {
                var t = $(".geocity .j-geocity-text"),
                    n = decodeURI(e.city);
                t.text() !== n && t.text(n);
            }
            function c(t) {
                var n = $.Deferred();
                return (
                    t && t.needSave && t.cityId
                        ? $.post("/geo/saveprefereduserlocation/" + t.cityId).done(function (e) {
                              wb.user.clearxinfo(),
                                  $.processResponse(e, function (e) {
                                      (e.showAction = !0), s(e), $.extend(t, e), n.resolve(t);
                                  });
                          })
                        : n.resolve(t),
                    n.promise()
                );
            }
            function l(n) {
                return (
                    $.each(a, function (e, t) {
                        t(n);
                    }),
                    n
                );
            }
            function u() {
                return window._geoKladr;
            }
            function d(e) {
                var t,
                    n = $(this).parent();
                void 0 !== (t = n.hasClass("geocity-pop-item") ? n.attr("data-city-id") : u().getCityId())
                    ? (e.data.geoPopup.jqmHide(), (e.data.location.needSave = !0), (e.data.location.cityId = t), e.data.defer.resolve(e.data.location))
                    : e.data.defer.reject();
            }
            function p(e) {
                e.data.geoPopup.find(".j-b-geo-tab").hide().filter(".j-b-geo-main-content").show();
            }
            function f(o) {
                var t = this;
                if (!t._work) {
                    (t._work = !0), o.data.geoPopup.find(".j-b-geo-tab").hide().filter(".j-b-geo-viewmap").show();
                    function n(n) {
                        o.data.fullAddressDef.done(function (e) {
                            var t = new ymaps.Placemark(
                                i,
                                { balloonContentBody: "<p>Ваш населенный пункт</p><p>" + (e || o.data.location.city) + "</p>" },
                                $.extend(
                                    { balloonPanelMaxMapArea: 0, hideIconOnBalloonOpen: !1, balloonOffset: [0, -45], balloonAutoPanMargin: [60, 60, 10, 10] },
                                    { iconLayout: "default#image", iconImageHref: wb.settings.staticSiteUrl + "/i/ico-np.png", iconImageSize: [35, 40], iconImageOffset: [-16, -38] }
                                )
                            );
                            n.geoObjects.add(t);
                        });
                    }
                    var i = [o.data.location.latitude.toString().replace(",", "."), o.data.location.longitude.toString().replace(",", ".")];
                    if (!r)
                        return (
                            (r = new PickupsMap({
                                mapCont: "geoViewMap",
                                ballonTmpl: wb.ymaps.pooBalloonTmpl,
                                ymapsUrl: wb.settings.yandexMapsUrl,
                                locale: wb.helpers.getCurrentLang().split("-")[1].toLowerCase(),
                                controls: { zoomControl: { position: { bottom: 30, right: 5 }, size: "small" } },
                            })),
                            void $.when(r.loadMap(), $.get("/delivery/poo/getall"))
                                .then(function (o, e) {
                                    var t = "string" == typeof e[0] ? JSON.parse(e[0]) : e[0];
                                    r.setMapCenter(i, 10),
                                        r.renderPickups(t.pickups),
                                        $.templates({ postamatBalloonTmpl: wb.ymaps.postamatBalloonTmpl }),
                                        $.each(t.postamats, function (e, t) {
                                            var n = r.createPlacemark(t, "postamatBalloonTmpl");
                                            o.geoObjects.add(n);
                                        }),
                                        n(o);
                                })
                                .always(function () {
                                    t._work = !1;
                                })
                        );
                    $.when(r.loadMap()).then(function (e) {
                        r.setMapCenter(i, 10), n(e), (t._work = !1);
                    });
                }
            }
            function h(i) {
                var r = $.Deferred(),
                    a = $(".geocity");
                return (
                    $.views.loadTemplate("selectionpreferedlocationtmpl", $.views.converters.urlForJsTmpl("selectionpreferedlocationlebedevtmpl")).done(function (e) {
                        a.find(".geocity-pop").length || a.append(e), (a = a.find(".geocity-pop"));
                        var o = $.Deferred();
                        if (
                            ($(".j-b-geo-fulladdress").load("/kladr/fulladdress?kladrId=" + i.cityId + "&cityName=" + i.city, function (e, t, n) {
                                0 < (this.innerText = e).length && this.classList.remove("hide"), o.resolve(e);
                            }),
                            i.needConfirm)
                        )
                            a.addClass("geocity-pop-unselected");
                        else if ((a.addClass("geocity-pop-selected"), a.find(".geocity-pop-spec .geocity-pop-item-selected").html(i.city), i.pooCount)) {
                            var t = $.pluralize(i.pooCount.Count, "{0} пункт выдачи", "{0} пункта выдачи", "{0} пунктов выдачи"),
                                n = $("<a>").addClass("geocity-poo-link").attr("href", i.pooCount.Ufu).text(t);
                            a.find(".j-pick-count").html(n);
                        }
                        a.jqm({
                            closeSelector: ".close-popup",
                            modal: !1,
                            focusOn: !1,
                            onShow: function (e) {
                                $(".geocity-pop-list").off("click").on("click", ".geocity-pop-item span", { defer: r, geoPopup: a, location: i }, d),
                                    $(".j-save-city").off("click").on("click", { defer: r, geoPopup: a, location: i }, d),
                                    $(".j-btn-geo-viewmap").off("click").on("click", { geoPopup: a, location: i, fullAddressDef: o.promise() }, f),
                                    $(".j-btn-geo-viewmain").off("click").on("click", { geoPopup: a, location: i }, p),
                                    e.w.keydown(function (e) {
                                        13 === e.keyCode && e.preventDefault();
                                    });
                            },
                            onHide: function (e) {
                                p({ data: { geoPopup: a } }), u().hideAllSuggestions();
                            },
                        }).jqmShow();
                    }),
                    r.promise()
                );
            }
            function m(t) {
                var n,
                    o = $.Deferred(),
                    i = $(".geocity");
                return (
                    t && t.needConfirm
                        ? $.views.loadTemplate("confirmPreferedLocationTmpl", $.views.converters.urlForJsTmpl("confirmpreferedlocationtmpl")).done(function (e) {
                              i.append(e.render(t)),
                                  (n = i.find(".j-geocity-pop-small"))
                                      .on("click", ".j-close", function () {
                                          n.remove(), o.resolve(t);
                                      })
                                      .on("click", "input", function () {
                                          n.remove(), (t.needSave = !0), (t.needConfirm = !1), o.resolve(t);
                                      })
                                      .on("click", ".j-select-another-town", function (e) {
                                          e.preventDefault(),
                                              n.remove(),
                                              h(t).done(function (e) {
                                                  (e.needSave = !0), (t.needConfirm = !1), o.resolve(e);
                                              });
                                      });
                          })
                        : o.resolve(t),
                    o.promise()
                );
            }
            return {
                getLocation: o.promise(),
                addToQueue: function (e) {
                    a.push(e);
                },
                initUserFormMarketing: function () {
                    $.when(wb.basket.getUser, o).then(function (e, t) {
                        (wb.marketingUser = $.extend(e, { region: t.region })), e.isAuth && ($(window).trigger("marketing-user", wb.marketingUser), "undefined" != typeof dataLayer && dataLayer.push({ event: "custom_load" }));
                    });
                },
                initPhones: function () {
                    var t = $(".j-phone-contact");
                    t.length &&
                        o.done(function (e) {
                            t.text(e.phone);
                        });
                },
                initPreferdLocation: function () {
                    e(),
                        (t = new n()),
                        o
                            .done(function (e) {
                                s(e),
                                    $(".geocity .j-geocity-text").on("click", function (e) {
                                        e.preventDefault(), o.then(t.getCountPromise).then(h).then(c).then(l);
                                    });
                            })
                            .then(m)
                            .then(c)
                            .then(l);
                },
                siteFirstOpen: i,
                changeLocation: function () {
                    return o.then(h).then(c);
                },
            };
        })()
    ),
    wb.namespace(
        "auth",
        (function () {
            function e(t) {
                var n,
                    o,
                    i = $(t.popupSelector);
                return (
                    i.jqm({
                        closeSelector: ".close, .cancel",
                        modal: t.modal,
                        focusOn: !1,
                        onShow: function (e) {
                            i.find("iframe").length || (n = wb.auth[t.proxyName](t.iframeId, t.urlFunc(e.t && e.t.query))),
                                n.getSettings(function (e) {
                                    e.loginTooltip &&
                                        (o = $("#" + t.iframeId).tooltipster({
                                            content: e.loginTooltip,
                                            position: "right",
                                            offsetY: 162,
                                            offsetX: 10,
                                            arrowOldPosition: !0,
                                            trigger: "custom",
                                            appendTag: t.popupSelector,
                                            theme: "i-tooltip-login",
                                        })),
                                        i.find("iframe").height(e.height),
                                        i.jqmCenter(),
                                        $(window).trigger("resize." + t.proxyName);
                                }),
                                i.find("iframe")[0].contentWindow.focus(),
                                t.handler && t.handler(n, e.t);
                        },
                        onHide: function () {
                            n.destroy();
                        },
                    }),
                    {
                        show: function (e) {
                            if (wb.settings.enablePopupLogin) i.jqmShow(e);
                            else {
                                var t = wb.getURLparam("returnUrl");
                                window.location.href = e && e.TwoFactorAuth ? wb.settings.fullSecurityDomainName + "/tfa" + (t ? "?returnUrl=" + t : "") : $.views.helpers.urlSignIn(e && e.query && e.query.returnUrl);
                            }
                        },
                        showConfirmation: function (e) {
                            (r = e), i.jqmShow();
                        },
                        close: function () {
                            i.jqmHide();
                        },
                        resize: function (e) {
                            i.find("iframe").height(e.height), $(window).trigger("resize." + t.proxyName, e);
                        },
                        toggleLoginTip: function (e) {
                            o && o.tooltipster(e ? "show" : "hide");
                        },
                    }
                );
            }
            var t,
                n = { local: "/Content/j/easyXDM/name.html", swf: "/Content/j/easyXDM/easyxdm.swf", props: { scrolling: "no", frameborder: "0", width: "100%" } },
                r = $.noop;
            return {
                signIn:
                    ((t = new e({
                        modal: !1,
                        popupSelector: "#loginForm",
                        iframeId: "loginFrame",
                        proxyName: "bindLogin",
                        urlFunc: function (e) {
                            return wb.settings.fullSecurityDomainName + "/loginpopup" + (e ? "?" + $.param(e) : "");
                        },
                        handler: function (e) {
                            e.setFocus();
                        },
                    })),
                    $("#basketContent").on("click", ".j-main-login", function (e) {
                        wb.settings.isMobileDevice || (e.preventDefault(), wb.auth.signIn.show({ query: { returnUrl: window.location.href } }));
                    }),
                    t),
                confirmLogopass: new e({
                    modal: !0,
                    popupSelector: "#authenticationForm",
                    iframeId: "authenticationFrame",
                    proxyName: "bindLogin",
                    urlFunc: function () {
                        return wb.settings.fullSecurityDomainName + "/security/confirmloginandpasspopup";
                    },
                    handler: function (e) {
                        e.setFocus();
                    },
                }),
                tfa: new e({
                    modal: !0,
                    popupSelector: "#popup2faConfirm",
                    iframeId: "tfaFrame",
                    proxyName: "bindTwoFactorAuth",
                    urlFunc: function () {
                        return wb.settings.fullSecurityDomainName + "/tfa?returnUrl=" + window.location.href;
                    },
                    handler: function (e, t) {
                        e.init(t);
                    },
                }),
                bindLogin: function (e, t) {
                    return new easyXDM.Rpc($.extend(n, { container: e, remote: t }), {
                        local: {
                            close: function () {
                                wb.auth.signIn.close(), wb.auth.confirmLogopass.close();
                            },
                            loginResponse: function (e, t) {
                                $.processResponse(
                                    e,
                                    function (e) {
                                        e && e.TwoFactorAuth && (wb.auth.signIn.close(), wb.auth.confirmLogopass.close(), wb.auth.tfa.show(e));
                                    },
                                    function (e) {
                                        t && t(e);
                                    }
                                );
                            },
                            confirmationResponse: function (e) {
                                $.processResponse(
                                    e,
                                    function (e) {
                                        wb.auth.signIn.close(), wb.auth.confirmLogopass.close(), r();
                                    },
                                    function (e) {
                                        onerror && onerror(e);
                                    }
                                );
                            },
                            resize: function (e) {
                                wb.auth.signIn.resize(e), wb.auth.confirmLogopass.resize(e);
                            },
                            onLoginClick: function () {
                                wb.auth.signIn.toggleLoginTip(!0), wb.auth.confirmLogopass.toggleLoginTip(!0);
                            },
                            onLoginBlur: function () {
                                wb.auth.signIn.toggleLoginTip(!1), wb.auth.confirmLogopass.toggleLoginTip(!1);
                            },
                        },
                        remote: { getSettings: {}, setFocus: {} },
                    });
                },
                bindTwoFactorAuth: function (e, t) {
                    return new easyXDM.Rpc($.extend(n, { container: e, remote: t }), {
                        local: {
                            close: function () {
                                wb.auth.tfa.close();
                            },
                            response: function (e, t) {
                                $.processResponse(
                                    e,
                                    function () {},
                                    function (e) {
                                        t && t(e);
                                    }
                                );
                            },
                            resize: function (e) {
                                wb.auth.tfa.resize(e);
                            },
                        },
                        remote: { getSettings: {}, init: {} },
                    });
                },
                checkLogin: function (t, n) {
                    $.when(wb.basket.getUser).then(function (e) {
                        !0 === e.isAuth ? jQuery.isFunction(t) && t() : ("boolean" == typeof n && n) || wb.auth.signIn.show({ query: { forceLogon: !0, returnUrl: window.location.href } });
                    });
                },
            };
        })()
    ),
    (wb.socials = {}),
    (wb.socials.scrolled = (function () {
        function t(e, t) {
            return 0 == e.length || window.pageYOffset + document.documentElement.clientHeight > e.offset().top + t;
        }
        function e() {
            f.hideSocials(), (f.groupsClosed = !0), wb.cookie.set(u, !0, 43200);
        }
        function n() {
            var e = f.groupsClosed ? 300 : 580;
            t(p.$, -50) || !t(d.$, e) ? (f.hideSocials(), f.unFix()) : (f.groupsClosed || f.showSocials(), f.fix());
        }
        var o = "#scrolled-socials",
            i = "#j-show-hide-icons",
            r = "#j-icons",
            a = ".j-social-groups",
            s = ".j-ss-start-visible",
            c = ".j-ss-end-visible",
            l = ".j-close",
            u = "socialGroupsClosed",
            d = {
                init: function () {
                    d.$ = $(s);
                },
            },
            p = {
                init: function () {
                    p.$ = $(c);
                },
            },
            f = new (function () {
                var t = this;
                (this.$ = $(o)),
                    (this.show = function () {
                        f.groupsClosed && this.hideSocials(), t.$.show();
                    }),
                    (this.groupsClosed = "true" === $.cookie(u)),
                    (this.hideSocials = function () {
                        t.$.find(a).hide();
                    }),
                    (this.showSocials = function () {
                        t.$.find(a).show();
                    }),
                    (this.unFix = function () {
                        var e = p.$.offset().top - 20;
                        t.$.css("position", "absolute")
                            .css("top", e + "px")
                            .removeClass("fix"),
                            t.$.find("#j-icons").addClass("down-icons").css({ bottom: "0" });
                    }),
                    (this.fix = function () {
                        t.$.css("position", "fixed").css("top", "").addClass("fix"), t.$.find("#j-icons").removeClass("down-icons").css("bottom", "");
                    }),
                    (this.toggleMessengers = function () {
                        var e = $(this),
                            t = $(r);
                        e.hasClass("hide-icons")
                            ? (e.removeClass("rotate-cross-counterclockwise").addClass("rotate-cross-clockwise"),
                              t.removeClass("icons-available").addClass("icons"),
                              setTimeout(function () {
                                  e.removeClass("hide-icons").addClass("show-icons");
                              }, 120))
                            : (e.removeClass("show-icons").removeClass("rotate-cross-clockwise").addClass("hide-icons rotate-cross-counterclockwise"), t.removeClass("icons").addClass("icons-available"));
                    });
            })(),
            h = function () {
                d.init(), p.init(), $(window).scroll();
                var t = (newTop = p.$.offset().top),
                    n = 0;
                !(function e() {
                    (newTop = p.$.offset().top), t !== newTop ? $(window).scroll() : ((t = newTop), n++ <= 10 && setTimeout(e, 200));
                })(),
                    f.show();
            };
        (function () {
            $(window).scroll(n), $(window).resize(n), f.$.on("click", i, f.toggleMessengers).on("click", l, e);
        })(),
            h();
    })()),
    wb.namespace(
        "header.newshippings",
        (function () {
            var i,
                r,
                a = "_shipping_ready_v2";
            function o(o) {
                $.when($.views.loadTemplate("shippinglistnewtmpl"), $.post("/short/deliveries?clientDateTime=" + wb.header.newshippings.getClientDt())).then(function (n, e) {
                    $.processResponse(e[0], function (e) {
                        if (0 != e.length) {
                            (r = $("<div />").addClass("drop-delivery").appendTo(i)),
                                n.link(
                                    r,
                                    e,
                                    {
                                        close: function () {
                                            localStorage.putObject(a, o), r.hide(), s();
                                        },
                                        sort: function (e, t) {
                                            return "awaitingPayment" == e.key ? -1 : 1;
                                        },
                                    },
                                    !0
                                );
                            var t = r.show().find(".viewport")[0];
                            t.scrollHeight > t.offsetHeight && $(".drop-delivery").tinyscrollbar({ sizethumb: 140 });
                        }
                    });
                });
            }
            function s() {
                i.hoverInited ||
                    (i.hoverIntent({
                        over: function () {
                            r ? r.show() : o();
                        },
                        out: function () {
                            r && r.hide();
                        },
                        timeout: 300,
                        sensitivity: 4,
                    }),
                    (i.hoverInited = !0));
            }
            return {
                init: function (t) {
                    if (t) {
                        var n = parseInt(t.getResponseHeader("Shipping-Count"), 10) || 0;
                        (i = $(".j-head-shippings")),
                            0 < n && $("<span class='quantity'/>").append($("<strong/>").text(n)).prependTo(i.find(".user-menu-icon")),
                            wb.settings.enableHeadShipping &&
                                $.when($.views.loadTemplate("shippinglistnewtmpl")).then(function () {
                                    var e = t.getResponseHeader("Shipping-Hash");
                                    null != e &&
                                        (function (e, t) {
                                            0 === e
                                                ? (r = $("<div />").html($.localize("У Вас нет доставок, готовых к получению")).addClass("drop-delivery no-delivery").appendTo(i))
                                                : (t !== localStorage.getObject(a) && o(t), localStorage.putObject(a, t), s());
                                        })(n, e),
                                        i.show();
                                });
                    }
                },
                getClientDt: function () {
                    var e = new Date(),
                        t = new Date(e.getTime() - 6e4 * e.getTimezoneOffset()).toISOString();
                    return t.slice(0, t.length - 1);
                },
            };
        })()
    ),
    wb.namespace(
        "header.shippings",
        (function () {
            function n() {
                $.when(
                    $.views.loadTemplate("shortShippingList", $.views.converters.urlForJsTmpl("shippinglistlebedevtmpl")),
                    (function (e) {
                        return $.post("/short/shipping/list", $.extend(s.params, e));
                    })()
                ).then(function (t, e) {
                    $.processResponse(e[0], function (e) {
                        (s.items = e),
                            (s.visibleCnt = 3),
                            (o = $("<div />").addClass("drop-delivery").appendTo(r)).html(t.render(s)),
                            o.show(),
                            s.items.length > s.visibleCnt && $(".drop-delivery").tinyscrollbar({ sizethumb: 80 }),
                            o.on("click", ".j-s-shipping-carousel-close", function () {
                                o.hide(), localStorage.putObject(a, i), c();
                            });
                    });
                });
            }
            var o,
                i,
                r = $(".j-head-shippings"),
                a = "_shipping_ready",
                s = { items: [] },
                c = function () {
                    r.hoverInited ||
                        (r.hoverIntent({
                            over: function () {
                                o ? o.show() : n();
                            },
                            out: function () {
                                o && o.hide();
                            },
                            timeout: 300,
                            sensitivity: 4,
                        }),
                        (r.hoverInited = !0));
                };
            return {
                init: function (e) {
                    if (wb.settings.enableHeadShipping && e) {
                        var t = parseInt(e.getResponseHeader("Shipping-Count"), 10) || 0;
                        null != (i = e.getResponseHeader("Shipping-Hash")) &&
                            (function (e) {
                                0 === e ? (o = $("<div />").html($.localize("У Вас нет доставок, готовых к получению")).addClass("drop-delivery no-delivery").appendTo(r)) : (localStorage.getObject(a) !== i && n(), c());
                            })(t),
                            0 < t && $("<span class='quantity'/>").append($("<strong/>").text(t)).prependTo(r.find(".user-menu-icon")),
                            r.show();
                    }
                },
            };
        })()
    ),
    wb.namespace("header.addresses", {
        init: function () {
            $("#head-pick-point-address").tooltipster({
                position: "bottom",
                theme: "i-tooltip-address-v1",
                functionBefore: function (e, n) {
                    var o = $(e);
                    !0 !== o.data("loaded") &&
                        $.post("/delivery/poo/count").done(function (e) {
                            var t = e.Value;
                            o.tooltipster(
                                "content",
                                (function (e) {
                                    return "<span class='count'>" + e + "</span> " + $.pluralize(e, "пункт выдачи", "пункта выдачи", "пунктов выдачи");
                                })(t)
                            ),
                                o.data("loaded", !0),
                                o.is(":hover") && n();
                        }),
                        n();
                },
            });
        },
    }),
    wb.namespace(
        "cookie",
        (function () {
            function e() {
                var t = $.Deferred();
                return (
                    null == n
                        ? $.get("/services/cookie/table")
                              .done(function (e) {
                                  (n = e), t.resolve(n);
                              })
                              .fail(function () {
                                  t.reject();
                              })
                        : t.resolve(n),
                    t.promise()
                );
            }
            function o() {
                var e = { r: !0, m: !1, f: !1, gtm: !1 },
                    t = $.cookie(wb.settings.cookie.policy);
                return t ? $.extend(e, $.paramsToJson(t)) : e;
            }
            var r = function (e) {
                    var t = new Date();
                    return t.setTime(t.getTime() + 1e3 * e), t;
                },
                n = null,
                t = new (function () {
                    this.set = function (n, o, i) {
                        wb.settings.cookiePolicy
                            ? e().done(function (e) {
                                  for (var t = 0; t < e.length; t++) e[t].name == n && a(e[t].cookiePolicy) && $.cookie(n, o, { expires: r(i), domain: "." + wb.settings.domainName, path: "/" });
                              })
                            : $.cookie(n, o, { expires: r(i), domain: "." + wb.settings.domainName, path: "/" });
                    };
                })(),
                a = function (e) {
                    if (!wb.settings.cookiePolicy) return !0;
                    var t = o();
                    return !!t[e] && ("true" === t[e] || !0 === t[e]);
                };
            return {
                cookiePolicyType: { marketing: "m", func: "f", gtm: "gtm" },
                set: t.set,
                policyTable: e,
                checkPolicy: a,
                changePolicy: function (e, t) {
                    if (wb.settings.cookiePolicy) {
                        var n = o();
                        (n[e] = t), $.post("/cookie/accept", $.param(n));
                    }
                },
                initPolicy: function () {
                    if (wb.settings.cookiePolicy) {
                        var o = $.templates("#cookiePopupTmpl");
                        $.when(wb.basket.getUser).done(function (e) {
                            var t = $.Deferred().done(function () {
                                $.cookie(wb.settings.cookie.policy) ||
                                    n({ cookiePolicyNeedAgree: !0 })
                                        .done(function () {
                                            $.post("/cookie/accept", { m: !0, f: !0, gtm: !0 });
                                        })
                                        .fail(function () {
                                            $.post("/cookie/accept");
                                        });
                            });
                            e.isAuth
                                ? $.get("/cookie/checkupdates")
                                      .done(function (e) {
                                          $.processResponse(e, function (e) {
                                              e.privacyPolicy &&
                                                  n({ privacyPolicyUpdateNeedAgree: !0 })
                                                      .done(function () {
                                                          $.post("/cookie/update", { pp: !0 }), r({ pp: !0 });
                                                      })
                                                      .fail(function () {
                                                          $.post("/cookie/update", { pp: !1 });
                                                      }),
                                                  e.publicOffer &&
                                                      n({ publicOfferUpdateNeedAgree: !0 })
                                                          .done(function () {
                                                              $.post("/cookie/update", { po: !0 }), r({ po: !0 });
                                                          })
                                                          .fail(function () {
                                                              $.post("/cookie/update", { po: !1 });
                                                          });
                                          });
                                      })
                                      .always(function () {
                                          t.resolve();
                                      })
                                : t.resolve();
                        });
                    }
                    function n(e) {
                        var t = $.Deferred(),
                            n = $(o(e))
                                .appendTo("body")
                                .one("click", ".j-btn-cookie-accept", function (e) {
                                    e.preventDefault(), i(n), t.resolve();
                                })
                                .one("click", ".j-btn-cookie-reject", function (e) {
                                    e.preventDefault(), i(n), t.reject();
                                });
                        return (
                            setTimeout(function () {
                                n.removeClass("away");
                            }),
                            t.promise()
                        );
                    }
                    function i(e) {
                        e.addClass("away"),
                            setTimeout(function () {
                                e.remove();
                            }, 1e3);
                    }
                    function r(e) {
                        $(window).trigger("cookiePolicy.changesAccept", e);
                    }
                },
            };
        })()
    ),
    ($.renderModalError_eldar = function (e, t, n, o, i) {
        var r = $(
                "<div id='modalError' class='alert-popup i-alert alert-error" +
                    (t ? " " + t : "") +
                    "'>" +
                    (i ? "<a href='#' class='closed'></a>" : "") +
                    e +
                    "<button class='alert-popup-close'>" +
                    (n || $.localize("Закрыть")) +
                    "</button></div>"
            ),
            a = $.Deferred();
        return (
            r
                .jqm({
                    closeSelector: ".alert-popup-close, .closed",
                    focusOn: ".alert-popup-close",
                    modal: !!o,
                    onHide: function () {
                        r.remove();
                    },
                })
                .jqmShow(),
            r.find(".alert-popup-close").on("click", function (e) {
                a.resolve(e);
            }),
            a.promise()
        );
    }),
    ($.renderModalError = function (e, t, n, o, i) {
        var r = $(
                "<div id='modalError' class='alert-popup i-alert alert-error" +
                    (t ? " " + t : "") +
                    "'>" +
                    (i ? "<a href='#' class='closed'></a>" : "") +
                    "<p>" +
                    e +
                    "</p><button class='alert-popup-close'>" +
                    (n || $.localize("Закрыть")) +
                    "</button></div>"
            ),
            a = $.Deferred();
        return (
            r
                .jqm({
                    closeSelector: ".alert-popup-close, .closed",
                    focusOn: ".alert-popup-close",
                    modal: !!o,
                    onHide: function () {
                        r.remove();
                    },
                })
                .jqmShow(),
            r.find(".alert-popup-close").on("click", function (e) {
                a.resolve(e);
            }),
            a.promise()
        );
    }),
    ($.createJqm = function (e) {
        var t = $("<div class='alert-popup" + (e.cls ? " " + e.cls : "") + "'><a href='#' class='closed'></a><div class='j-b-content content'> " + (e.msg ? "<p>" + e.msg + "</p>" : "") + " </div></div>"),
            n = $.extend(e.jqm, {
                closeSelector: ".alert-popup-close, .closed",
                focusOn: ".closed",
                onHide: function () {
                    t.remove();
                },
            });
        return t.jqm(n);
    }),
    ($.createJqmCool = function (e, t) {
        var n = $($("#jqmPopupTmpl").render(e)).hide().appendTo("body"),
            o = t ? t.onHide : $.noop();
        return n.jqm(
            $.extend(t, {
                closeSelector: ".close, .c-btn-close, .cancel",
                onHide: function () {
                    o && o(), n.remove();
                },
            })
        );
    }),
    ($.confirm = function (e, t) {
        var n = $.extend({ alertName: "alert-error" }, t),
            o = $("<button>", { class: (n.dontHideOnConfirm ? "" : "alert-popup-close ") + "yes", text: n.yes || $.localize("Да") }),
            i = $("<button>", { class: "alert-popup-close no", text: n.no || $.localize("Нет") }),
            r = $("<div>", { class: "alert-popup i-alert-confirm " + n.alertName })
                .append($("<" + (n.contTag || "p") + ">", { html: e, class: n.textClass || "" }))
                .append(o)
                .append(i),
            a = $.Deferred();
        return (
            r
                .find(".yes")
                .on("click", function (e) {
                    a.resolve(e, r);
                })
                .end()
                .find(".no")
                .on("click", function (e) {
                    a.reject(e);
                }),
            r
                .jqm({
                    closeSelector: ".alert-popup-close",
                    focusOn: ".alert-popup-close.no",
                    modal: !0,
                    onHide: function (e) {
                        a.reject(), r.remove();
                    },
                })
                .jqmShow(),
            a.promise()
        );
    }),
    ($.confirmCool = function (e, t) {
        var n = $.extend(!0, { confirmClass: "i-alert-base-v1", needCloseBtn: !0, bnts: { yes: $.localize("Да"), no: $.localize("Нет") }, customContent: !1 }, t),
            o = $("<div>", { class: n.confirmClass }),
            i = $("<div>").addClass("content");
        if ((n.needCloseBtn && o.append($("<span>").addClass("close")), n.title && i.append($("<h1>").text(n.title)), (e = n.customContent ? e : $("<p>").html(e)), i.append(e), n.btns.yes || n.btns.no)) {
            var r = $("<div>").addClass("btn-block");
            n.btns.yes && r.append($("<button>").addClass("alert-popup-close yes").text(n.btns.yes)), n.btns.no && r.append($("<button>").addClass("alert-popup-close no").text(n.btns.no)), i.append(r);
        }
        o.append(i);
        var a = $.Deferred();
        return (
            o
                .find(".yes")
                .on("click", function (e) {
                    a.resolve(e), o.jqmHide().remove();
                })
                .end()
                .find(".no")
                .on("click", function (e) {
                    a.reject(e), o.jqmHide().remove();
                }),
            o
                .jqm({
                    closeSelector: ".close",
                    focusOn: ".alert-popup-close.no",
                    modal: !0,
                    onHide: function (e) {
                        a.notify("closed"), o.remove();
                    },
                })
                .jqmShow(),
            a.promise()
        );
    }),
    wb.namespace(
        "utils.css",
        (function () {
            var c,
                i = {};
            return (
                (c = function (e, t) {
                    for (var n = document.styleSheets.length; n--; ) if (document.styleSheets[n].href && document.styleSheets[n].href.replace("http:", "").replace("https:", "") === e) return t();
                    setTimeout(function () {
                        c(e, t);
                    });
                }),
                {
                    require: function (t, n, o) {
                        var e = i[t];
                        return (
                            e ||
                                ($.isEmptyObject(i) &&
                                    $("link[type='text/css']").each(function (e, t) {
                                        if (t.type && "text/css" === t.type) {
                                            var n = t.href.replace("http:", "").replace("https:", "");
                                            i[n] = $.when(void 0);
                                        }
                                    }),
                                i[t] ||
                                    ((e = $.Deferred(function (e) {
                                        !(function (t, e, n, o) {
                                            try {
                                                var i = !n && o,
                                                    r = document.createElement("link");
                                                if (
                                                    ((r.type = "text/css"),
                                                    (r.rel = "stylesheet"),
                                                    (r.href = e),
                                                    i &&
                                                        ($.browser.safari && "undefined" !== document.styleSheets && document.styleSheets
                                                            ? c(e, function () {
                                                                  t.resolve();
                                                              })
                                                            : (r.onload = function () {
                                                                  t.resolve();
                                                              })),
                                                    document.head.appendChild(r),
                                                    n && "function" == typeof n)
                                                )
                                                    var a = 0,
                                                        s = setInterval(function () {
                                                            n() ? (clearInterval(s), t.resolve()) : 10 == ++a && (clearInterval(s), t.reject());
                                                        }, 100);
                                                n || i || t.resolve();
                                            } catch (e) {
                                                t.reject();
                                            }
                                        })(e, t, n, o);
                                    }).promise()),
                                    (i[t] = e))),
                            e
                        );
                    },
                }
            );
        })()
    ),
    (function (a) {
        "use strict";
        a.getScripts ||
            (a.getScripts = function (e) {
                var t, n, o, i;
                if (
                    ("string" == typeof (t = a.extend({ async: !1, cache: !0 }, e)).urls && (t.urls = [t.urls]),
                    (i = []),
                    (n = function () {
                        a.ajax({
                            url: t.urls.shift(),
                            dataType: "script",
                            cache: t.cache,
                            success: function () {
                                i.push(arguments), 0 < t.urls.length ? n() : "function" == typeof e.success && e.success(a.merge([], i));
                            },
                        });
                    }),
                    (o = function () {
                        i.push(arguments), i.length === t.urls.length && "function" == typeof e.success && e.success(a.merge([], i));
                    }),
                    !0 === t.async)
                )
                    for (var r = 0; r < t.urls.length; r++) a.ajax({ url: t.urls[r], dataType: "script", cache: t.cache, success: o });
                else n();
            });
    })(jQuery),
    (wb.subscribes = (function (n) {
        function o(e, t) {
            n(".subscribe-review").toggle(!e), n(".subscribed-review").toggle(e), t && i(e, t);
        }
        function i(e, t) {
            n(".j-subscribe-feedback")
                .filter('[data-user-id="' + t + '"]')
                .toggleClass("subscribed", e)
                .toggleClass("sign-up", !e);
        }
        function e() {
            var e = n(this),
                t = e.data("userId");
            e.hasClass("subscribed")
                ? n.post("unsubscribeuserfeedback/" + t, function (e) {
                      o(!1, t), wb.userDetails.profile.updateUsersCache(t, "IsSubscribed", !1);
                  })
                : n.post("subscribeuserfeedback/" + t, function (e) {
                      o(!0, t), wb.userDetails.profile.updateUsersCache(t, "IsSubscribed", !0);
                  });
        }
        return {
            bindClick: function () {
                n("#user-mini-profile, .user-profile").on("click", ".j-subscribe-feedback", e), n("#Comments").on("click", ".comment-subscribe-feedback-wrapper .j-subscribe-feedback", e);
            },
            updateOnSubscribeClick: o,
            updateSubscribesIcons: i,
            showSubscribesIcons: function (e) {
                n(".j-subscribe-feedback")
                    .not('[data-user-id="' + e + '"]')
                    .show();
            },
        };
    })(jQuery)),
    wb.namespace(
        "userDetails.profile",
        (function () {
            var o,
                t,
                n = "",
                i = {},
                r = {
                    trigger: ".username>label",
                    delegateTo: "",
                    focusOn: ".user-mini-profile .title",
                    popupSelector: "#user-mini-profile",
                    getCountry: function () {
                        return "";
                    },
                };
            function a(e) {
                e.preventDefault();
                var t = $(this).data("userId");
                $.when(
                    (function () {
                        if (n) return wb.utils.css.require(n);
                        return $.Deferred().resolve();
                    })(),
                    $.views.loadTemplate("userProfilePopup", $.views.converters.urlForJsTmpl("getuserprofiletemplate")),
                    s(t)
                ).then(function (e, t, n) {
                    $.processResponse(n[0], function (e) {
                        o.html($.render.userProfilePopup(e)), wb.subscribes.updateOnSubscribeClick(e.IsSubscribed), 0 === e.PhotoId && $(".avatar .no-photo").removeClass("hide"), o.jqmShow();
                    });
                });
            }
            function s(e) {
                var t = i[e];
                return t || ((t = $.post("/getuserprofile", { userId: e })), (i[e] = t)), t;
            }
            function c(e, t, n) {
                i[e] &&
                    $.when(s(e)).then(function (e) {
                        e.Value[t] = n;
                    });
            }
            function l(e, o) {
                $.processResponse(e, function (e) {
                    var t = "friendRequest",
                        n = "";
                    switch (e) {
                        case "Friend":
                            (t += " removeFriend"), (n = $.localize("Удалить из друзей"));
                            break;
                        case "PendingOut":
                            (t += " pending"), (n = $.localize("Отозвать заявку"));
                            break;
                        case "PendingIn":
                            (t += " pendingIn"), (n = $.localize("Подружиться"));
                            break;
                        default:
                            (t += " addFriend"), (n = $.localize("Добавить в друзья"));
                    }
                    o.removeClass().addClass(t).text(n), c(o.data("userId"), "FriendStatus", e);
                });
            }
            return {
                updateUsersCache: c,
                setCssForUserProfile: function (e) {
                    n = e;
                },
                init: function (e) {
                    wb.settings.enableProfilePageForEveryone &&
                        ((t = $.extend({}, r, e)),
                        (o = $(t.popupSelector)).jqm({
                            focusOn: t.focusOn,
                            closeSelector: ".close",
                            onHide: function (e) {
                                e.w.html("");
                            },
                        }),
                        t.delegateTo ? $(t.delegateTo).on("click", t.trigger, a) : $(t.trigger).on("click", a),
                        $(".user-mini-profile, .user-profile")
                            .on("click", ".friendRequest.addFriend, .friendRequest.pendingIn", function () {
                                var t = $(this);
                                $.post("friends/add", { friendId: t.data("userId") }).done(function (e) {
                                    l(e, t);
                                });
                            })
                            .on("click", ".friendRequest.removeFriend, .friendRequest.pending", function () {
                                var t = $(this);
                                $.post("friends/remove", { friendId: t.data("userId") }).done(function (e) {
                                    l(e, t);
                                });
                            }));
                },
            };
        })()
    ),
    $(".j-prevent-double-click").not("form").on("click", wb.utils.preventDoubleClick).end().filter("form").on("submit", wb.utils.preventDoubleClick),
    (wb.socialShare = function () {
        var r,
            o,
            t = function () {
                var i = { vk: {}, fb: {}, odnoklassniki: {} };
                o.on("click", "a", function () {
                    var e = this.className,
                        t = a();
                    if (r.cod1S) {
                        var n = [];
                        n.push(wb.stat.wrapParam("SSN", e)), n.push(wb.stat.wrapParam("C1S", r.cod1S || 0)), wb.stat.sendEvent("PCSS", n);
                    }
                    if (s[e] && s[e].link) {
                        var o = s[e].link(r.currentUrl, $.trim(t.title), t.img, $.trim(t.desc));
                        "vk" === e && 3080 <= o.length && (o = s.vk.link(r.currentUrl, $.trim(t.title), t.img)),
                            openNewWindow(o),
                            !r.counters || ("fb" !== e && "vk" !== e && "odnoklassniki" !== e) || i[e][r.currentUrl] || (s[e].updateCount(1, "add"), (i[e][r.currentUrl] = 1));
                    }
                    return !1;
                }),
                    r.mailFriends &&
                        r.mailFriends.$modalPopup &&
                        r.mailFriends.$modalPopup.jqm({
                            ajax: "@href",
                            trigger: o.selector + " a.sharelink",
                            focusOn: !1,
                            ajaxText: '<img alt="' + $.localize("Загрузка") + '..." src="' + wb.settings.staticSiteUrl + '/i/mfloader.gif" class="loader">',
                        });
            },
            n = function (e, t, n, o) {
                s[e] && s[e].link && openNewWindow(s[e].link(t, $.trim(n), o));
            },
            a = function () {
                return {
                    title: r.title || $(r.titleSelector).first().text() || $(r.titleSelector).first().attr("content") || "",
                    img: r.image || $(r.imageSelector).first().prop("src") || $(r.imageSelector).first().attr("content") || "",
                    desc: r.description || $(r.descriptionSelector).first().text() || $(r.descriptionSelector).first().attr("content") || "",
                };
            },
            i = function (e) {
                r.counters &&
                    "array" != !$.type(r.counters) &&
                    setTimeout(function () {
                        $(r.counters).each(function (e, t) {
                            s[t] && s[t].counter(r.currentUrl);
                        });
                    }, e || 3e3);
            },
            s = {
                vk: {
                    link: function (e, t, n, o) {
                        var i = { url: e, title: t, noparse: !0, description: (o || t).slice(0, 537) };
                        return n && (i.image = n), window.location.protocol + "//vkontakte.ru/share.php?" + $.param(i);
                    },
                    counter: function (e) {
                        var n = s.vk,
                            t = s.vk.counter;
                        if (
                            ((VK = {
                                Share: {
                                    count: function (e, t) {
                                        n.updateCount(t);
                                    },
                                },
                            }),
                            t.cache && void 0 !== t.cache[e])
                        )
                            return VK.Share.count(0, t.cache[e]);
                        $.getJSON(window.location.protocol + "//vk.com/share.php?act=count&index=1&url=" + e + "&format=json&callback=?");
                    },
                    updateCount: function (e, t) {
                        (e = c.updateCount(o.find(".j-vk-count"), e, t)), c.updateCounterCash(this, e);
                    },
                },
                fb: {
                    link: function (e, t, n, o) {
                        var i = window.location.protocol + "//www.facebook.com/sharer.php?s=100";
                        return (i += "&p[url]=" + encodeURIComponent(e)), (i += "&p[title]=" + encodeURIComponent(t)), n && (i += "&p[images][0]=" + encodeURIComponent(n)), o && (i += "&p[summary]=" + encodeURIComponent(o)), i;
                    },
                    counter: function (e, t) {
                        var n = s.fb,
                            o = n.counter;
                        if (o.cache && void 0 !== o.cache[e]) return n.updateCount(o.cache[e]);
                        $.getJSON("https://graph.facebook.com/fql?q=select%20total_count%20from%20link_stat%20where%20url=%22" + e + "%22&callback=?", function (e) {
                            var t = e.data ? e.data[0].total_count : 0;
                            n.updateCount(t);
                        });
                    },
                    updateCount: function (e, t) {
                        (e = c.updateCount(o.find(".j-fb-count"), e, t)), c.updateCounterCash(this, e);
                    },
                },
                odnoklassniki: {
                    link: function (e, t, n, o) {
                        var i = { url: e, title: o || t };
                        return window.location.protocol + "//connect.ok.ru/offer?" + $.param(i);
                    },
                    counter: function (e, t) {
                        var n = s.odnoklassniki,
                            o = n.counter;
                        if (
                            ((window.ODKL = {
                                updateCount: function (e, t) {
                                    n.updateCount(t);
                                },
                            }),
                            o.cache && void 0 !== o.cache[e])
                        )
                            return ODKL.updateCount(0, o.cache[e]);
                        $.ajax({ url: window.location.protocol + "//www.odnoklassniki.ru/dk?st.cmd=extLike&&uid=odklcnt1&ref=" + e, type: "GET", dataType: "jsonp" });
                    },
                    updateCount: function (e, t) {
                        (e = c.updateCount(o.find(".j-ok-count"), e, t)), c.updateCounterCash(this, e);
                    },
                },
                twitter: {
                    link: function (e, t) {
                        return window.location.protocol + "//twitter.com/share?" + $.param({ url: e, text: t, counturl: e });
                    },
                },
                lj: {
                    link: function (e, t) {
                        return window.location.protocol + "//www.livejournal.com/update.bml?" + $.param({ event: $("<a>", { href: e }).text(t)[0].outerHTML, subject: t });
                    },
                },
                mm: {
                    link: function (e, t, n, o) {
                        var i = { url: e, title: t, description: o || t };
                        return n && (i.imageurl = n), window.location.protocol + "//connect.mail.ru/share?" + $.param(i);
                    },
                },
                ya: {
                    link: function (e, t, n, o) {
                        var i = { url: e, title: t, body: o || t };
                        return window.location.protocol + "//wow.ya.ru/posts_share_link.xml?" + $.param(i);
                    },
                },
            },
            c = {
                updateCount: function (e, t, n) {
                    return "add" == n && (t = +e.text() + t), 0 < t ? e.text(t).fadeIn() : e.text(0).fadeOut(), t;
                },
                updateCounterCash: function (e, t) {
                    var n = e.counter;
                    n.cache || (n.cache = {}), (n.cache[r.currentUrl] = t);
                },
            };
        return {
            init: function (e) {
                e.socialWrapSelector &&
                    "string" == $.type(e.socialWrapSelector) &&
                    e.pageUrl &&
                    "string" == $.type(e.pageUrl) &&
                    ((e.title && "string" == $.type(e.title)) || (e.titleSelector && "string" == $.type(e.titleSelector))) &&
                    ((r = $.extend({ currentUrl: e.pageUrl }, e)), (o = $(r.socialWrapSelector)), t(), i());
            },
            update: function (e) {
                var t = r.currentUrl,
                    n = a();
                (r.currentUrl = e.newUrl),
                    e.isPopup ||
                        ((document.title = n.title.trim()),
                        $("link[rel='canonical']").attr("href", r.currentUrl),
                        $("meta[property='og:url']").attr("content", r.currentUrl),
                        $("meta[property='og:image']").attr("content", n.img),
                        $("meta[name='description']").attr("content", n.title.trim() + ". " + n.desc.trim())),
                    i(1e3),
                    o.find("a").each(function () {
                        $(this).attr("href", $(this).attr("href").replace(t, r.currentUrl));
                    });
            },
            initSimpleShare: function (e) {
                e.wrapper.on("click", "a", function (e) {
                    e.preventDefault();
                    var t = $(this);
                    n(this.className, t.data("url"), t.data("title"), t.data("img"));
                });
            },
            socials: { ok: { link: s.odnoklassniki.link } },
        };
    }),
    (wb.communications = function () {
        var e, t, o, n, i, r, a;
        (e = $("#comWrapper")), (t = $(".j-com-create-wrapper")), (n = $("#createCommunicationPopup").jqm({ closeSelector: ".close, .cancel" })), (i = $("#communicationDetailsPopup").jqm({ closeSelector: ".close, .cancel" }));
        t.off("click").on("click", ".j-create-com", function (e) {
            e.preventDefault(), s();
        }),
            e.on("click", ".j-communication-row", function () {
                i.load("communications/details/" + $(this).attr("data-communication-id") + "?" + $.now(), function () {
                    i.jqmShow(),
                        (i.$formFeedback = i.find("form")),
                        i.$formFeedback.find(".j-show-counter").charsCounter({ text: "Введено символов: " }),
                        $.validator.unobtrusive.parse(i.$formFeedback),
                        i.$formFeedback
                            .find(".j-cb-dislike-reason")
                            .first()
                            .rules("add", { onemustbechecked: !0, messages: { onemustbechecked: "Выберите причину" } });
                });
            }),
            i
                .on("click", ".j-submit-feedback", function () {
                    var t = $(this);
                    (i.$btnSubmitBadFeedback = t.filter("button").loading(!0)),
                        i.$btnSubmitBadFeedback.length || f.$textWrapper().find("input").prop("disabled", !0),
                        i.$formFeedback.length &&
                            i.$formFeedback.valid() &&
                            (i.$btnSubmitBadFeedback.length || f.resetBtns(),
                            f.leave(i.$formFeedback.serialize()).done(function (e) {
                                return (
                                    $.processResponse(
                                        e,
                                        function () {
                                            i.find(".communications-feedback").addClass("disabled").end().find(".j-feedback-sent-msg").show().fadeOut(5e3),
                                                f.$formFields().prop("disabled", !0),
                                                f.$textWrapper().hide(),
                                                f.makeBtnActive(t),
                                                wbTable.update();
                                        },
                                        function (e) {
                                            i.$btnSubmitBadFeedback.loading(!1), $.renderModalError(e);
                                        }
                                    ),
                                    !1
                                );
                            })),
                        i.$btnSubmitBadFeedback.loading(!1);
                })
                .on("click", ".j-feedback-bad", function () {
                    f.$textWrapper().show().find("input").prop("disabled", !1), f.resetBtns(), f.makeBtnActive($(this));
                })
                .on("click", ".j-close-feedback-text", function (e) {
                    e.preventDefault(), f.resetBtns(), f.$textWrapper().hide(), f.$formFields().prop("checked", !1);
                });
        var s = function (e) {
            e && (a = e), n.load("communications/create");
        };
        (a = -1 === window.location.href.indexOf("www.wildberries") && wb.getURLparam("cmt")) &&
            (((a = { topics: a.split(",") }).rp = wb.getURLparam("rp")), (a.text = wb.getURLparam("text")), (a.source = wb.getURLparam("cmt_source")), $(".j-com-form").length || s());
        var c = function () {
                o
                    .on("change", ".j-topic-select select", function (e) {
                        $(e.target).valid();
                        var t = $(this).val();
                        l(t), d();
                    })
                    .on("submit", function (e) {
                        if ((e.preventDefault(), (o.$btnSubmit = o.find("button:submit").loading(!0)), o.valid()))
                            return (
                                $.post(o.attr("action"), o.serialize()).done(function (e) {
                                    $.processResponse(e, $.noop(), function (e) {
                                        o.$btnSubmit.loading(!1), $.renderModalError(e);
                                    });
                                }),
                                !1
                            );
                        o.$btnSubmit.loading(!1);
                    }),
                    o.$divisionDddl.on("change", function (e) {
                        var t = o.$divisionDddl.find("option:selected").data("req-params");
                        t ? (u(t), p(-1 != $.inArray(o.$divisionDddl.val(), ["ovt", "ovb"])), o.data("validator", null), $.validator.unobtrusive.parse(o), $(e.target).valid()) : d();
                    });
            },
            l = function (t) {
                var e = [];
                t &&
                    (e = $.grep(r, function (e) {
                        return e.entity.id == t;
                    })[0].childNodes);
                var n = [o.$divisionDddl.find("option").first()[0].outerHTML];
                $.each(e, function (e, t) {
                    n.push(
                        $("<option>")
                            .attr({ value: t.entity.id, "data-req-params": JSON.stringify(t.entity.requiredParams) })
                            .text(t.entity.name)[0].outerHTML
                    );
                }),
                    o.$divisionDddl.html(n.join("")).trigger("chosen:updated");
            },
            u = function (e) {
                d(),
                    o.find(".j-division-select").after(
                        $.render.reqParamsTmpl(
                            { params: e },
                            {
                                extractClass: function (e) {
                                    return e.type + (e.required ? " required" : "");
                                },
                            }
                        )
                    ),
                    h();
            },
            d = function () {
                o.find(".j-required-params").remove();
            },
            p = function (e) {
                o.find(".j-refund-terms").toggle(e).find("input:checkbox").prop("checked", !e);
            },
            f = {
                leave: function (e) {
                    return $.post("/communications/leavefeedback", e);
                },
                makeBtnActive: function (e) {
                    e.closest(".j-feedback-button").addClass("active").prevAll(".j-feedback-button").addClass("active");
                },
                resetBtns: function () {
                    i.$formFeedback.find(".j-feedback-button").removeClass("active");
                },
                $textWrapper: function () {
                    return i.$formFeedback.find(".j-feedback-text");
                },
                $formFields: function () {
                    return i.$formFeedback.find(".j-feedback-field");
                },
            },
            h = function () {
                var e = new Date();
                o.find(".datepicker")
                    .prop("readonly", !0)
                    .glDatePicker({
                        onClick: function (e, t, n, o) {
                            e.val(n.format("dd.MM.yyyy"));
                        },
                        selectableDateRange: [{ from: new Date(e.getFullYear(), e.getMonth() - 2, e.getDate()), to: new Date(e.getFullYear(), e.getMonth() + 1, e.getDate()) }],
                    });
            };
        return {
            prepareForm: function (e) {
                e || n.jqmShow(),
                    (o = e ? $(".j-com-form") : n.find(".j-com-form")),
                    $.validator.unobtrusive.parse(o),
                    (o.data("validator").settings.ignore = ".ignore"),
                    (o.$divisionDddl = o.find(".j-division-select select")),
                    o.find(".j-show-counter").charsCounter(),
                    (r = o.data("topics")),
                    $.templates({ reqParamsTmpl: $("#requiredParamsTmpl").html(), comDetailsTmpl: $("#communicationDetailsTmpl").html() }),
                    o.$divisionDddl.add(o.find(".j-topic-select select")).chosen(),
                    c(),
                    a &&
                        ($.each(a.topics, function () {
                            o.find('.j-topic-select select option[value^="' + this + '"]')
                                .add(o.$divisionDddl.find('option[value^="' + this + '"]'))
                                .prop("selected", !0)
                                .trigger("change")
                                .trigger("chosen:updated");
                        }),
                        a.rp && o.find(".j-required-param").val(a.rp),
                        a.text && o.find(".j-ta-comm-text").val(decodeURIComponent(a.text)),
                        a.source && o.find(".j-h-comm-source").val(a.source)),
                    (a = null);
            },
            openPopup: s,
        };
    }),
    wb.namespace("vipStatusCheck", {
        init: function () {
            0 === window.location.hostname.indexOf("www.wildberries") &&
                wb.settings.enableVipStatus &&
                !wb.settings.isMobileDevice &&
                window.supportLocalStorage &&
                $.when(wb.basket.getUser).done(function (e) {
                    if (e.isAuth && !e.hasEmail) {
                        var t = wb.utils.script.require(wb.settings.scripts.vipStatus);
                        $.when(t).then(function (e) {
                            wb.vipStatus.init();
                        });
                    }
                });
        },
    }),
    wb.namespace("webPushCheck", {
        init: function () {
            var e,
                t = wb.settings.enableWebPush,
                n = wb.settings.firebaseWebPush,
                o = 0 !== window.location.href.indexOf(wb.settings.fullDomainName),
                i = $.browser.safari;
            "disabled" != (e = t || n ? (t && !n ? "gcm" : "firebase") : "disabled") &&
                "serviceWorker" in navigator &&
                !o &&
                !i &&
                ("gcm" === e
                    ? $.when(wb.utils.script.require(wb.settings.scripts.webPush)).then(function () {
                          wb.webPush && wb.webPush.init(wb.basket.getUser, wb.geo.siteFirstOpen);
                      })
                    : "firebase" === e &&
                      $.when(wb.utils.script.require(wb.settings.scripts.firebaseSubscribe)).then(function () {
                          wb.firebaseSubscribe && wb.firebaseSubscribe.init(wb.basket.getUser);
                      }));
        },
    }),
    (wb.newReceipts = function (e) {
        (e ? $(e).find(".j-novelties") : $(".j-novelties")).each(function (e, t) {
            var n = $(t),
                o = n.data("goods-any"),
                i = n.data("loaded"),
                r = n.data("position-vertical"),
                a = n.attr("data-visible-count"),
                s = parseInt(n.attr("data-scroll-count"));
            o &&
                !i &&
                (n.jCarouselLite({
                    btnNext: n.siblings(".next"),
                    btnPrev: n.siblings(".prev"),
                    vertical: r,
                    lazyImg: !0,
                    responsive: !r,
                    preventTouchWindowScroll: !1,
                    swipeClick: !0,
                    swipeThresholds: { x: 20, y: 80, time: 0, kMinSwipe: 0.2 },
                    visible: a,
                    scroll: s,
                }),
                n.data("loaded", !0));
        });
    }),
    (wb.scrollListener = new (function () {
        var r = [],
            e = !1,
            a = $(".bottom_fixed").height(),
            s = $(window).scrollTop(),
            o = function (e, t) {
                var n = t;
                if (((n = n || 0), null != e && !(n < 0 || 1 < n))) return i(e, n);
            },
            i = function (e, t) {
                var n, o;
                return (o = { windowPositionTop: $(window).scrollTop(), windowHeight: $(window).height(), checkedPositionTop: e.offset().top, checkedHeight: e.height(), demandVisibleRatio: t }), 0 != (n = c(o)) && t <= n / e.height();
            },
            c = function (e) {
                var t,
                    n,
                    o,
                    i = e;
                if (((t = i.windowPositionTop == s), (n = i.windowPositionTop < s && i.checkedPositionTop < s), (o = i.windowPositionTop > s && i.checkedPositionTop > s), t)) {
                    if (i.checkedPositionTop + i.checkedHeight > i.windowPositionTop && i.checkedPositionTop < i.windowPositionTop) return i.checkedPositionTop + i.checkedPositionHeight - i.windowPositionTop;
                    if (i.checkedPositionTop > i.windowPositionTop && i.checkedPositionTop < i.windowPositionTop + i.windowHeight) return i.windowPositionTop + i.windowHeight - a - i.checkedPositionTop;
                }
                return n ? i.checkedPositionTop + i.checkedHeight - i.windowPositionTop : o ? i.windowPositionTop + i.windowHeight - a - i.checkedPositionTop : 0;
            },
            t = function () {
                for (var e = 0; e < r.length; e++) {
                    var t = r[e];
                    t.$ && t.handler && !t.done && n(r[e]);
                }
                s = $(window).scrollTop();
            },
            n = function (e) {
                (function (e, t) {
                    if (!e.is(":not(:visible)")) {
                        if (e.hasClass("j-carousel-banner")) {
                            var n = e.closest("li");
                            return n.hasClass("jc-active") || n.hasClass("active") ? o(e, t) : void 0;
                        }
                        return o(e, t);
                    }
                })(e.$, e.demandVisibleRatio) &&
                    e.handler &&
                    (e.handler(e.$), e.repeatable || (e.done = !0));
            };
        return {
            checkRatio: o,
            start: function () {
                e || ($(window).scroll(t), $(window).resize(t), (e = !0)), t();
            },
            doScrollHandler: n,
            addElements: function (e, n, o, i) {
                e.each(function (e, t) {
                    r[r.length] = { $: $(t), handler: n, repeatable: o, demandVisibleRatio: i };
                });
            },
        };
    })()),
    (wb.copyToBufferByBtn = function (e) {
        var t, n;
        if (((t = $.extend({ showTooltip: !0, selector: ".j-clipboard-text" }, e)), (n = $(t.selector)), !$.isEmptyObject(n))) {
            var o = new Clipboard(t.selector);
            t.showTooltip && n.tooltipster({ trigger: "hover", position: "top", offsetX: 0, content: $.localize("Кликните, <br>чтобы скопировать"), theme: "tooltipster-default clipboard-info" }),
                t.clearSelection &&
                    o.on("success", function (e) {
                        e.clearSelection();
                    });
        }
    }),
    (wb.copyToBuffer = function (e, t) {
        var o, n;
        (o = $.extend({ showTooltip: !0, selector: ".j-clipboard-text", chooseParent: !1 }, t)),
            (n = $(o.selector)),
            $.isEmptyObject(n) ||
                $.when(wb.utils.script.require(e)).then(function () {
                    new Clipboard(o.selector, {
                        target: function (e) {
                            return e;
                        },
                    }).on("success", function (e) {
                        n.each(function (e, t) {
                            var n = $(t);
                            n.removeClass("choosen"), o.chooseParent && n.parent().removeClass("choosen"), o.showTooltip && n.tooltipster("content", $.localize("Кликните, <br>чтобы скопировать"));
                        });
                        var t = $(e.trigger);
                        t.addClass("choosen"), o.chooseParent && t.parent().addClass("choosen"), o.showTooltip && t.tooltipster("content", $.localize("Промокод <br> скопирован")), e.clearSelection();
                    }),
                        o.showTooltip && n.tooltipster({ trigger: "hover", position: "top", offsetX: 0, content: $.localize("Кликните, <br>чтобы скопировать"), theme: "tooltipster-default clipboard-info" });
                });
    }),
    (wb.imageViewer = (function () {
        var t = "data-imgview-path",
            n = $(
                "<div class='jqmPopWindow bLkPopup common-photos-popup i-photos-popup'><div><div class='titlebar'><a href='#' class='close'></a></div><i class='j-i-arrow left common-photos-popup-arrow common-photos-popup-arrow-left'></i><div class='j-b-popup-content common-photos-popup-content'></div><i class='j-i-arrow right common-photos-popup-arrow common-photos-popup-arrow-right'></i><span class='common-photos-popup-counter j-s-photos-counter'>1 / 5</span></div ></div >"
            ).jqm({
                onHide: function () {
                    $(document).off(".keyboard-scroll");
                },
            });
        return (
            (n.$arrows = n.find(".j-i-arrow")),
            n.on("click", ".j-i-arrow:not(.disabled)", function () {
                n.$arrows.hasClass("clicked") || n.showImage($(this).data("img-idx"));
            }),
            (n.setImages = function (e) {
                n.find(".j-b-popup-content").html(
                    $.map(e, function (e, t) {
                        return "<span>" + e.outerHTML + "</span>";
                    })
                ),
                    (n.$imageWraps = n.find(".j-b-popup-content span")),
                    n.$imageWraps.hide();
            }),
            (n.fadeInImage = function (e) {
                n.$cImageWrapper.fadeIn(100, function () {
                    n.$arrows.removeClass("disabled clicked"),
                        n.$arrows
                            .filter(".left")
                            .toggleClass("disabled", 0 === e)
                            .data("img-idx", e - 1),
                        n.$arrows
                            .filter(".right")
                            .toggleClass("disabled", e === n.$imageWraps.length - 1)
                            .data("img-idx", e + 1);
                });
            }),
            (n.showImage = function (e) {
                n.$cImage && n.$cImage.is("video") && n.$cImage[0].pause(),
                    n.$arrows.addClass("disabled clicked"),
                    n.$imageWraps.hide(),
                    (n.$cImageWrapper = n.$imageWraps.eq(e)),
                    (n.$cImage = n.$cImageWrapper.find("img, video")),
                    n.$cImage.is("video") && !n.$cImageWrapper.hasClass("loaded")
                        ? (n.$cImage.attr("preload", "auto").attr("controls", !0).attr("width", 498), n.$cImageWrapper.addClass("loaded"), n.fadeInImage(e), n.css("z-index", 10003).jqmShow(), n.$cImage.attr(t, null))
                        : n.$cImage
                              .off(".iv")
                              .on("load.iv", function () {
                                  this.complete && (n.$cImageWrapper.addClass("loaded"), n.fadeInImage(e), n.css("z-index", 10003).jqmShow());
                              })
                              .on("error.iv", function () {
                                  n.is(":visible") && n.fadeInImage(e);
                              }),
                    n.$cImageWrapper.hasClass("loaded") ? n.fadeInImage(e) : (n.$cImage.attr("src", n.$cImage.attr(t)), n.$cImage.attr(t, null)),
                    n.find(".j-s-photos-counter").text(e + 1 + " / " + n.$imageWraps.length),
                    n.trigger("show-image", n.$cImage);
            }),
            $(document).on("click", "[" + t + "]", ".j-b-imgview", function () {
                if ((($cont = $(this).closest(".j-b-imgview")), !$cont.length)) return !1;
                var e = $cont.find("img, video");
                n.setImages(e.clone()),
                    n.showImage(e.index($(this))),
                    n.off(".keyboard-scroll"),
                    $cont.is("[data-keyboard-scroll]") &&
                        $(document).on("keydown.keyboard-scroll", function (e) {
                            return 39 === e.which ? (n.$arrows.filter(".right").click(), !1) : 37 !== e.which || (n.$arrows.filter(".left").click(), !1);
                        });
            }),
            n
        );
    })()),
    wb.namespace(
        "utils.script",
        (function () {
            var i = {};
            return {
                require: function (t, e) {
                    var n = i[t];
                    if (
                        !n &&
                        ($.isEmptyObject(i) &&
                            $("script[type='text/javascript']").each(function (e, t) {
                                if (t.type) {
                                    var n = t.src.replace("http:", "").replace("https:", "");
                                    i[n] = $.when(void 0);
                                }
                            }),
                        !i[t])
                    ) {
                        var o = $.Deferred(function (e) {
                            !(function (t, e) {
                                try {
                                    var n = document.createElement("script");
                                    (n.type = "text/javascript"),
                                        (n.src = e),
                                        n.readyState
                                            ? (n.onreadystatechange = function () {
                                                  ("loaded" !== n.readyState && "complete" !== n.readyState) || ((n.onreadystatechange = null), t.resolve());
                                              })
                                            : (n.onload = function () {
                                                  t.resolve();
                                              }),
                                        document.body.appendChild(n);
                                } catch (e) {
                                    t.reject();
                                }
                            })(e, t);
                        }).promise();
                        (n = $.when(
                            !e ||
                                (function (e) {
                                    var t = $("html").attr("lang");
                                    if ("ru" == t) return !0;
                                    var n = e
                                        .substring(e.lastIndexOf("/") + 1)
                                        .replace(".min.js", ".js")
                                        .split("?");
                                    return $.ajax({ url: "j/localized/" + n[0] + "?v=" + n[1] + "&c=" + t });
                                })(t),
                            o
                        )),
                            (i[t] = n);
                    }
                    return n;
                },
            };
        })()
    ),
    (wb.onlineChat = (function () {
        function o() {
            var e = $.cookie("_wbchat");
            return e && 0 < e.length ? JSON.parse(e) : {};
        }
        function i(e, t) {
            var n = o();
            (n[e] = t), $.cookie("_wbchat", JSON.stringify(n), { expires: 1, domain: "." + wb.settings.domainName, path: "/" });
        }
        function r() {
            $(".smm-fixed").addClass("isWbMessage");
        }
        function a() {
            i("unread", !1), $(".smm-fixed").removeClass("isWbMessage");
        }
        function s() {
            var e = $(".chat-base");
            e[0].scrollHeight > e[0].offsetHeight && e.addClass("chat-scroll"), e.scrollTop(e[0].scrollHeight);
        }
        var c;
        function l() {
            var t = $.view(".chat-wrapper", !0);
            t.data.LastId &&
                (c = $.ajax({ url: "onlinechat/history", data: { messageId: t.data.LastId }, type: "POST" }).done(function (e) {
                    $.processResponse(
                        e,
                        function (e) {
                            u(t.data, e), e && (e.Inbox || e.RequestRating) && $(".chat").is(":hidden") && (i("unread", !0), r()), setTimeout(l, 100);
                        },
                        !1
                    );
                }));
        }
        function u(e, t) {
            t &&
                t.History &&
                ($.observable(e).setProperty({ LastDate: t.LastDate }),
                t.LastId && $.observable(e).setProperty({ LastId: t.LastId }),
                t.LastEmployee && $.observable(e).setProperty({ LastEmployee: t.LastEmployee }),
                t.RequestRating && $.observable(e).setProperty({ RequestRating: t.RequestRating }),
                $.observable(e.History).insert(t.History),
                s());
        }
        function d(e, t) {
            var n = this;
            return (
                0 === $.trim(n.Text).length ||
                    $.debounce(
                        $.post("onlinechat/send", { text: n.Text }).done(function (e) {
                            $.processResponse(
                                e,
                                function (e) {
                                    c || (u(n, { LastId: e.LastId, LastDate: e.LastDate, History: [{ Id: e.LastId, Text: n.Text }] }), setTimeout(l, 100)), $.observable(n).setProperty({ Text: "" });
                                },
                                !0
                            );
                        }),
                        100,
                        !0
                    ),
                !1
            );
        }
        function p(e, t) {
            var n = this,
                o = t.linkCtx.elem.files[0],
                i = new FormData();
            return (
                i.append("file", o),
                $.observable(n).setProperty({ Uploading: !0 }),
                $.ajax({ url: "onlinechat/upload", data: i, dataType: "json", cache: !1, contentType: !1, processData: !1, type: "POST" })
                    .always(function (e) {
                        $.observable(n).setProperty({ Uploading: !1 });
                    })
                    .done(function (e) {
                        $.processResponse(
                            e,
                            function (e) {
                                c || (u(n, { LastId: e.LastId, LastDate: e.LastDate, History: [{ Id: e.LastId, ImageUrl: e.ImageUrl, FileUrl: e.FileUrl }] }), setTimeout(l, 100));
                            },
                            !0
                        );
                    }),
                !1
            );
        }
        function f() {
            var t = $.view(".chat-wrapper", !0);
            if (t.data.Rating) return !1;
            var n = this;
            $.post("onlinechat/rating", { rating: n }).done(function (e) {
                $.processResponse(
                    e,
                    function () {
                        $.observable(t.data).setProperty({ Rating: n });
                    },
                    !0
                );
            });
        }
        function h(e) {
            var t = this,
                n = $.ajax({ type: "HEAD", url: e }).done(function () {
                    var e = n.getResponseHeader("Content-Length");
                    e && $.observable(t.data).setProperty("FileSize", Math.ceil(e / 1024));
                });
            return e.substring(e.lastIndexOf("/") + 1);
        }
        var t = /(\b(https?|ftp|file):\/\/[-A-Z0-9+&@#\/%?=~_|!:,.;]*[-A-Z0-9+&@#\/%=~_|])/gi;
        function m(e) {
            return e.indexOf("http") < 0
                ? e
                : e.replace(t, function (e) {
                      return '<a class="link" target="_blank" href="' + e + '">' + e + "</a>";
                  });
        }
        return {
            start: function () {
                wb.settings.enableOnlineChat &&
                    $.when($.views.loadTemplate("OnlineChatTmpl", $.views.converters.urlForJsTmpl("OnlineChatTmpl")), $.post("onlinechat/history")).done(function (n, e) {
                        $.processResponse(
                            e[0],
                            function (e) {
                                n.link(".chat-wrapper", e || { History: [] }, { onSubmit: d, uploadFile: p, ratingClick: f, getFileName: h, linkify: m }),
                                    $("#scrolled-socials .links.wb, .service-basic .contacts_social.wb")
                                        .show()
                                        .on("click", function () {
                                            return $(".chat-wrapper").toggle(), i("show", $(".chat").is(":visible")), $(".chat").is(":visible") && a(), s(), !1;
                                        }),
                                    $(".chat-wrapper").on("click", ".minimize", function () {
                                        i("show", !1), $(".chat-wrapper").hide();
                                    }),
                                    $(".chat-base").customScroll(),
                                    $(".chat").draggable(".chat-header", function (e, t) {
                                        i("x", e), i("y", t);
                                    }),
                                    l();
                                var t = o();
                                t && (t.show && ($(".chat-wrapper").show(), a()), t.unread && !t.show && r(), t.x && $(".chat").css("left", t.x), t.y && $(".chat").css("top", t.y)), s();
                            },
                            !1
                        );
                    });
            },
            updateScroll: s,
        };
    })()),
    (function (l) {
        (l.fn.draggable = function (e, t) {
            var n = this,
                o = l(e),
                i = 0,
                r = 0;
            function a(e) {
                e.preventDefault(), (i = e.clientX), (r = e.clientY), l(document).on("mousemove", s).on("mouseup", c);
            }
            function s(e) {
                e.preventDefault(), n.css({ top: n[0].offsetTop - r + e.clientY, left: n[0].offsetLeft - i + e.clientX }), (i = e.clientX), (r = e.clientY);
            }
            function c(e) {
                e.preventDefault(), l(document).off("mousemove", s).off("mouseup", c), l.isFunction(t) && t(n.css("left"), n.css("top"));
            }
            return o.on("mousedown", a), this;
        }),
            (l.fn.customScroll = function (e) {
                var r,
                    t,
                    n,
                    a = this;
                function o() {
                    var e = a[0].offsetHeight,
                        t = a[0].scrollHeight,
                        n = a[0].scrollTop / (t - e),
                        o = Math.max(Math.floor((e / t) * e), 20),
                        i = Math.floor((e - o) * n);
                    r.css({ top: i, height: o }).toggle(o < t);
                }
                function i(e) {
                    e.preventDefault(),
                        l(document)
                            .on("mousemove", { dragOffset: e.pageY - r[0].getBoundingClientRect().top }, s)
                            .on("mouseup", c);
                }
                function s(e) {
                    e.preventDefault();
                    var t = ((e.pageY - a[0].getBoundingClientRect().top - e.data.dragOffset) / a[0].offsetHeight) * a[0].scrollHeight;
                    a.scrollTop(t);
                }
                function c() {
                    l(document).off("mousemove", s).off("mouseup", c);
                }
                return (n = e), (t = l.extend({ scrollerSelector: ".scroll" }, n)), (r = l(t.scrollerSelector)), o(), a.on("scroll", o), r.on("mousedown", i), this;
            });
    })(jQuery),
    (wb.stat = (function () {
        var o,
            i = [];
        function r() {
            var e = i;
            return (i = []), e;
        }
        function a(e) {
            if (i.length) {
                var t = r();
                void 0 === e && (e = !0);
                var n = {};
                (n.pageViewGuid = o),
                    (n.path = window.location.pathname),
                    (n.queryString = window.location.search),
                    (n.urlReferrer = document.referrer),
                    (n.statisticEvents = t),
                    $.ajax({
                        type: "POST",
                        dataType: "json",
                        contentType: "application/json; charset=UTF-8",
                        cache: !1,
                        data: JSON.stringify(n),
                        url: "/stats/events",
                        error: function () {
                            i = i.concat(t);
                        },
                    });
            }
        }
        return (
            setInterval(function () {
                a();
            }, 3e3),
            $(window).on("beforeunload", function () {
                a(!1);
            }),
            {
                sendEvent: function (e, t, n) {
                    var o = t.slice();
                    i.push({ EventName: e, EventParams: o }), n && a(!1);
                },
                wrapParam: function (e, t) {
                    return { ParamName: e, ParamValue: null == t ? null : t.toString().replace(/"/g, "\\x22") };
                },
                sendPageView: function () {
                    var e,
                        t = { statusCode: 200 };
                    (t.path = window.location.pathname),
                        (t.queryString = window.location.search),
                        (t.urlReferrer = document.referrer),
                        0 < i.length && ((e = r()), (t.statisticEvents = e)),
                        $.ajax({
                            type: "POST",
                            dataType: "json",
                            contentType: "application/json; charset=UTF-8",
                            cache: !1,
                            data: JSON.stringify(t),
                            url: "/stats/pageview",
                            error: function () {
                                i = i.concat(e);
                            },
                            success: function (e) {
                                o = e;
                            },
                        });
                },
            }
        );
    })()),
    (wb.stat.banners = (function () {
        var i = { ths: this, cl: { banner: "j-banner" } };
        i.sl = { shownStat: ".j-banner-shown-stat", clickStat: ".j-banner-click-stat", banner: "." + i.cl.banner };
        function r(e) {
            var t = [],
                n = e.data("banner-id"),
                o = (e.data("location"), e.data("section")),
                i = e.data("statistic-fields");
            return (
                e.data("img"),
                "" === n
                    ? null
                    : (t.push(wb.stat.wrapParam("BID", n)),
                      t.push(wb.stat.wrapParam("SCTN", o)),
                      i && (t.push(wb.stat.wrapParam("BUT", i.urlType)), t.push(wb.stat.wrapParam("BLT", i.locationType)), t.push(wb.stat.wrapParam("BDT", i.displayType)), t.push(wb.stat.wrapParam("SORT", i.sort))),
                      t)
            );
        }
        function t(e) {
            var t;
            if (!e.data("shown-stat-sent") && (t = r(e))) {
                var n = e.hasClass("j-banner-stat-send");
                wb.stat.sendEvent("BSE", t, n), e.attr("data-shown-stat-sent", !0);
            }
        }
        return {
            initClickEvent: function () {
                $("body")
                    .off("mousedown", i.sl.clickStat)
                    .on("mousedown", i.sl.clickStat, function (e) {
                        if (3 !== e.which) {
                            var t = $(e.currentTarget),
                                n = t.hasClass(i.cl.banner),
                                o = t;
                            n ||
                                (o = (function (n) {
                                    return $(i.sl.banner)
                                        .filter(function (e, t) {
                                            return $(t).data("banner-id") === n;
                                        })
                                        .first();
                                })(t.data("banner-id"))),
                                (function (e) {
                                    var t;
                                    e.data("click-stat-sent") || ((t = r(e)) && (wb.stat.sendEvent("BCE", t, !0), e.attr("data-click-stat-sent", !0)));
                                })(o);
                        }
                    });
            },
            sendShownStatistic: t,
            sendAllShownStatistic: function () {
                var e = $(i.sl.shownStat);
                wb.scrollListener.addElements(
                    e,
                    function (e) {
                        t($(e));
                    },
                    !1,
                    0.6
                ),
                    wb.scrollListener.start();
            },
            sendStatisticNow: function () {
                $.each($(i.sl.shownStat), function (e, t) {
                    wb.stat.banners.sendShownStatistic($(t));
                });
            },
            sendShownCarousel: function (e) {
                var t;
                (t = e.find("li:not(.jc-clone)").find(".j-banner")),
                    $.each(t, function (e, t) {
                        wb.stat.banners.sendShownStatistic($(t));
                    });
            },
            callShownVisibleHandlerForCarousel: function (e, t) {
                var n;
                (n = e.find("li").find(".j-banner:not(.j-banner-section)")),
                    wb.scrollListener.addElements(
                        n,
                        function (e) {
                            wb.stat.banners.sendShownStatistic($(e));
                        },
                        !1,
                        t
                    ),
                    wb.scrollListener.start();
            },
            getShownAfterSetActiveEvent: function (n) {
                return function (e) {
                    var t = e.find(".j-banner").first();
                    wb.scrollListener.checkRatio(t, n) && wb.stat.banners.sendShownStatistic(t);
                };
            },
        };
    })());
